{"title":"对 Hexo 博客文章进行加密","date":"2020-03-12T02:20:37.000Z","toc":true,"summary":"有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。","source":"_posts/对-Hexo-博客文章进行加密.md","raw":"---\ntitle: 对 Hexo 博客文章进行加密\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-03-12 10:20:37\npassword:\nsummary: 有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。\n\ntags:\n- Hexo\ncategories:\n- Blog\n---\n\n# 写在前面 #\n\n- 有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。\n\n- 这在wordpress，emlog或其他博客系统中都很容易实现，然而hexo除外。:(\n\n- 为了解决这个问题，我们需要安装“ hexo-blog-encrypt”扩展。\n\n\n# 特性 #\n\n- 一旦你输入了正确的密码，它就会被存储在本地浏览器的localStorage中。按个按钮，密码将会被清空。若博客中又脚本，它将被正确地执行。\n\n- 支持按标签加密。\n\n- 所有的核心功能都是由原生的API所提供的。在Node.js中，我们使用Crypto。在浏览器中，我们使用Web Crypto API。\n\n- PBKDF2，SHA256被用作复制密钥，AES256-CBC被用作加解密，我们还使用HMAC来验证密文的来源，并确保其纠正。\n\n- 广泛地使用Promise来进行异步操作，从而确保线程不被杜塞。\n\n- 过时的浏览器将无法正常显示，因此，请升级您的浏览器。\n\n\n# 安装 #\n\n```javascriptj\nnpm install --save hexo-blog-encrypt\n```\n\n# 快速使用 #\n\n- **将“ <font color=red size=3>password</font>”添加到您的文章信息头就像这样**：\n       \n  \n    ```javascriptj\n    title: Hello World\n    date: 2020-03-13 21:12:21\n    password: muyiio\n    ---\n    ```\n\n\n\n\n\n# 按标签加密 #\n\n- **修改文章信息头如下：**\n\n\n\n```java\ntitle: Hello World\ntags:\n- 加密文章tag\ndate: 2020-03-13 21:12:21\npassword: muyiio\nabstract: 这里有东西被加密了，需要输入密码查看哦。\nmessage: 您好，这里需要密码。\nwrong_pass_message: 抱歉，这个密码看着不太对，请再试试。\nwrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。\n---\n```\n\n\n\n\n\n\n- **对博客根目录<font color=red size=3>_config</font>添加如下字段：**\n\n\n\n```javascriptj\n# 安全\nencrypt: # hexo-blog-encrypt\n  abstract: 这里有东西被加密了，需要输入密码查看哦。\n  message: 您好, 这里需要密码.\n  tags:\n  - {name: tagName, password: 密码A}\n  - {name: tagName, password: 密码B}\n  template: <div id=\"hexo-blog-encrypt\" data-wpm=\"{{hbeWrongPassMessage}}\" data-whm=\"{{hbeWrongHashMessage}}\"><div class=\"hbe-input-container\"><input type=\"password\" id=\"hbePass\" placeholder=\"{{hbeMessage}}\" /><label>{{hbeMessage}}</label><div class=\"bottom-line\"></div></div><script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"{{hbeHmacDigest}}\">{{hbeEncryptedData}}</script></div>\n  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.\n```\n\n\n\n\n\n\n# 对 TOC 文章进行加密 #\n\n如果您有一篇文章使用了<font color=red size=3>TOC</font>，您需要修改模板的部分代码。这里以<font color=red size=3>matery</font>主题作为示例：\n\n- **在<font color=red size=3>hexo/themes/matery/layout/_partial/article.ejs</font>找到<font color=red size=3>article.ejs</font>。**\n\n- **然后找到<font color=red size=3><％post.content％></font>这段代码，通常在<font color=red size=3>30</font>行左右。**\n\n- **使用如下的代码来替代它：**\n  \n    \t\n\n```javascriptj\n<% if(post.toc == true){ %>\n  <div id=\"toc-div\" class=\"toc-article\" <% if (post.encrypt == true) { %>style=\"display:none\" <% } %>>\n    <strong class=\"toc-title\">Index</strong>\n      <% if (post.encrypt == true) { %>\n        <%- toc(post.origin, {list_number: true}) %>\n      <% } else { %>\n        <%- toc(post.content, {list_number: true}) %>\n      <% } %>\n  </div>\n<% } %>\n<%- post.content %>\n```\n\n\n\n# 声明 #\n\n本文转载自作者[MikeCoder](https://github.com/MikeCoder/hexo-blog-encrypt)的<font color=red size=3>hexo-blog-encrypt</font>项目，对有些地方略有修改。\n\n\n\n项目地址：[https://github.com/MikeCoder/hexo-blog-encrypt](https://github.com/MikeCoder/hexo-blog-encrypt)\n\n\n\n发现这个还是挺好玩的~","slug":"对-Hexo-博客文章进行加密","published":true,"updated":"2020-03-15T01:59:08.977Z","_id":"clq6dy4ah0032ikw0kl544xom","comments":true,"layout":"post","photos":[],"link":"","html":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><ul>\n<li><p>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</p>\n</li>\n<li><p>这在wordpress，emlog或其他博客系统中都很容易实现，然而hexo除外。:(</p>\n</li>\n<li><p>为了解决这个问题，我们需要安装“ hexo-blog-encrypt”扩展。</p>\n</li>\n</ul>\n<h1 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h1><ul>\n<li><p>一旦你输入了正确的密码，它就会被存储在本地浏览器的localStorage中。按个按钮，密码将会被清空。若博客中又脚本，它将被正确地执行。</p>\n</li>\n<li><p>支持按标签加密。</p>\n</li>\n<li><p>所有的核心功能都是由原生的API所提供的。在Node.js中，我们使用Crypto。在浏览器中，我们使用Web Crypto API。</p>\n</li>\n<li><p>PBKDF2，SHA256被用作复制密钥，AES256-CBC被用作加解密，我们还使用HMAC来验证密文的来源，并确保其纠正。</p>\n</li>\n<li><p>广泛地使用Promise来进行异步操作，从而确保线程不被杜塞。</p>\n</li>\n<li><p>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</p>\n</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><pre class=\"line-numbers language-javascriptj\"><code class=\"language-javascriptj\">npm install --save hexo-blog-encrypt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h1><ul>\n<li><strong>将“ <font color=\"red\" size=\"3\">password</font>”添加到您的文章信息头就像这样</strong>：</li>\n</ul>\n<pre><code>```javascriptj\ntitle: Hello World\ndate: 2020-03-13 21:12:21\npassword: muyiio\n---\n```</code></pre><h1 id=\"按标签加密\"><a href=\"#按标签加密\" class=\"headerlink\" title=\"按标签加密\"></a>按标签加密</h1><ul>\n<li><strong>修改文章信息头如下：</strong></li>\n</ul>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\">title<span class=\"token operator\">:</span> Hello World\ntags<span class=\"token operator\">:</span>\n<span class=\"token operator\">-</span> 加密文章tag\ndate<span class=\"token operator\">:</span> <span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">03</span><span class=\"token operator\">-</span><span class=\"token number\">13</span> <span class=\"token number\">21</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token number\">21</span>\npassword<span class=\"token operator\">:</span> muyiio\n<span class=\"token keyword\">abstract</span><span class=\"token operator\">:</span> 这里有东西被加密了，需要输入密码查看哦。\nmessage<span class=\"token operator\">:</span> 您好，这里需要密码。\nwrong_pass_message<span class=\"token operator\">:</span> 抱歉，这个密码看着不太对，请再试试。\nwrong_hash_message<span class=\"token operator\">:</span> 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>对博客根目录<font color=\"red\" size=\"3\">_config</font>添加如下字段：</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascriptj\"><code class=\"language-javascriptj\"># 安全\nencrypt: # hexo-blog-encrypt\n  abstract: 这里有东西被加密了，需要输入密码查看哦。\n  message: 您好, 这里需要密码.\n  tags:\n  - {name: tagName, password: 密码A}\n  - {name: tagName, password: 密码B}\n  template: <div id=\"hexo-blog-encrypt\" data-wpm=\"{{hbeWrongPassMessage}}\" data-whm=\"{{hbeWrongHashMessage}}\"><div class=\"hbe-input-container\"><input type=\"password\" id=\"hbePass\" placeholder=\"{{hbeMessage}}\" /><label>{{hbeMessage}}</label><div class=\"bottom-line\"></div></div><script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"{{hbeHmacDigest}}\">{{hbeEncryptedData}}</script></div>\n  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"对-TOC-文章进行加密\"><a href=\"#对-TOC-文章进行加密\" class=\"headerlink\" title=\"对 TOC 文章进行加密\"></a>对 TOC 文章进行加密</h1><p>如果您有一篇文章使用了<font color=\"red\" size=\"3\">TOC</font>，您需要修改模板的部分代码。这里以<font color=\"red\" size=\"3\">matery</font>主题作为示例：</p>\n<ul>\n<li><p><strong>在<font color=\"red\" size=\"3\">hexo/themes/matery/layout/_partial/article.ejs</font>找到<font color=\"red\" size=\"3\">article.ejs</font>。</strong></p>\n</li>\n<li><p><strong>然后找到<font color=\"red\" size=\"3\">&lt;％post.content％&gt;</font>这段代码，通常在<font color=\"red\" size=\"3\">30</font>行左右。</strong></p>\n</li>\n<li><p><strong>使用如下的代码来替代它：</strong></p>\n</li>\n</ul>\n<pre class=\"line-numbers language-javascriptj\"><code class=\"language-javascriptj\"><% if(post.toc == true){ %>\n  <div id=\"toc-div\" class=\"toc-article\" <% if (post.encrypt == true) { %>style=\"display:none\" <% } %>>\n    <strong class=\"toc-title\">Index</strong>\n      <% if (post.encrypt == true) { %>\n        <%- toc(post.origin, {list_number: true}) %>\n      <% } else { %>\n        <%- toc(post.content, {list_number: true}) %>\n      <% } %>\n  </div>\n<% } %>\n<%- post.content %><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>本文转载自作者<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">MikeCoder</a>的<font color=\"red\" size=\"3\">hexo-blog-encrypt</font>项目，对有些地方略有修改。</p>\n<p>项目地址：<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt</a></p>\n<p>发现这个还是挺好玩的~</p>\n","excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><ul>\n<li><p>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</p>\n</li>\n<li><p>这在wordpress，emlog或其他博客系统中都很容易实现，然而hexo除外。:(</p>\n</li>\n<li><p>为了解决这个问题，我们需要安装“ hexo-blog-encrypt”扩展。</p>\n</li>\n</ul>\n<h1 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h1><ul>\n<li><p>一旦你输入了正确的密码，它就会被存储在本地浏览器的localStorage中。按个按钮，密码将会被清空。若博客中又脚本，它将被正确地执行。</p>\n</li>\n<li><p>支持按标签加密。</p>\n</li>\n<li><p>所有的核心功能都是由原生的API所提供的。在Node.js中，我们使用Crypto。在浏览器中，我们使用Web Crypto API。</p>\n</li>\n<li><p>PBKDF2，SHA256被用作复制密钥，AES256-CBC被用作加解密，我们还使用HMAC来验证密文的来源，并确保其纠正。</p>\n</li>\n<li><p>广泛地使用Promise来进行异步操作，从而确保线程不被杜塞。</p>\n</li>\n<li><p>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</p>\n</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><pre><code class=\"javascriptj\">npm install --save hexo-blog-encrypt</code></pre>\n<h1 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h1><ul>\n<li><strong>将“ <font color=\"red\" size=\"3\">password</font>”添加到您的文章信息头就像这样</strong>：</li>\n</ul>\n<pre><code>```javascriptj\ntitle: Hello World\ndate: 2020-03-13 21:12:21\npassword: muyiio\n---\n```</code></pre><h1 id=\"按标签加密\"><a href=\"#按标签加密\" class=\"headerlink\" title=\"按标签加密\"></a>按标签加密</h1><ul>\n<li><strong>修改文章信息头如下：</strong></li>\n</ul>\n<pre><code class=\"java\">title: Hello World\ntags:\n- 加密文章tag\ndate: 2020-03-13 21:12:21\npassword: muyiio\nabstract: 这里有东西被加密了，需要输入密码查看哦。\nmessage: 您好，这里需要密码。\nwrong_pass_message: 抱歉，这个密码看着不太对，请再试试。\nwrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。\n---</code></pre>\n<ul>\n<li><strong>对博客根目录<font color=\"red\" size=\"3\">_config</font>添加如下字段：</strong></li>\n</ul>\n<pre><code class=\"javascriptj\"># 安全\nencrypt: # hexo-blog-encrypt\n  abstract: 这里有东西被加密了，需要输入密码查看哦。\n  message: 您好, 这里需要密码.\n  tags:\n  - {name: tagName, password: 密码A}\n  - {name: tagName, password: 密码B}\n  template: &lt;div id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;{{hbeWrongPassMessage}}&quot; data-whm=&quot;{{hbeWrongHashMessage}}&quot;&gt;&lt;div class=&quot;hbe-input-container&quot;&gt;&lt;input type=&quot;password&quot; id=&quot;hbePass&quot; placeholder=&quot;{{hbeMessage}}&quot; /&gt;&lt;label&gt;{{hbeMessage}}&lt;/label&gt;&lt;div class=&quot;bottom-line&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;{{hbeHmacDigest}}&quot;&gt;{{hbeEncryptedData}}&lt;/script&gt;&lt;/div&gt;\n  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.\n  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</code></pre>\n<h1 id=\"对-TOC-文章进行加密\"><a href=\"#对-TOC-文章进行加密\" class=\"headerlink\" title=\"对 TOC 文章进行加密\"></a>对 TOC 文章进行加密</h1><p>如果您有一篇文章使用了<font color=\"red\" size=\"3\">TOC</font>，您需要修改模板的部分代码。这里以<font color=\"red\" size=\"3\">matery</font>主题作为示例：</p>\n<ul>\n<li><p><strong>在<font color=\"red\" size=\"3\">hexo/themes/matery/layout/_partial/article.ejs</font>找到<font color=\"red\" size=\"3\">article.ejs</font>。</strong></p>\n</li>\n<li><p><strong>然后找到<font color=\"red\" size=\"3\">&lt;％post.content％&gt;</font>这段代码，通常在<font color=\"red\" size=\"3\">30</font>行左右。</strong></p>\n</li>\n<li><p><strong>使用如下的代码来替代它：</strong></p>\n</li>\n</ul>\n<pre><code class=\"javascriptj\">&lt;% if(post.toc == true){ %&gt;\n  &lt;div id=&quot;toc-div&quot; class=&quot;toc-article&quot; &lt;% if (post.encrypt == true) { %&gt;style=&quot;display:none&quot; &lt;% } %&gt;&gt;\n    &lt;strong class=&quot;toc-title&quot;&gt;Index&lt;/strong&gt;\n      &lt;% if (post.encrypt == true) { %&gt;\n        &lt;%- toc(post.origin, {list_number: true}) %&gt;\n      &lt;% } else { %&gt;\n        &lt;%- toc(post.content, {list_number: true}) %&gt;\n      &lt;% } %&gt;\n  &lt;/div&gt;\n&lt;% } %&gt;\n&lt;%- post.content %&gt;</code></pre>\n<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>本文转载自作者<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">MikeCoder</a>的<font color=\"red\" size=\"3\">hexo-blog-encrypt</font>项目，对有些地方略有修改。</p>\n<p>项目地址：<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt</a></p>\n<p>发现这个还是挺好玩的~</p>\n","path":"dui-hexo-bo-ke-wen-zhang-jin-xing-jia-mi.html","permalink":"https://www.yshawlon.cn/dui-hexo-bo-ke-wen-zhang-jin-xing-jia-mi.html","tags":[{"name":"Hexo","_id":"clq6dy489000dikw04lptx64o","slug":"Hexo","path":"tags/Hexo/","permalink":"https://www.yshawlon.cn/tags/Hexo/","length":12}],"categories":[{"name":"Blog","_id":"clq6dy47z0005ikw0td637o94","slug":"Blog","path":"categories/Blog/","permalink":"https://www.yshawlon.cn/categories/Blog/","length":12}],"prev":{"title":"使用 PicGo+腾讯云对象存储COS 作为图床","date":"2020-03-27T13:34:21.000Z","summary":"选择PicGo+对象存储COS图床来储存文章图片，优化访问速度也为了更加方便。","slug":"使用-PicGo-腾讯云对象存储COS-作为图床","published":true,"updated":"2021-05-18T05:00:46.180Z","_id":"clq6dy4a10029ikw0qaocnuzb","layout":"post","photos":[],"link":"","excerpt":"","path":"shi-yong-picgo-teng-xun-yun-dui-xiang-cun-chu-cos-zuo-wei-tu-chuang.html","permalink":"https://www.yshawlon.cn/shi-yong-picgo-teng-xun-yun-dui-xiang-cun-chu-cos-zuo-wei-tu-chuang.html","__post":true},"next":{"title":"VMware 安装 CentOS 8.1 完整教程 ","date":"2020-03-05T10:29:16.000Z","summary":"这篇文章详细的记录我安装CentOS 8.1的过程，其他CentOS 8系列的发行版本安装可作参考。","slug":"VMware-安装-CentOS-8-1-完整教程","published":true,"updated":"2021-05-18T10:28:40.826Z","_id":"clq6dy491001gikw0dbvnaos3","layout":"post","photos":[],"link":"","excerpt":"","path":"vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng.html","permalink":"https://www.yshawlon.cn/vmware-an-zhuang-centos-8-1-wan-zheng-jiao-cheng.html","__post":true},"__post":true}