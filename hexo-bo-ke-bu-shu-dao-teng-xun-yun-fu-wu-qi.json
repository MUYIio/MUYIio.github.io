{"title":"Hexo 博客部署到腾讯云服务器","date":"2020-03-28T12:47:51.000Z","toc":true,"summary":"相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。","source":"_posts/Hexo-博客部署到腾讯云服务器.md","raw":"---\n\n\ntitle: Hexo 博客部署到腾讯云服务器\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-03-28 20:47:51\npassword:\nsummary: 相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。\ntags:\n- Hexo\ncategories:\n- 服务器\n---\n\n\n\n\n\n>  相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。\n\n\n\n**这篇教程没有使用宝塔Linux面板部署，浏览器访问会显示不安全，如果Hexo博客只部署到服务器，不部署到GitHub或者coding，那么请参照我的另一篇文章，使用宝塔面板更为方便，主要是为了部署SSL。**\n\n\n\n**[Hexo博客部署到腾讯云服务器(使用宝塔面板)](https://www.muyiio.com/2020/04/10/shi-yong-bao-ta-mian-ban-yi-jian-bu-shu-hexo-bo-ke/)**\n\n\n\n我的服务器\n\n- 系统 `CentOS 7.5 64bit`\n\n- 配置 `标准型S2/1核/2GB/1Mbps`\n\n服务器需要的环境\n\n- 环境：`git`，`Nginx`\n- 使用`git` 自动化部署发布\n\n打开腾讯云，进入【云服务器】→【登录】\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/02.png)\n\n\n\n>  初始密码在右上角消息里面有\n\n\n\n# 1】Git安装及配置\n\n\n\n### 一、安装依赖库和编译工具\n\n- 安装依赖库：\n\n  ```c++c\n  yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel \n  ```\n\n\n\n然后会出现：\n\n```\nIs this ok [y/d/N]:\n```\n\n输入`y`继续安装，后面也一样。\n\n\n\n- 安装编译工具：\n\n  ```\n  yum install gcc perl-ExtUtils-MakeMaker package \n  ```\n\n\n\n### 二、下载 git并解压编译安装\n\n\n\n- 查看服务器已有的git版本\n\n```\ngit --version\n```\n\n\n\n然后会看到：\n\n```\ngit version 1.8.3.1\n```\n\n\n\n> 但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。\n\n\n\n- 将陈旧版本的git删除\n\n```\nyum remove git\n```\n\n\n\n- 选择一个目录来存放下载下来的 git 安装包。这里选择了`/usr/local/src` 目录\n\n  ```\n  cd /usr/local/src  \n  ```\n\n  \n\n- 下载最新版git到`/usr/local/src`，可以在官网找到版本，目前最新版本是2.26.0。\n\n```\nwget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz\n```\n\n\n\n- 解压到当前目录\n\n```\ntar -zvxf git-2.26.0.tar.gz\n```\n\n\n\n- 进入 `git-2.26.0.tar.gz` 目录下\n\n```\ncd git-2.26.0\n```\n\n\n\n- 执行编译\n\n```\nmake prefix=/usr/local/git all\n```\n\n\n\n- 安装 git 到 /usr/local/git 目录下\n\n```\nmake prefix=/usr/local/git install\n```\n\n\n\n### 三、配置 git 环境变量\n\n- 打开环境变量配置文件\n\n```\nvim /etc/profile\n```\n\n按i进入编辑模式，按向下键到底部，添加下面两行命令：\n\n```\nPATH=$PATH:/usr/local/git/bin   # git 的目录\nexport PATH\n```\n\n**按`esc`退出，按`:wq`保存编辑。(注意是先`:`再是`wq`)**\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004810.png)\n\n\n\n- 使 git 环境变量生效\n\n```\n source /etc/profile\n```\n\n\n\n- 验证安装完成，查看 git 的版本号\n\n```\ngit --version\n```\n\n这时候我们的git版本已经变成了：\n\n```\ngit version 2.26.0\n```\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004827.png)\n\n\n\n###  四、创建 git 用户\n\n- 创建git用户\n\n```\nadduser git\n```\n\n\n\n- 获取权限\n\n```\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n\n\n按 `i` 键进入文件的编辑模式，按向下键找到如下字段\n\n```\nroot    ALL=(ALL)       ALL\n```\n\n在其后面增加一句：\n\n```\ngit     ALL=(ALL)       ALL\n```\n\n**按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`:`，然后输入`wq`回车）**\n\n\n\n- 退回权限\n\n```\nchmod 400 /etc/sudoers\n```\n\n\n\n### 五、配置密钥\n\n- 创建密钥\n\n来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在`c/用户/.ssh`下。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004830.png)\n\n如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤\n\n[Github + Hexo 搭建个人博客超详细教程](https://www.muyiio.com/2020/02/18/1/)\n\n\n\n- 将密钥保存在服务器(之前有密钥的直接复制就可以)\n\n将`id_rsa.pub`里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹\n\n```\nsu git\nmkdir ~/.ssh\n```\n\n\n\n创建`.ssh/authorized_keys`文件，打开`authorized_keys`文件并将刚才在本地机器复制的内容拷贝其中并保存\n\n```\nvim ~/.ssh/authorized_keys\n```\n\n**按`i`进入编辑模式粘贴完按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`:`，然后输入`wq`回车）**\n\n\n\n- 修改权限\n\n```\nchmod 755 ~\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n```\n\n\n\n- 测试本地连接服务器\n\n  在本地电脑git bash here\n\n```\n//yourIp为远程服务器的ip地址\nssh -v git@yourIp     //yourIp为你的服务器ip\n```\n\n\n\n如图则证明本地机器与远程机器已经接通\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004834.png)\n\n\n\n### 六、创建git仓库\n\n- 切换到root用户，创建一个目录用于存储网站的根目录\n\n```\nsu root\n```\n\n\n\n- 创建网站的根目录\n\n```\nmkdir /home/hexo\n```\n\n\n\n- 给予权限\n\n```\nchown gitgit -R //hexo\n```\n\n\n\n# 2】安装Nginx\n\n> *Nginx* (engine x) 是一个高性能的[HTTP](https://baike.baidu.com/item/HTTP)和[反向代理](https://baike.baidu.com/item/反向代理/7793488)web服务器，同时也提供了IMAP/POP3/SMTP[服务](https://baike.baidu.com/item/服务/100571)\n\n\n\n### 一、安装配置Nginx\n\n- 安装Nginx\n\n```\nyum install -y nginx\n```\n\n\n\n- 配置Nginx\n\n```\nnginx -t\n```\n\n\n\n使用vim打开nginx.conf文件\n\n```\nvim /etc/nginx/nginx.conf\n```\n\n\n\n**按`i`进入编辑模式粘贴完按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`:`，然后输入`wq`回车）**\n\n\n\n```j\nserver {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  www.muyiio.com;   //你的博客域名\n        root         /home/hexo;       //git仓库目录\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    }\nj\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n```\n\n\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004838.png)\n\n\n\n- 启动Nginx\n\n```\nsystemctl start nginx.service\n```\n\n\n\n- 重启Nginx\n\n```\nsystemctl restart nginx.service\n```\n\n\n\n### 二、自动化部署\n\n- 获取root权限\n\n```\nsu root\n```\n\n\n\n- 建立git仓库\n\n```\ncd /home/git\ngit init --bare blog.git\n```\n\n\n\n- 修改blog.git权限\n\n```\nchown git:git -R blog.git\n```\n\n\n\n\n\n- 在 `/home/hexo/blog.git` 下，有一个自动生成的 `hooks` 文件夹，我们创建一个新的 `git` 钩子 `post-receive`，用于自动部署。\n\n```\nvim blog.git/hooks/post-receive\n```\n\n\n\n- **按 `i` 键进入文件的编辑模式**，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录\n\n```\n #!/bin/bash \n git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f \n```\n\n**按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`：`，然后输入`wq`回车）**\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004843.png)\n\n\n\n- 修改文件权限，使得其可执行。\n\n```\nchmod +x /home/git/blog.git/hooks/post-receive\n```\n\n\n\n\n\n# 3】配置本地Hexo\n\n- 博客根目录_config下增加\n\n```\ndeploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支\n```\n\n\n\n- 部署\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n\n\n- 输入`hexo d`的时候，会要求你输入自己的服务器密码\n\n```\nBranch 'master' set up to track remote branch 'master' from 'https://e.coding.net/godxiaolon/godxiaolon.git'.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82's password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -> master\nBranch 'master' set up to track remote branch 'master' from 'root@118.25.27.52:/home/git/hexoBlog.git'.\nINFO  Deploy done: git\n```\n\n>  输入密码不会有显示，输完回车就可以\n\n\n\n- **如果出现`bash: git-receive-pack: command not found`,则运行：**\n\n```\nsudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack\n```\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/部署服务器/03.png)\n\n\n\n- 访问服务器ip，看看有没有成功\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004847.png)\n\n\n\n最后，发现其实挺简单的，快去访问你的服务器`ip`看看有没有部署成功吧","slug":"Hexo-博客部署到腾讯云服务器","published":true,"updated":"2021-05-18T08:41:07.049Z","_id":"clq6dy48x0018ikw0a0eoerdl","comments":true,"layout":"post","photos":[],"link":"","html":"<blockquote>\n<p> 相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。</p>\n</blockquote>\n<p><strong>这篇教程没有使用宝塔Linux面板部署，浏览器访问会显示不安全，如果Hexo博客只部署到服务器，不部署到GitHub或者coding，那么请参照我的另一篇文章，使用宝塔面板更为方便，主要是为了部署SSL。</strong></p>\n<p><strong><a href=\"https://www.muyiio.com/2020/04/10/shi-yong-bao-ta-mian-ban-yi-jian-bu-shu-hexo-bo-ke/\" target=\"_blank\" rel=\"noopener\">Hexo博客部署到腾讯云服务器(使用宝塔面板)</a></strong></p>\n<p>我的服务器</p>\n<ul>\n<li><p>系统 <code>CentOS 7.5 64bit</code></p>\n</li>\n<li><p>配置 <code>标准型S2/1核/2GB/1Mbps</code></p>\n</li>\n</ul>\n<p>服务器需要的环境</p>\n<ul>\n<li>环境：<code>git</code>，<code>Nginx</code></li>\n<li>使用<code>git</code> 自动化部署发布</li>\n</ul>\n<p>打开腾讯云，进入【云服务器】→【登录】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/02.png\" alt></p>\n<blockquote>\n<p> 初始密码在右上角消息里面有</p>\n</blockquote>\n<h1 id=\"1】Git安装及配置\"><a href=\"#1】Git安装及配置\" class=\"headerlink\" title=\"1】Git安装及配置\"></a>1】Git安装及配置</h1><h3 id=\"一、安装依赖库和编译工具\"><a href=\"#一、安装依赖库和编译工具\" class=\"headerlink\" title=\"一、安装依赖库和编译工具\"></a>一、安装依赖库和编译工具</h3><ul>\n<li><p>安装依赖库：</p>\n<pre class=\"line-numbers language-c++c\"><code class=\"language-c++c\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<p>然后会出现：</p>\n<pre><code>Is this ok [y/d/N]:</code></pre><p>输入<code>y</code>继续安装，后面也一样。</p>\n<ul>\n<li><p>安装编译工具：</p>\n<pre><code>yum install gcc perl-ExtUtils-MakeMaker package </code></pre></li>\n</ul>\n<h3 id=\"二、下载-git并解压编译安装\"><a href=\"#二、下载-git并解压编译安装\" class=\"headerlink\" title=\"二、下载 git并解压编译安装\"></a>二、下载 git并解压编译安装</h3><ul>\n<li>查看服务器已有的git版本</li>\n</ul>\n<pre><code>git --version</code></pre><p>然后会看到：</p>\n<pre><code>git version 1.8.3.1</code></pre><blockquote>\n<p>但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。</p>\n</blockquote>\n<ul>\n<li>将陈旧版本的git删除</li>\n</ul>\n<pre><code>yum remove git</code></pre><ul>\n<li><p>选择一个目录来存放下载下来的 git 安装包。这里选择了<code>/usr/local/src</code> 目录</p>\n<pre><code>cd /usr/local/src  </code></pre></li>\n</ul>\n<ul>\n<li>下载最新版git到<code>/usr/local/src</code>，可以在官网找到版本，目前最新版本是2.26.0。</li>\n</ul>\n<pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz</code></pre><ul>\n<li>解压到当前目录</li>\n</ul>\n<pre><code>tar -zvxf git-2.26.0.tar.gz</code></pre><ul>\n<li>进入 <code>git-2.26.0.tar.gz</code> 目录下</li>\n</ul>\n<pre><code>cd git-2.26.0</code></pre><ul>\n<li>执行编译</li>\n</ul>\n<pre><code>make prefix=/usr/local/git all</code></pre><ul>\n<li>安装 git 到 /usr/local/git 目录下</li>\n</ul>\n<pre><code>make prefix=/usr/local/git install</code></pre><h3 id=\"三、配置-git-环境变量\"><a href=\"#三、配置-git-环境变量\" class=\"headerlink\" title=\"三、配置 git 环境变量\"></a>三、配置 git 环境变量</h3><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<pre><code>vim /etc/profile</code></pre><p>按i进入编辑模式，按向下键到底部，添加下面两行命令：</p>\n<pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录\nexport PATH</code></pre><p><strong>按<code>esc</code>退出，按<code>:wq</code>保存编辑。(注意是先<code>:</code>再是<code>wq</code>)</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004810.png\" alt></p>\n<ul>\n<li>使 git 环境变量生效</li>\n</ul>\n<pre><code> source /etc/profile</code></pre><ul>\n<li>验证安装完成，查看 git 的版本号</li>\n</ul>\n<pre><code>git --version</code></pre><p>这时候我们的git版本已经变成了：</p>\n<pre><code>git version 2.26.0</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004827.png\" alt></p>\n<h3 id=\"四、创建-git-用户\"><a href=\"#四、创建-git-用户\" class=\"headerlink\" title=\"四、创建 git 用户\"></a>四、创建 git 用户</h3><ul>\n<li>创建git用户</li>\n</ul>\n<pre><code>adduser git</code></pre><ul>\n<li>获取权限</li>\n</ul>\n<pre><code>chmod 740 /etc/sudoers\nvim /etc/sudoers</code></pre><p>按 <code>i</code> 键进入文件的编辑模式，按向下键找到如下字段</p>\n<pre><code>root    ALL=(ALL)       ALL</code></pre><p>在其后面增加一句：</p>\n<pre><code>git     ALL=(ALL)       ALL</code></pre><p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>退回权限</li>\n</ul>\n<pre><code>chmod 400 /etc/sudoers</code></pre><h3 id=\"五、配置密钥\"><a href=\"#五、配置密钥\" class=\"headerlink\" title=\"五、配置密钥\"></a>五、配置密钥</h3><ul>\n<li>创建密钥</li>\n</ul>\n<p>来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在<code>c/用户/.ssh</code>下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004830.png\" alt></p>\n<p>如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤</p>\n<p><a href=\"https://www.muyiio.com/2020/02/18/1/\" target=\"_blank\" rel=\"noopener\">Github + Hexo 搭建个人博客超详细教程</a></p>\n<ul>\n<li>将密钥保存在服务器(之前有密钥的直接复制就可以)</li>\n</ul>\n<p>将<code>id_rsa.pub</code>里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p>\n<pre><code>su git\nmkdir ~/.ssh</code></pre><p>创建<code>.ssh/authorized_keys</code>文件，打开<code>authorized_keys</code>文件并将刚才在本地机器复制的内容拷贝其中并保存</p>\n<pre><code>vim ~/.ssh/authorized_keys</code></pre><p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>修改权限</li>\n</ul>\n<pre><code>chmod 755 ~\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys</code></pre><ul>\n<li><p>测试本地连接服务器</p>\n<p>在本地电脑git bash here</p>\n</li>\n</ul>\n<pre><code>//yourIp为远程服务器的ip地址\nssh -v git@yourIp     //yourIp为你的服务器ip</code></pre><p>如图则证明本地机器与远程机器已经接通</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004834.png\" alt></p>\n<h3 id=\"六、创建git仓库\"><a href=\"#六、创建git仓库\" class=\"headerlink\" title=\"六、创建git仓库\"></a>六、创建git仓库</h3><ul>\n<li>切换到root用户，创建一个目录用于存储网站的根目录</li>\n</ul>\n<pre><code>su root</code></pre><ul>\n<li>创建网站的根目录</li>\n</ul>\n<pre><code>mkdir /home/hexo</code></pre><ul>\n<li>给予权限</li>\n</ul>\n<pre><code>chown gitgit -R //hexo</code></pre><h1 id=\"2】安装Nginx\"><a href=\"#2】安装Nginx\" class=\"headerlink\" title=\"2】安装Nginx\"></a>2】安装Nginx</h1><blockquote>\n<p><em>Nginx</em> (engine x) 是一个高性能的<a href=\"https://baike.baidu.com/item/HTTP\" target=\"_blank\" rel=\"noopener\">HTTP</a>和<a href=\"https://baike.baidu.com/item/反向代理/7793488\" target=\"_blank\" rel=\"noopener\">反向代理</a>web服务器，同时也提供了IMAP/POP3/SMTP<a href=\"https://baike.baidu.com/item/服务/100571\" target=\"_blank\" rel=\"noopener\">服务</a></p>\n</blockquote>\n<h3 id=\"一、安装配置Nginx\"><a href=\"#一、安装配置Nginx\" class=\"headerlink\" title=\"一、安装配置Nginx\"></a>一、安装配置Nginx</h3><ul>\n<li>安装Nginx</li>\n</ul>\n<pre><code>yum install -y nginx</code></pre><ul>\n<li>配置Nginx</li>\n</ul>\n<pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件</p>\n<pre><code>vim /etc/nginx/nginx.conf</code></pre><p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<pre class=\"line-numbers language-j\"><code class=\"language-j\">server <span class=\"token verb keyword\">{</span>\n        listen       <span class=\"token number\">80</span> default_server<span class=\"token verb keyword\">;</span>\n        listen       <span class=\"token verb keyword\">[:</span><span class=\"token conjunction variable\">:</span><span class=\"token verb keyword\">]</span><span class=\"token conjunction variable\">:</span><span class=\"token number\">80</span> default_server<span class=\"token verb keyword\">;</span>\n        server_name  www<span class=\"token conjunction variable\">.</span>muyii<span class=\"token verb keyword\">o.</span>com<span class=\"token verb keyword\">;</span>   <span class=\"token adverb builtin\">/</span><span class=\"token adverb builtin\">/</span>你的博客域名\n        root         <span class=\"token adverb builtin\">/</span>home<span class=\"token adverb builtin\">/</span>hexo<span class=\"token verb keyword\">;</span>       <span class=\"token adverb builtin\">/</span><span class=\"token adverb builtin\">/</span>git仓库目录\n    <span class=\"token verb keyword\">#</span> Load configuration files for the default server block<span class=\"token conjunction variable\">.</span>\n    include <span class=\"token adverb builtin\">/</span>etc<span class=\"token adverb builtin\">/</span>nginx<span class=\"token adverb builtin\">/</span>defaul<span class=\"token adverb builtin\">t.</span>d<span class=\"token adverb builtin\">/</span><span class=\"token verb keyword\">*.</span>conf<span class=\"token verb keyword\">;</span>\n\n    location <span class=\"token adverb builtin\">/</span> <span class=\"token verb keyword\">{</span>\n    <span class=\"token adverb builtin\">}</span>\nj\n    error_page <span class=\"token number\">404</span> <span class=\"token adverb builtin\">/</span><span class=\"token number\">404</span><span class=\"token conjunction variable\">.</span>html<span class=\"token verb keyword\">;</span>\n        location <span class=\"token verb keyword\">=</span> <span class=\"token adverb builtin\">/</span><span class=\"token number\">40</span>x<span class=\"token conjunction variable\">.</span>html <span class=\"token verb keyword\">{</span>\n    <span class=\"token adverb builtin\">}</span>\n\n    error_page <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span> <span class=\"token adverb builtin\">/</span><span class=\"token number\">50</span>x<span class=\"token conjunction variable\">.</span>html<span class=\"token verb keyword\">;</span>\n        location <span class=\"token verb keyword\">=</span> <span class=\"token adverb builtin\">/</span><span class=\"token number\">50</span>x<span class=\"token conjunction variable\">.</span>html <span class=\"token verb keyword\">{</span>\n    <span class=\"token adverb builtin\">}</span>\n<span class=\"token adverb builtin\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004838.png\" alt></p>\n<ul>\n<li>启动Nginx</li>\n</ul>\n<pre><code>systemctl start nginx.service</code></pre><ul>\n<li>重启Nginx</li>\n</ul>\n<pre><code>systemctl restart nginx.service</code></pre><h3 id=\"二、自动化部署\"><a href=\"#二、自动化部署\" class=\"headerlink\" title=\"二、自动化部署\"></a>二、自动化部署</h3><ul>\n<li>获取root权限</li>\n</ul>\n<pre><code>su root</code></pre><ul>\n<li>建立git仓库</li>\n</ul>\n<pre><code>cd /home/git\ngit init --bare blog.git</code></pre><ul>\n<li>修改blog.git权限</li>\n</ul>\n<pre><code>chown git:git -R blog.git</code></pre><ul>\n<li>在 <code>/home/hexo/blog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹，我们创建一个新的 <code>git</code> 钩子 <code>post-receive</code>，用于自动部署。</li>\n</ul>\n<pre><code>vim blog.git/hooks/post-receive</code></pre><ul>\n<li><strong>按 <code>i</code> 键进入文件的编辑模式</strong>，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</li>\n</ul>\n<pre><code> #!/bin/bash \n git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre><p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>：</code>，然后输入<code>wq</code>回车）</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004843.png\" alt></p>\n<ul>\n<li>修改文件权限，使得其可执行。</li>\n</ul>\n<pre><code>chmod +x /home/git/blog.git/hooks/post-receive</code></pre><h1 id=\"3】配置本地Hexo\"><a href=\"#3】配置本地Hexo\" class=\"headerlink\" title=\"3】配置本地Hexo\"></a>3】配置本地Hexo</h1><ul>\n<li>博客根目录_config下增加</li>\n</ul>\n<pre><code>deploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支</code></pre><ul>\n<li>部署</li>\n</ul>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><ul>\n<li>输入<code>hexo d</code>的时候，会要求你输入自己的服务器密码</li>\n</ul>\n<pre><code>Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;https://e.coding.net/godxiaolon/godxiaolon.git&#39;.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82&#39;s password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -&gt; master\nBranch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;root@118.25.27.52:/home/git/hexoBlog.git&#39;.\nINFO  Deploy done: git</code></pre><blockquote>\n<p> 输入密码不会有显示，输完回车就可以</p>\n</blockquote>\n<ul>\n<li><strong>如果出现<code>bash: git-receive-pack: command not found</code>,则运行：</strong></li>\n</ul>\n<pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/03.png\" alt></p>\n<ul>\n<li>访问服务器ip，看看有没有成功</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004847.png\" alt></p>\n<p>最后，发现其实挺简单的，快去访问你的服务器<code>ip</code>看看有没有部署成功吧</p>\n","excerpt":"","more":"<blockquote>\n<p> 相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。</p>\n</blockquote>\n<p><strong>这篇教程没有使用宝塔Linux面板部署，浏览器访问会显示不安全，如果Hexo博客只部署到服务器，不部署到GitHub或者coding，那么请参照我的另一篇文章，使用宝塔面板更为方便，主要是为了部署SSL。</strong></p>\n<p><strong><a href=\"https://www.muyiio.com/2020/04/10/shi-yong-bao-ta-mian-ban-yi-jian-bu-shu-hexo-bo-ke/\" target=\"_blank\" rel=\"noopener\">Hexo博客部署到腾讯云服务器(使用宝塔面板)</a></strong></p>\n<p>我的服务器</p>\n<ul>\n<li><p>系统 <code>CentOS 7.5 64bit</code></p>\n</li>\n<li><p>配置 <code>标准型S2/1核/2GB/1Mbps</code></p>\n</li>\n</ul>\n<p>服务器需要的环境</p>\n<ul>\n<li>环境：<code>git</code>，<code>Nginx</code></li>\n<li>使用<code>git</code> 自动化部署发布</li>\n</ul>\n<p>打开腾讯云，进入【云服务器】→【登录】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/02.png\" alt></p>\n<blockquote>\n<p> 初始密码在右上角消息里面有</p>\n</blockquote>\n<h1 id=\"1】Git安装及配置\"><a href=\"#1】Git安装及配置\" class=\"headerlink\" title=\"1】Git安装及配置\"></a>1】Git安装及配置</h1><h3 id=\"一、安装依赖库和编译工具\"><a href=\"#一、安装依赖库和编译工具\" class=\"headerlink\" title=\"一、安装依赖库和编译工具\"></a>一、安装依赖库和编译工具</h3><ul>\n<li><p>安装依赖库：</p>\n<pre><code class=\"c++c\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel </code></pre>\n</li>\n</ul>\n<p>然后会出现：</p>\n<pre><code>Is this ok [y/d/N]:</code></pre><p>输入<code>y</code>继续安装，后面也一样。</p>\n<ul>\n<li><p>安装编译工具：</p>\n<pre><code>yum install gcc perl-ExtUtils-MakeMaker package </code></pre></li>\n</ul>\n<h3 id=\"二、下载-git并解压编译安装\"><a href=\"#二、下载-git并解压编译安装\" class=\"headerlink\" title=\"二、下载 git并解压编译安装\"></a>二、下载 git并解压编译安装</h3><ul>\n<li>查看服务器已有的git版本</li>\n</ul>\n<pre><code>git --version</code></pre><p>然后会看到：</p>\n<pre><code>git version 1.8.3.1</code></pre><blockquote>\n<p>但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。</p>\n</blockquote>\n<ul>\n<li>将陈旧版本的git删除</li>\n</ul>\n<pre><code>yum remove git</code></pre><ul>\n<li><p>选择一个目录来存放下载下来的 git 安装包。这里选择了<code>/usr/local/src</code> 目录</p>\n<pre><code>cd /usr/local/src  </code></pre></li>\n</ul>\n<ul>\n<li>下载最新版git到<code>/usr/local/src</code>，可以在官网找到版本，目前最新版本是2.26.0。</li>\n</ul>\n<pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz</code></pre><ul>\n<li>解压到当前目录</li>\n</ul>\n<pre><code>tar -zvxf git-2.26.0.tar.gz</code></pre><ul>\n<li>进入 <code>git-2.26.0.tar.gz</code> 目录下</li>\n</ul>\n<pre><code>cd git-2.26.0</code></pre><ul>\n<li>执行编译</li>\n</ul>\n<pre><code>make prefix=/usr/local/git all</code></pre><ul>\n<li>安装 git 到 /usr/local/git 目录下</li>\n</ul>\n<pre><code>make prefix=/usr/local/git install</code></pre><h3 id=\"三、配置-git-环境变量\"><a href=\"#三、配置-git-环境变量\" class=\"headerlink\" title=\"三、配置 git 环境变量\"></a>三、配置 git 环境变量</h3><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<pre><code>vim /etc/profile</code></pre><p>按i进入编辑模式，按向下键到底部，添加下面两行命令：</p>\n<pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录\nexport PATH</code></pre><p><strong>按<code>esc</code>退出，按<code>:wq</code>保存编辑。(注意是先<code>:</code>再是<code>wq</code>)</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004810.png\" alt></p>\n<ul>\n<li>使 git 环境变量生效</li>\n</ul>\n<pre><code> source /etc/profile</code></pre><ul>\n<li>验证安装完成，查看 git 的版本号</li>\n</ul>\n<pre><code>git --version</code></pre><p>这时候我们的git版本已经变成了：</p>\n<pre><code>git version 2.26.0</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004827.png\" alt></p>\n<h3 id=\"四、创建-git-用户\"><a href=\"#四、创建-git-用户\" class=\"headerlink\" title=\"四、创建 git 用户\"></a>四、创建 git 用户</h3><ul>\n<li>创建git用户</li>\n</ul>\n<pre><code>adduser git</code></pre><ul>\n<li>获取权限</li>\n</ul>\n<pre><code>chmod 740 /etc/sudoers\nvim /etc/sudoers</code></pre><p>按 <code>i</code> 键进入文件的编辑模式，按向下键找到如下字段</p>\n<pre><code>root    ALL=(ALL)       ALL</code></pre><p>在其后面增加一句：</p>\n<pre><code>git     ALL=(ALL)       ALL</code></pre><p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>退回权限</li>\n</ul>\n<pre><code>chmod 400 /etc/sudoers</code></pre><h3 id=\"五、配置密钥\"><a href=\"#五、配置密钥\" class=\"headerlink\" title=\"五、配置密钥\"></a>五、配置密钥</h3><ul>\n<li>创建密钥</li>\n</ul>\n<p>来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在<code>c/用户/.ssh</code>下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004830.png\" alt></p>\n<p>如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤</p>\n<p><a href=\"https://www.muyiio.com/2020/02/18/1/\" target=\"_blank\" rel=\"noopener\">Github + Hexo 搭建个人博客超详细教程</a></p>\n<ul>\n<li>将密钥保存在服务器(之前有密钥的直接复制就可以)</li>\n</ul>\n<p>将<code>id_rsa.pub</code>里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p>\n<pre><code>su git\nmkdir ~/.ssh</code></pre><p>创建<code>.ssh/authorized_keys</code>文件，打开<code>authorized_keys</code>文件并将刚才在本地机器复制的内容拷贝其中并保存</p>\n<pre><code>vim ~/.ssh/authorized_keys</code></pre><p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>修改权限</li>\n</ul>\n<pre><code>chmod 755 ~\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys</code></pre><ul>\n<li><p>测试本地连接服务器</p>\n<p>在本地电脑git bash here</p>\n</li>\n</ul>\n<pre><code>//yourIp为远程服务器的ip地址\nssh -v git@yourIp     //yourIp为你的服务器ip</code></pre><p>如图则证明本地机器与远程机器已经接通</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004834.png\" alt></p>\n<h3 id=\"六、创建git仓库\"><a href=\"#六、创建git仓库\" class=\"headerlink\" title=\"六、创建git仓库\"></a>六、创建git仓库</h3><ul>\n<li>切换到root用户，创建一个目录用于存储网站的根目录</li>\n</ul>\n<pre><code>su root</code></pre><ul>\n<li>创建网站的根目录</li>\n</ul>\n<pre><code>mkdir /home/hexo</code></pre><ul>\n<li>给予权限</li>\n</ul>\n<pre><code>chown gitgit -R //hexo</code></pre><h1 id=\"2】安装Nginx\"><a href=\"#2】安装Nginx\" class=\"headerlink\" title=\"2】安装Nginx\"></a>2】安装Nginx</h1><blockquote>\n<p><em>Nginx</em> (engine x) 是一个高性能的<a href=\"https://baike.baidu.com/item/HTTP\" target=\"_blank\" rel=\"noopener\">HTTP</a>和<a href=\"https://baike.baidu.com/item/反向代理/7793488\" target=\"_blank\" rel=\"noopener\">反向代理</a>web服务器，同时也提供了IMAP/POP3/SMTP<a href=\"https://baike.baidu.com/item/服务/100571\" target=\"_blank\" rel=\"noopener\">服务</a></p>\n</blockquote>\n<h3 id=\"一、安装配置Nginx\"><a href=\"#一、安装配置Nginx\" class=\"headerlink\" title=\"一、安装配置Nginx\"></a>一、安装配置Nginx</h3><ul>\n<li>安装Nginx</li>\n</ul>\n<pre><code>yum install -y nginx</code></pre><ul>\n<li>配置Nginx</li>\n</ul>\n<pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件</p>\n<pre><code>vim /etc/nginx/nginx.conf</code></pre><p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<pre><code class=\"j\">server {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  www.muyiio.com;   //你的博客域名\n        root         /home/hexo;       //git仓库目录\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    location / {\n    }\nj\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004838.png\" alt></p>\n<ul>\n<li>启动Nginx</li>\n</ul>\n<pre><code>systemctl start nginx.service</code></pre><ul>\n<li>重启Nginx</li>\n</ul>\n<pre><code>systemctl restart nginx.service</code></pre><h3 id=\"二、自动化部署\"><a href=\"#二、自动化部署\" class=\"headerlink\" title=\"二、自动化部署\"></a>二、自动化部署</h3><ul>\n<li>获取root权限</li>\n</ul>\n<pre><code>su root</code></pre><ul>\n<li>建立git仓库</li>\n</ul>\n<pre><code>cd /home/git\ngit init --bare blog.git</code></pre><ul>\n<li>修改blog.git权限</li>\n</ul>\n<pre><code>chown git:git -R blog.git</code></pre><ul>\n<li>在 <code>/home/hexo/blog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹，我们创建一个新的 <code>git</code> 钩子 <code>post-receive</code>，用于自动部署。</li>\n</ul>\n<pre><code>vim blog.git/hooks/post-receive</code></pre><ul>\n<li><strong>按 <code>i</code> 键进入文件的编辑模式</strong>，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</li>\n</ul>\n<pre><code> #!/bin/bash \n git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre><p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>：</code>，然后输入<code>wq</code>回车）</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004843.png\" alt></p>\n<ul>\n<li>修改文件权限，使得其可执行。</li>\n</ul>\n<pre><code>chmod +x /home/git/blog.git/hooks/post-receive</code></pre><h1 id=\"3】配置本地Hexo\"><a href=\"#3】配置本地Hexo\" class=\"headerlink\" title=\"3】配置本地Hexo\"></a>3】配置本地Hexo</h1><ul>\n<li>博客根目录_config下增加</li>\n</ul>\n<pre><code>deploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支</code></pre><ul>\n<li>部署</li>\n</ul>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><ul>\n<li>输入<code>hexo d</code>的时候，会要求你输入自己的服务器密码</li>\n</ul>\n<pre><code>Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;https://e.coding.net/godxiaolon/godxiaolon.git&#39;.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82&#39;s password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -&gt; master\nBranch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;root@118.25.27.52:/home/git/hexoBlog.git&#39;.\nINFO  Deploy done: git</code></pre><blockquote>\n<p> 输入密码不会有显示，输完回车就可以</p>\n</blockquote>\n<ul>\n<li><strong>如果出现<code>bash: git-receive-pack: command not found</code>,则运行：</strong></li>\n</ul>\n<pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/03.png\" alt></p>\n<ul>\n<li>访问服务器ip，看看有没有成功</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004847.png\" alt></p>\n<p>最后，发现其实挺简单的，快去访问你的服务器<code>ip</code>看看有没有部署成功吧</p>\n","path":"hexo-bo-ke-bu-shu-dao-teng-xun-yun-fu-wu-qi.html","permalink":"https://www.yshawlon.cn/hexo-bo-ke-bu-shu-dao-teng-xun-yun-fu-wu-qi.html","tags":[{"name":"Hexo","_id":"clq6dy489000dikw04lptx64o","slug":"Hexo","path":"tags/Hexo/","permalink":"https://www.yshawlon.cn/tags/Hexo/","length":12}],"categories":[{"name":"服务器","_id":"clq6dy49u001wikw01qvhle9u","slug":"服务器","path":"categories/服务器/","permalink":"https://www.yshawlon.cn/categories/服务器/","length":2}],"prev":{"title":"Linux学习笔记-Vim编辑器","date":"2020-03-31T10:41:54.000Z","summary":"vi和vim都是Linux中的编辑器，vim比较高级，可以视为vi的升级版本。","slug":"Linux学习笔记-Vim编辑器","published":true,"updated":"2021-05-18T10:35:06.015Z","_id":"clq6dy48z001cikw0n1ncprfk","layout":"post","photos":[],"link":"","excerpt":"","path":"linux-xue-xi-bi-ji-vim-bian-ji-qi.html","permalink":"https://www.yshawlon.cn/linux-xue-xi-bi-ji-vim-bian-ji-qi.html","__post":true},"next":{"title":"使用 PicGo+腾讯云对象存储COS 作为图床","date":"2020-03-27T13:34:21.000Z","summary":"选择PicGo+对象存储COS图床来储存文章图片，优化访问速度也为了更加方便。","slug":"使用-PicGo-腾讯云对象存储COS-作为图床","published":true,"updated":"2021-05-18T05:00:46.180Z","_id":"clq6dy4a10029ikw0qaocnuzb","layout":"post","photos":[],"link":"","excerpt":"","path":"shi-yong-picgo-teng-xun-yun-dui-xiang-cun-chu-cos-zuo-wei-tu-chuang.html","permalink":"https://www.yshawlon.cn/shi-yong-picgo-teng-xun-yun-dui-xiang-cun-chu-cos-zuo-wei-tu-chuang.html","__post":true},"__post":true}