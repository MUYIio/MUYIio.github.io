{"title":"Linux学习笔记-Vim编辑器","date":"2020-03-31T10:41:54.000Z","toc":true,"summary":"vi和vim都是Linux中的编辑器，vim比较高级，可以视为vi的升级版本。","source":"_posts/Linux学习笔记-Vim编辑器.md","raw":"---\ntitle: Linux学习笔记-Vim编辑器\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-03-31 18:41:54\npassword:\nsummary: vi和vim都是Linux中的编辑器，vim比较高级，可以视为vi的升级版本。\ntags:\n- CentOS 8.1\n- Vim\ncategories:\n- Linux\n---\n\n我的Linux版本：`CentOS`\n\n发行版本：`CentOS 8.1`\n\n\n> Vi编辑器是所有Unix及Linux系统下标准的编辑器，类似于windows系统下的notepad（记事本），在Unix及Linux系统的任何版本，Vi编辑器是完全相同的，因此可以在其他任何介绍vi的地方都能进一步了解它，Vi也是Linux中最基本的文本编辑器，学会它后，我们将在Linux的世界里畅行无阻，尤其是在终端中。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim编辑器/1.jpg)\n\nvi和vim都是Linux中的编辑器，不同的是，vim比较高级，可以视为vi的升级版本。vi使用于文本编辑，但是vim更适用于coding（代码编辑）。\n\n## 1】.安装Vim ##\n\n> Centos再带Vi，所以要安装Vim取代Vi\n\n- `yum  search vim`                    查找有哪些Vim包\n\n- `which vim`                               已安装Vim的地址\n\n- `rpm -qf /usr/bin/vim `               查看已安装的版本\n\n- `yum install vim-enhanced`        安装最新的Vim\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim编辑器/2.png)\n\n**打开Vim以及使用在后文**\n\n## 2】.vim的三种模式 ##\n\n**1.Vim中存在三种模式：命令模式、编辑模式（输入模式）、末行模式（尾行模式）。**\n\n- 命令模式：在该模式下是不能对文件直接编辑，可以输入快捷键进行一些操作（删除行，复制行，移动光标，粘贴等等）【打开文件之后默认进入的模式】；\n\n- 编辑模式：在该模式下可以对文件的内容进行编辑；\n\n- 末行模式：可以在末行输入命令来对文件进行操作（搜索、替换、保存、退出、撤销、高亮等等）；\n\n**2.Vim的打开文件的方式：**\n\n- `#vim 文件路径`;\t       #作用：打开指定的文件\n- `#vim  +数字  文件的路径`;       #作用：打开指定的文件，并且将光标移动到指定行\n- `#vim  +/关键词  文件的路径`;       #作用：打开指定的文件，并且高亮显示关键词\n- `#vim 文件路径1 文件路径2 文件路径3`;        #作用：同时打开多个文件\n\n**重点：先复制出一个`/etc/passwd`文件，复制当前home目录下（千万不要在etc下直接修改！**）\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim编辑器/3.png)\n\n后续一切vim命令都是基于`/root/passwd`文件进行操作。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim编辑器/4.png)\n\n退出方式：输入`:q`按下回车即可\n\n## 3】.命令模式 ##\n> 该模式是打开文件的第一个看到的模式\n\n**1.光标移动**\n\n- ①光标移动到行首\n按键：`shift + 6 或 ^（T字母上面的6，不要按小键盘的6）`\n\n- ②光标移动到行尾\n按键：`shift + 4 或 $（R字母的左上角的4，不是小键盘的4）`\n\n- ③光标移动到首行\n按键：`gg`\n\n- ④光标移动到末行\n按键：`G`\n\n- ⑤翻屏\n向上翻屏：按键`ctrl + b   （before）\t或 \t\tPgUp`\n   向下翻屏：按键`ctrl + f\t   （after）\t\t或\t\tPgDn`\n\n\n**2.复制操作**\n\n- ①复制光标所在行\n按键：`yy`\n粘贴：在想要粘贴的地方按下p键\n\n- ②以光标所在行为准（包含当前行），向下复制指定的行数\n按键：数字`yy`\n\n- ③可视化复制\n按键：`ctrl + v`（可视块）或`V`（可视行）或`v`（可视），然后按下`↑↓←→`方向键来选中需要复制的区块，按下`y`键进行复制，最后按下`p`键粘贴\n\n**3.撤销/恢复**\n\n- ①撤销：输入`:u `（不属于命令模式）  或者  ` u\t`\t\t（undo）\n\n- ②恢复：`ctrl + r`\t\t\t恢复（取消）之前的撤销操作\n\n**4.剪切/删除**\n\n- ①剪切/删除光标所在行\n按键：`dd`\t\t\t（删除之后下一行上移）\n注意：dd严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果。\n\n- ②剪切/删除光标所在行为准（包含当前行），向下删除/剪切指定的行\n按键：`数字dd`\t\t（删除之后下一行上移）\n\n- ③剪切/删除光标所在的当前行之后的内容，但是删除之后下一行不上移\n按键：`D\t`\t\t\t（删除之后当前行会变成空白行）\n\n- ④可视化删除\n按键：`ctrl + v`（可视块）或`V`（可视行）或`v`（可视），`↑↓←→`移动，按下`D`表示删除选中行，`d`表示删选中块\n\n\n**5.光标的快速移动**\n\n- ①快速将光标移动到指定的行\n按键：数字G    \n\n- ②以当前光标为准向上/向下移动n行\n按键：数字↑，数字↓\n\n- ③以当前光标为准向左/向右移动n字符\n按键：数字←，数字→\n\n- ④末行模式下的快速移动方式：移动到指定的行\n按键：输入英文“:”，其后输入行数数字，按下回车\n\n\n## 4】.编辑模式 ##\n\n**1.进入方式**\n\n- `i:`在光标所在字符前插入\n\n- `a:`在光标所在字符后插入\n\n- `o:`在光标所在行的下面另起一新行插入\n\n- `I:`在光标所在行的首行开始插入（如果首行有空格则在空格之后插入）\n\n- `A:`在光标所在行的尾行开始插入\n\n- `O:`在光标所在行的上面另起一新行开始插入\n\n- `S:`删除光标所在行并开始插入\n\n\n**2.退出方式**\n\n- 按下esc键\n\n## 5】.末行模式 ##\n\n**1.进入方式：**\n\n- 由命令模式进入，按下“`:`”或者“`/`（表示查找）”即可进入\n\n**2.退出方式：**\n\n- a. 按下esc\n\n- b. 连按2次esc键\n\n- c. 删除末行全部输入字符\n\n\n**3.使用命令**\n\n\n- ①保存操作（write）\n\n输入：“`:w`”\t\t\t\t保存文件\n\n输入：“`:w  路径`”\t\t另存为\n\n- ②退出（quit）\n\n输入：“`:q`”\t\t\t\t退出文件\n\n- ③保存并退出\n\n输入：“`:wq`”\t\t\t\t保存并且退出\n\n- ④强制 （!）\n\n输入：“`:q!`”\t\t\t\t表示强制退出，刚才做的修改操作不做保存\n\n\n- vim还支持另外一个保存退出方法“`:x`”。(**推荐**)\n\n> ①“`:x`”在文件没有修改的情况下，表示直接退出，在文件修改的情况下表示保存并退出；\n\n> ②如果文件没有被修改，但是使用wq进行退出的话，则文件的修改时间会被更新；但是如果文件没有被修改，使用x进行退出的话，则文件修改时间不会被更新的；主要是会混淆用户对文件的修改时间的认定。\n\n\n**不要使用X，X表示对文件进行加密操作**。\n\n\n- ⑤调用外部命令\n\n输入：“`:!外部命令`”\n\n- ⑥搜索/查找\n\n输入：“`/关键词`”\n\n\n在搜索结果中切换上/下一个结果：`N/n`\t\t（next）\n\n如果需要取消高亮，则需要输入：“`:nohl`”【no highlight】\n\n- ⑦替换\n\n`:s/搜索的关键词/新的内容\t`\t\t\t替换光标所在行的第一处符合条件的内容\n\n`:s/搜索的关键词/新的内容/g`\t\t\t替换光标所在行的全部符合条件的内容\n\n`:%s/搜索的关键词/新的内容\t`\t\t替换整个文档中每行第一个符合条件的内容\n\n`:%s/搜索的关键词/新的内容/g`\t\t\t替换整个文档的符合条件的内容\n\n> %表示整个文件,g表示全局（global）\n\n- ⑧显示行号（临时）\n\n输入：“`:set nu`”[number]\n\n如果想取消显示，则输入：“`:set nonu`”\n\n\n\n## 6】.模式间的切换 ##\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim编辑器/5.png)\n\n## 7】.vim的配置 ##\n\n> Vim是一款编辑器，编辑器也是有配置文件的。\n\nVim配置有三种情况：\n\n- a. 在文件打开的时候在末行模式下输入的配置（临时的）\n\n- b. 个人配置文件（`~/.vimrc`，如果没有可以自行新建）\n\n- c. 全局配置文件（vim自带，`/etc/vimrc`）\n\n①新建好个人配置文件之后进入编辑\n\n②在配置文件中进行配置\n比如显示行号：`set nu`\n\n\n配置好之后vim打开文件就会永远显示行号\n\n**如果某个配置项，在个人配置文件与全局配置文件产生冲突的时候应该以谁为准？**\n\n- ①先在全局的配置中设置不显示行号，在个人的配置文件中设置显示行号，观察结果\n最后显示行号：说明以个人为准\n\n- ②先在全局中配置显示行号，在个人中设置不显示行号，观察结果\n最后的显示是不显示行号，说明以个人为准","slug":"Linux学习笔记-Vim编辑器","published":true,"updated":"2021-05-18T10:35:06.015Z","_id":"clq6dy48z001cikw0n1ncprfk","comments":true,"layout":"post","photos":[],"link":"","html":"<p>我的Linux版本：<code>CentOS</code></p>\n<p>发行版本：<code>CentOS 8.1</code></p>\n<blockquote>\n<p>Vi编辑器是所有Unix及Linux系统下标准的编辑器，类似于windows系统下的notepad（记事本），在Unix及Linux系统的任何版本，Vi编辑器是完全相同的，因此可以在其他任何介绍vi的地方都能进一步了解它，Vi也是Linux中最基本的文本编辑器，学会它后，我们将在Linux的世界里畅行无阻，尤其是在终端中。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/1.jpg\" alt></p>\n<p>vi和vim都是Linux中的编辑器，不同的是，vim比较高级，可以视为vi的升级版本。vi使用于文本编辑，但是vim更适用于coding（代码编辑）。</p>\n<h2 id=\"1】-安装Vim\"><a href=\"#1】-安装Vim\" class=\"headerlink\" title=\"1】.安装Vim\"></a>1】.安装Vim</h2><blockquote>\n<p>Centos再带Vi，所以要安装Vim取代Vi</p>\n</blockquote>\n<ul>\n<li><p><code>yum  search vim</code>                    查找有哪些Vim包</p>\n</li>\n<li><p><code>which vim</code>                               已安装Vim的地址</p>\n</li>\n<li><p><code>rpm -qf /usr/bin/vim</code>               查看已安装的版本</p>\n</li>\n<li><p><code>yum install vim-enhanced</code>        安装最新的Vim</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/2.png\" alt></p>\n<p><strong>打开Vim以及使用在后文</strong></p>\n<h2 id=\"2】-vim的三种模式\"><a href=\"#2】-vim的三种模式\" class=\"headerlink\" title=\"2】.vim的三种模式\"></a>2】.vim的三种模式</h2><p><strong>1.Vim中存在三种模式：命令模式、编辑模式（输入模式）、末行模式（尾行模式）。</strong></p>\n<ul>\n<li><p>命令模式：在该模式下是不能对文件直接编辑，可以输入快捷键进行一些操作（删除行，复制行，移动光标，粘贴等等）【打开文件之后默认进入的模式】；</p>\n</li>\n<li><p>编辑模式：在该模式下可以对文件的内容进行编辑；</p>\n</li>\n<li><p>末行模式：可以在末行输入命令来对文件进行操作（搜索、替换、保存、退出、撤销、高亮等等）；</p>\n</li>\n</ul>\n<p><strong>2.Vim的打开文件的方式：</strong></p>\n<ul>\n<li><code>#vim 文件路径</code>;           #作用：打开指定的文件</li>\n<li><code>#vim  +数字  文件的路径</code>;       #作用：打开指定的文件，并且将光标移动到指定行</li>\n<li><code>#vim  +/关键词  文件的路径</code>;       #作用：打开指定的文件，并且高亮显示关键词</li>\n<li><code>#vim 文件路径1 文件路径2 文件路径3</code>;        #作用：同时打开多个文件</li>\n</ul>\n<p><strong>重点：先复制出一个<code>/etc/passwd</code>文件，复制当前home目录下（千万不要在etc下直接修改！</strong>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/3.png\" alt></p>\n<p>后续一切vim命令都是基于<code>/root/passwd</code>文件进行操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/4.png\" alt></p>\n<p>退出方式：输入<code>:q</code>按下回车即可</p>\n<h2 id=\"3】-命令模式\"><a href=\"#3】-命令模式\" class=\"headerlink\" title=\"3】.命令模式\"></a>3】.命令模式</h2><blockquote>\n<p>该模式是打开文件的第一个看到的模式</p>\n</blockquote>\n<p><strong>1.光标移动</strong></p>\n<ul>\n<li><p>①光标移动到行首<br>按键：<code>shift + 6 或 ^（T字母上面的6，不要按小键盘的6）</code></p>\n</li>\n<li><p>②光标移动到行尾<br>按键：<code>shift + 4 或 $（R字母的左上角的4，不是小键盘的4）</code></p>\n</li>\n<li><p>③光标移动到首行<br>按键：<code>gg</code></p>\n</li>\n<li><p>④光标移动到末行<br>按键：<code>G</code></p>\n</li>\n<li><p>⑤翻屏<br>向上翻屏：按键<code>ctrl + b   （before）    或         PgUp</code><br> 向下翻屏：按键<code>ctrl + f       （after）        或        PgDn</code></p>\n</li>\n</ul>\n<p><strong>2.复制操作</strong></p>\n<ul>\n<li><p>①复制光标所在行<br>按键：<code>yy</code><br>粘贴：在想要粘贴的地方按下p键</p>\n</li>\n<li><p>②以光标所在行为准（包含当前行），向下复制指定的行数<br>按键：数字<code>yy</code></p>\n</li>\n<li><p>③可视化复制<br>按键：<code>ctrl + v</code>（可视块）或<code>V</code>（可视行）或<code>v</code>（可视），然后按下<code>↑↓←→</code>方向键来选中需要复制的区块，按下<code>y</code>键进行复制，最后按下<code>p</code>键粘贴</p>\n</li>\n</ul>\n<p><strong>3.撤销/恢复</strong></p>\n<ul>\n<li><p>①撤销：输入<code>:u</code>（不属于命令模式）  或者  <code>u</code>        （undo）</p>\n</li>\n<li><p>②恢复：<code>ctrl + r</code>            恢复（取消）之前的撤销操作</p>\n</li>\n</ul>\n<p><strong>4.剪切/删除</strong></p>\n<ul>\n<li><p>①剪切/删除光标所在行<br>按键：<code>dd</code>            （删除之后下一行上移）<br>注意：dd严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果。</p>\n</li>\n<li><p>②剪切/删除光标所在行为准（包含当前行），向下删除/剪切指定的行<br>按键：<code>数字dd</code>        （删除之后下一行上移）</p>\n</li>\n<li><p>③剪切/删除光标所在的当前行之后的内容，但是删除之后下一行不上移<br>按键：<code>D</code>            （删除之后当前行会变成空白行）</p>\n</li>\n<li><p>④可视化删除<br>按键：<code>ctrl + v</code>（可视块）或<code>V</code>（可视行）或<code>v</code>（可视），<code>↑↓←→</code>移动，按下<code>D</code>表示删除选中行，<code>d</code>表示删选中块</p>\n</li>\n</ul>\n<p><strong>5.光标的快速移动</strong></p>\n<ul>\n<li><p>①快速将光标移动到指定的行<br>按键：数字G    </p>\n</li>\n<li><p>②以当前光标为准向上/向下移动n行<br>按键：数字↑，数字↓</p>\n</li>\n<li><p>③以当前光标为准向左/向右移动n字符<br>按键：数字←，数字→</p>\n</li>\n<li><p>④末行模式下的快速移动方式：移动到指定的行<br>按键：输入英文“:”，其后输入行数数字，按下回车</p>\n</li>\n</ul>\n<h2 id=\"4】-编辑模式\"><a href=\"#4】-编辑模式\" class=\"headerlink\" title=\"4】.编辑模式\"></a>4】.编辑模式</h2><p><strong>1.进入方式</strong></p>\n<ul>\n<li><p><code>i:</code>在光标所在字符前插入</p>\n</li>\n<li><p><code>a:</code>在光标所在字符后插入</p>\n</li>\n<li><p><code>o:</code>在光标所在行的下面另起一新行插入</p>\n</li>\n<li><p><code>I:</code>在光标所在行的首行开始插入（如果首行有空格则在空格之后插入）</p>\n</li>\n<li><p><code>A:</code>在光标所在行的尾行开始插入</p>\n</li>\n<li><p><code>O:</code>在光标所在行的上面另起一新行开始插入</p>\n</li>\n<li><p><code>S:</code>删除光标所在行并开始插入</p>\n</li>\n</ul>\n<p><strong>2.退出方式</strong></p>\n<ul>\n<li>按下esc键</li>\n</ul>\n<h2 id=\"5】-末行模式\"><a href=\"#5】-末行模式\" class=\"headerlink\" title=\"5】.末行模式\"></a>5】.末行模式</h2><p><strong>1.进入方式：</strong></p>\n<ul>\n<li>由命令模式进入，按下“<code>:</code>”或者“<code>/</code>（表示查找）”即可进入</li>\n</ul>\n<p><strong>2.退出方式：</strong></p>\n<ul>\n<li><p>a. 按下esc</p>\n</li>\n<li><p>b. 连按2次esc键</p>\n</li>\n<li><p>c. 删除末行全部输入字符</p>\n</li>\n</ul>\n<p><strong>3.使用命令</strong></p>\n<ul>\n<li>①保存操作（write）</li>\n</ul>\n<p>输入：“<code>:w</code>”                保存文件</p>\n<p>输入：“<code>:w  路径</code>”        另存为</p>\n<ul>\n<li>②退出（quit）</li>\n</ul>\n<p>输入：“<code>:q</code>”                退出文件</p>\n<ul>\n<li>③保存并退出</li>\n</ul>\n<p>输入：“<code>:wq</code>”                保存并且退出</p>\n<ul>\n<li>④强制 （!）</li>\n</ul>\n<p>输入：“<code>:q!</code>”                表示强制退出，刚才做的修改操作不做保存</p>\n<ul>\n<li>vim还支持另外一个保存退出方法“<code>:x</code>”。(<strong>推荐</strong>)</li>\n</ul>\n<blockquote>\n<p>①“<code>:x</code>”在文件没有修改的情况下，表示直接退出，在文件修改的情况下表示保存并退出；</p>\n</blockquote>\n<blockquote>\n<p>②如果文件没有被修改，但是使用wq进行退出的话，则文件的修改时间会被更新；但是如果文件没有被修改，使用x进行退出的话，则文件修改时间不会被更新的；主要是会混淆用户对文件的修改时间的认定。</p>\n</blockquote>\n<p><strong>不要使用X，X表示对文件进行加密操作</strong>。</p>\n<ul>\n<li>⑤调用外部命令</li>\n</ul>\n<p>输入：“<code>:!外部命令</code>”</p>\n<ul>\n<li>⑥搜索/查找</li>\n</ul>\n<p>输入：“<code>/关键词</code>”</p>\n<p>在搜索结果中切换上/下一个结果：<code>N/n</code>        （next）</p>\n<p>如果需要取消高亮，则需要输入：“<code>:nohl</code>”【no highlight】</p>\n<ul>\n<li>⑦替换</li>\n</ul>\n<p><code>:s/搜索的关键词/新的内容</code>            替换光标所在行的第一处符合条件的内容</p>\n<p><code>:s/搜索的关键词/新的内容/g</code>            替换光标所在行的全部符合条件的内容</p>\n<p><code>:%s/搜索的关键词/新的内容</code>        替换整个文档中每行第一个符合条件的内容</p>\n<p><code>:%s/搜索的关键词/新的内容/g</code>            替换整个文档的符合条件的内容</p>\n<blockquote>\n<p>%表示整个文件,g表示全局（global）</p>\n</blockquote>\n<ul>\n<li>⑧显示行号（临时）</li>\n</ul>\n<p>输入：“<code>:set nu</code>”[number]</p>\n<p>如果想取消显示，则输入：“<code>:set nonu</code>”</p>\n<h2 id=\"6】-模式间的切换\"><a href=\"#6】-模式间的切换\" class=\"headerlink\" title=\"6】.模式间的切换\"></a>6】.模式间的切换</h2><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/5.png\" alt></p>\n<h2 id=\"7】-vim的配置\"><a href=\"#7】-vim的配置\" class=\"headerlink\" title=\"7】.vim的配置\"></a>7】.vim的配置</h2><blockquote>\n<p>Vim是一款编辑器，编辑器也是有配置文件的。</p>\n</blockquote>\n<p>Vim配置有三种情况：</p>\n<ul>\n<li><p>a. 在文件打开的时候在末行模式下输入的配置（临时的）</p>\n</li>\n<li><p>b. 个人配置文件（<code>~/.vimrc</code>，如果没有可以自行新建）</p>\n</li>\n<li><p>c. 全局配置文件（vim自带，<code>/etc/vimrc</code>）</p>\n</li>\n</ul>\n<p>①新建好个人配置文件之后进入编辑</p>\n<p>②在配置文件中进行配置<br>比如显示行号：<code>set nu</code></p>\n<p>配置好之后vim打开文件就会永远显示行号</p>\n<p><strong>如果某个配置项，在个人配置文件与全局配置文件产生冲突的时候应该以谁为准？</strong></p>\n<ul>\n<li><p>①先在全局的配置中设置不显示行号，在个人的配置文件中设置显示行号，观察结果<br>最后显示行号：说明以个人为准</p>\n</li>\n<li><p>②先在全局中配置显示行号，在个人中设置不显示行号，观察结果<br>最后的显示是不显示行号，说明以个人为准</p>\n</li>\n</ul>\n","excerpt":"","more":"<p>我的Linux版本：<code>CentOS</code></p>\n<p>发行版本：<code>CentOS 8.1</code></p>\n<blockquote>\n<p>Vi编辑器是所有Unix及Linux系统下标准的编辑器，类似于windows系统下的notepad（记事本），在Unix及Linux系统的任何版本，Vi编辑器是完全相同的，因此可以在其他任何介绍vi的地方都能进一步了解它，Vi也是Linux中最基本的文本编辑器，学会它后，我们将在Linux的世界里畅行无阻，尤其是在终端中。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/1.jpg\" alt></p>\n<p>vi和vim都是Linux中的编辑器，不同的是，vim比较高级，可以视为vi的升级版本。vi使用于文本编辑，但是vim更适用于coding（代码编辑）。</p>\n<h2 id=\"1】-安装Vim\"><a href=\"#1】-安装Vim\" class=\"headerlink\" title=\"1】.安装Vim\"></a>1】.安装Vim</h2><blockquote>\n<p>Centos再带Vi，所以要安装Vim取代Vi</p>\n</blockquote>\n<ul>\n<li><p><code>yum  search vim</code>                    查找有哪些Vim包</p>\n</li>\n<li><p><code>which vim</code>                               已安装Vim的地址</p>\n</li>\n<li><p><code>rpm -qf /usr/bin/vim</code>               查看已安装的版本</p>\n</li>\n<li><p><code>yum install vim-enhanced</code>        安装最新的Vim</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/2.png\" alt></p>\n<p><strong>打开Vim以及使用在后文</strong></p>\n<h2 id=\"2】-vim的三种模式\"><a href=\"#2】-vim的三种模式\" class=\"headerlink\" title=\"2】.vim的三种模式\"></a>2】.vim的三种模式</h2><p><strong>1.Vim中存在三种模式：命令模式、编辑模式（输入模式）、末行模式（尾行模式）。</strong></p>\n<ul>\n<li><p>命令模式：在该模式下是不能对文件直接编辑，可以输入快捷键进行一些操作（删除行，复制行，移动光标，粘贴等等）【打开文件之后默认进入的模式】；</p>\n</li>\n<li><p>编辑模式：在该模式下可以对文件的内容进行编辑；</p>\n</li>\n<li><p>末行模式：可以在末行输入命令来对文件进行操作（搜索、替换、保存、退出、撤销、高亮等等）；</p>\n</li>\n</ul>\n<p><strong>2.Vim的打开文件的方式：</strong></p>\n<ul>\n<li><code>#vim 文件路径</code>;           #作用：打开指定的文件</li>\n<li><code>#vim  +数字  文件的路径</code>;       #作用：打开指定的文件，并且将光标移动到指定行</li>\n<li><code>#vim  +/关键词  文件的路径</code>;       #作用：打开指定的文件，并且高亮显示关键词</li>\n<li><code>#vim 文件路径1 文件路径2 文件路径3</code>;        #作用：同时打开多个文件</li>\n</ul>\n<p><strong>重点：先复制出一个<code>/etc/passwd</code>文件，复制当前home目录下（千万不要在etc下直接修改！</strong>）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/3.png\" alt></p>\n<p>后续一切vim命令都是基于<code>/root/passwd</code>文件进行操作。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/4.png\" alt></p>\n<p>退出方式：输入<code>:q</code>按下回车即可</p>\n<h2 id=\"3】-命令模式\"><a href=\"#3】-命令模式\" class=\"headerlink\" title=\"3】.命令模式\"></a>3】.命令模式</h2><blockquote>\n<p>该模式是打开文件的第一个看到的模式</p>\n</blockquote>\n<p><strong>1.光标移动</strong></p>\n<ul>\n<li><p>①光标移动到行首<br>按键：<code>shift + 6 或 ^（T字母上面的6，不要按小键盘的6）</code></p>\n</li>\n<li><p>②光标移动到行尾<br>按键：<code>shift + 4 或 $（R字母的左上角的4，不是小键盘的4）</code></p>\n</li>\n<li><p>③光标移动到首行<br>按键：<code>gg</code></p>\n</li>\n<li><p>④光标移动到末行<br>按键：<code>G</code></p>\n</li>\n<li><p>⑤翻屏<br>向上翻屏：按键<code>ctrl + b   （before）    或         PgUp</code><br> 向下翻屏：按键<code>ctrl + f       （after）        或        PgDn</code></p>\n</li>\n</ul>\n<p><strong>2.复制操作</strong></p>\n<ul>\n<li><p>①复制光标所在行<br>按键：<code>yy</code><br>粘贴：在想要粘贴的地方按下p键</p>\n</li>\n<li><p>②以光标所在行为准（包含当前行），向下复制指定的行数<br>按键：数字<code>yy</code></p>\n</li>\n<li><p>③可视化复制<br>按键：<code>ctrl + v</code>（可视块）或<code>V</code>（可视行）或<code>v</code>（可视），然后按下<code>↑↓←→</code>方向键来选中需要复制的区块，按下<code>y</code>键进行复制，最后按下<code>p</code>键粘贴</p>\n</li>\n</ul>\n<p><strong>3.撤销/恢复</strong></p>\n<ul>\n<li><p>①撤销：输入<code>:u</code>（不属于命令模式）  或者  <code>u</code>        （undo）</p>\n</li>\n<li><p>②恢复：<code>ctrl + r</code>            恢复（取消）之前的撤销操作</p>\n</li>\n</ul>\n<p><strong>4.剪切/删除</strong></p>\n<ul>\n<li><p>①剪切/删除光标所在行<br>按键：<code>dd</code>            （删除之后下一行上移）<br>注意：dd严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果。</p>\n</li>\n<li><p>②剪切/删除光标所在行为准（包含当前行），向下删除/剪切指定的行<br>按键：<code>数字dd</code>        （删除之后下一行上移）</p>\n</li>\n<li><p>③剪切/删除光标所在的当前行之后的内容，但是删除之后下一行不上移<br>按键：<code>D</code>            （删除之后当前行会变成空白行）</p>\n</li>\n<li><p>④可视化删除<br>按键：<code>ctrl + v</code>（可视块）或<code>V</code>（可视行）或<code>v</code>（可视），<code>↑↓←→</code>移动，按下<code>D</code>表示删除选中行，<code>d</code>表示删选中块</p>\n</li>\n</ul>\n<p><strong>5.光标的快速移动</strong></p>\n<ul>\n<li><p>①快速将光标移动到指定的行<br>按键：数字G    </p>\n</li>\n<li><p>②以当前光标为准向上/向下移动n行<br>按键：数字↑，数字↓</p>\n</li>\n<li><p>③以当前光标为准向左/向右移动n字符<br>按键：数字←，数字→</p>\n</li>\n<li><p>④末行模式下的快速移动方式：移动到指定的行<br>按键：输入英文“:”，其后输入行数数字，按下回车</p>\n</li>\n</ul>\n<h2 id=\"4】-编辑模式\"><a href=\"#4】-编辑模式\" class=\"headerlink\" title=\"4】.编辑模式\"></a>4】.编辑模式</h2><p><strong>1.进入方式</strong></p>\n<ul>\n<li><p><code>i:</code>在光标所在字符前插入</p>\n</li>\n<li><p><code>a:</code>在光标所在字符后插入</p>\n</li>\n<li><p><code>o:</code>在光标所在行的下面另起一新行插入</p>\n</li>\n<li><p><code>I:</code>在光标所在行的首行开始插入（如果首行有空格则在空格之后插入）</p>\n</li>\n<li><p><code>A:</code>在光标所在行的尾行开始插入</p>\n</li>\n<li><p><code>O:</code>在光标所在行的上面另起一新行开始插入</p>\n</li>\n<li><p><code>S:</code>删除光标所在行并开始插入</p>\n</li>\n</ul>\n<p><strong>2.退出方式</strong></p>\n<ul>\n<li>按下esc键</li>\n</ul>\n<h2 id=\"5】-末行模式\"><a href=\"#5】-末行模式\" class=\"headerlink\" title=\"5】.末行模式\"></a>5】.末行模式</h2><p><strong>1.进入方式：</strong></p>\n<ul>\n<li>由命令模式进入，按下“<code>:</code>”或者“<code>/</code>（表示查找）”即可进入</li>\n</ul>\n<p><strong>2.退出方式：</strong></p>\n<ul>\n<li><p>a. 按下esc</p>\n</li>\n<li><p>b. 连按2次esc键</p>\n</li>\n<li><p>c. 删除末行全部输入字符</p>\n</li>\n</ul>\n<p><strong>3.使用命令</strong></p>\n<ul>\n<li>①保存操作（write）</li>\n</ul>\n<p>输入：“<code>:w</code>”                保存文件</p>\n<p>输入：“<code>:w  路径</code>”        另存为</p>\n<ul>\n<li>②退出（quit）</li>\n</ul>\n<p>输入：“<code>:q</code>”                退出文件</p>\n<ul>\n<li>③保存并退出</li>\n</ul>\n<p>输入：“<code>:wq</code>”                保存并且退出</p>\n<ul>\n<li>④强制 （!）</li>\n</ul>\n<p>输入：“<code>:q!</code>”                表示强制退出，刚才做的修改操作不做保存</p>\n<ul>\n<li>vim还支持另外一个保存退出方法“<code>:x</code>”。(<strong>推荐</strong>)</li>\n</ul>\n<blockquote>\n<p>①“<code>:x</code>”在文件没有修改的情况下，表示直接退出，在文件修改的情况下表示保存并退出；</p>\n</blockquote>\n<blockquote>\n<p>②如果文件没有被修改，但是使用wq进行退出的话，则文件的修改时间会被更新；但是如果文件没有被修改，使用x进行退出的话，则文件修改时间不会被更新的；主要是会混淆用户对文件的修改时间的认定。</p>\n</blockquote>\n<p><strong>不要使用X，X表示对文件进行加密操作</strong>。</p>\n<ul>\n<li>⑤调用外部命令</li>\n</ul>\n<p>输入：“<code>:!外部命令</code>”</p>\n<ul>\n<li>⑥搜索/查找</li>\n</ul>\n<p>输入：“<code>/关键词</code>”</p>\n<p>在搜索结果中切换上/下一个结果：<code>N/n</code>        （next）</p>\n<p>如果需要取消高亮，则需要输入：“<code>:nohl</code>”【no highlight】</p>\n<ul>\n<li>⑦替换</li>\n</ul>\n<p><code>:s/搜索的关键词/新的内容</code>            替换光标所在行的第一处符合条件的内容</p>\n<p><code>:s/搜索的关键词/新的内容/g</code>            替换光标所在行的全部符合条件的内容</p>\n<p><code>:%s/搜索的关键词/新的内容</code>        替换整个文档中每行第一个符合条件的内容</p>\n<p><code>:%s/搜索的关键词/新的内容/g</code>            替换整个文档的符合条件的内容</p>\n<blockquote>\n<p>%表示整个文件,g表示全局（global）</p>\n</blockquote>\n<ul>\n<li>⑧显示行号（临时）</li>\n</ul>\n<p>输入：“<code>:set nu</code>”[number]</p>\n<p>如果想取消显示，则输入：“<code>:set nonu</code>”</p>\n<h2 id=\"6】-模式间的切换\"><a href=\"#6】-模式间的切换\" class=\"headerlink\" title=\"6】.模式间的切换\"></a>6】.模式间的切换</h2><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/Vim%E7%BC%96%E8%BE%91%E5%99%A8/5.png\" alt></p>\n<h2 id=\"7】-vim的配置\"><a href=\"#7】-vim的配置\" class=\"headerlink\" title=\"7】.vim的配置\"></a>7】.vim的配置</h2><blockquote>\n<p>Vim是一款编辑器，编辑器也是有配置文件的。</p>\n</blockquote>\n<p>Vim配置有三种情况：</p>\n<ul>\n<li><p>a. 在文件打开的时候在末行模式下输入的配置（临时的）</p>\n</li>\n<li><p>b. 个人配置文件（<code>~/.vimrc</code>，如果没有可以自行新建）</p>\n</li>\n<li><p>c. 全局配置文件（vim自带，<code>/etc/vimrc</code>）</p>\n</li>\n</ul>\n<p>①新建好个人配置文件之后进入编辑</p>\n<p>②在配置文件中进行配置<br>比如显示行号：<code>set nu</code></p>\n<p>配置好之后vim打开文件就会永远显示行号</p>\n<p><strong>如果某个配置项，在个人配置文件与全局配置文件产生冲突的时候应该以谁为准？</strong></p>\n<ul>\n<li><p>①先在全局的配置中设置不显示行号，在个人的配置文件中设置显示行号，观察结果<br>最后显示行号：说明以个人为准</p>\n</li>\n<li><p>②先在全局中配置显示行号，在个人中设置不显示行号，观察结果<br>最后的显示是不显示行号，说明以个人为准</p>\n</li>\n</ul>\n","path":"linux-xue-xi-bi-ji-vim-bian-ji-qi.html","permalink":"https://www.yshawlon.cn/linux-xue-xi-bi-ji-vim-bian-ji-qi.html","tags":[{"name":"CentOS 8.1","_id":"clq6dy4az0045ikw0joljlw2b","slug":"CentOS-8-1","path":"tags/CentOS-8-1/","permalink":"https://www.yshawlon.cn/tags/CentOS-8-1/","length":1},{"name":"Vim","_id":"clq6dy4b0004bikw070tce9mk","slug":"Vim","path":"tags/Vim/","permalink":"https://www.yshawlon.cn/tags/Vim/","length":1}],"categories":[{"name":"Linux","_id":"clq6dy49y0024ikw00kgeztib","slug":"Linux","path":"categories/Linux/","permalink":"https://www.yshawlon.cn/categories/Linux/","length":3}],"prev":{"title":"Linux网络设置-CentOS由NAT模式改为桥接模式","date":"2020-04-02T11:09:28.000Z","summary":"这篇文章主要记录将我们的Linux网络设置由NAT模式改为桥接模式。","slug":"Linux网络设置-CentOS由NAT模式改为桥接模式","published":true,"updated":"2021-05-18T10:22:34.191Z","_id":"clq6dy497001kikw09ltvpsib","layout":"post","photos":[],"link":"","excerpt":"","path":"linux-wang-luo-she-zhi-centos-you-nat-mo-shi-gai-wei-qiao-jie-mo-shi.html","permalink":"https://www.yshawlon.cn/linux-wang-luo-she-zhi-centos-you-nat-mo-shi-gai-wei-qiao-jie-mo-shi.html","__post":true},"next":{"title":"Hexo 博客部署到腾讯云服务器","date":"2020-03-28T12:47:51.000Z","summary":"相信大家把博客部署到服务器都是为了加快访问速度，这里就不啰嗦了。","slug":"Hexo-博客部署到腾讯云服务器","published":true,"updated":"2021-05-18T08:41:07.049Z","_id":"clq6dy48x0018ikw0a0eoerdl","layout":"post","photos":[],"link":"","excerpt":"","path":"hexo-bo-ke-bu-shu-dao-teng-xun-yun-fu-wu-qi.html","permalink":"https://www.yshawlon.cn/hexo-bo-ke-bu-shu-dao-teng-xun-yun-fu-wu-qi.html","__post":true},"__post":true}