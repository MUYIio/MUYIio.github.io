{"title":"Github + Hexo 搭建个人博客超详细教程","date":"2020-02-18T13:17:35.000Z","toc":true,"summary":"搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习。","source":"_posts/1.md","raw":"---\ntitle: Github + Hexo 搭建个人博客超详细教程\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-02-18 21:17:35\npassword:\nsummary: 搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习。\ntags:\n- Github\n- Hexo\n- 博客搭建\ncategories:\n- Blog\n---\n![](01.png)\n\n<font color=magenta size=4>**在搭建过程中遇到问题欢迎来骚扰我哈！<font color=red size=4> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~**</font>\n\n![](02.png)\n\n# 前言 #\n\n- 作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！\n\n- 搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。\n- **为什么要搭建自己的博客？可以看看这三篇文章：**\n\n[《为什么你应该（从现在开始就）写博客》](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/ \"为什么你应该（从现在开始就）写博客\")   (By 刘未鹏 | Mind Hacks)\n\n[《为什么要自建博客？》](https://www.zhihu.com/question/19916345 \"为什么要自建博客？\")   (By 知乎)\n\n[《我为什么写博客》](https://www.cnblogs.com/jhzhu/p/3893297.html \"我为什么写博客\") （By 知明所以）\n\n\n我们需要知道搭建博客要用到的框架。<font color=red size=3>Hexo</font>是高效的静态站点生成框架，它基于<font color=red size=3>Node.js</font>。我们使用<font color=red size=3>MarkDown</font>在本地编辑我们的博客文章，通过<font color=red size=3>Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。\n\n## 本文目录 ##\n\n- **快速搭建**\n- 安装<font color=red size=3>Node.js</font>\n- 添加国内镜像\n- 安装<font color=red size=3>Git </font>\n- 注册<font color=red size=3>Github</font>账号\n- 创建<font color=red size=3>Git</font>仓库\n- 安装<font color=red size=3>Hexo</font> \n- 配置本地<font color=red size=3>Hexo</font>\n- 连接<font color=red size=3>Github</font>与本地 \n- 写文章、发布文章 \n- <font color=red size=3>MarkDown</font>文章编辑器说明\n- 配置个性化域名\n- 更换自己喜欢的<font color=red size=3>Hexo</font>主题\n- 我的博客源代码\n- 结语\n\n----\n\n# 快速搭建（直接使用我的博客源代码） #\n\n**建议自己成功搭建博客之后再使用我的源代码，新手容易出错**\n\n有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。\n\n在这里以我的博客为例。\n\n## 一、下载博客源代码 ##\n\n大家可以直接素质二连，<font color=red size=3>Star&Fork</font>我的博客源代码：<https://github.com/MUYIio/hexo-themes-matery>，这里我给出两种下载方法：\n\n![](03.png)\n\n**第一种**：直接<font color=red size=3>DownLoad</font>，下载到本地就可以。（**不推荐**）\n\n**第二种**：如果你已经安装了[Git](https://git-scm.com/download/win \"Git\")，就可以右键单击<font color=red size=3>Come Bash Here</font>运行\n\n\n\n```bash\ngit clone git@github.com:MUYIio/hexo-themes-matery.git\n```\n\n\n\n将所有文件下载到本地，这个复杂一点。\n\n## 二、修改博客文档配置 ##\n\n首先将我们下载的博客源代码解压，然后修改主要配置：\n\n- **点击查看隐藏的文件夹删除 .git 文件夹，将自己博客仓库的 .git 文件夹拷贝进去**\n- 根目录配置文件<font color=red size=3>_config.yml</font>和主题目录配置文件<font color=red size=3>_config.yml</font>中修改个人信息。\n- 根目录配置文件中修改<font color=red size=3>deploy</font>一栏的<font color=red size=3>repository</font>，修改为自己的仓库地址。\n- 根目录配置文件中修改<font color=red size=3>baidu_url_submit</font>一栏的<font color=red size=3>token</font>。\n- 主题配置文件中修改<font color=red size=3>gitalk</font>一栏，修改方法见正文。\n\n我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。\n\n最后一步，**本地的运行环境还是需要搭建好的**，跟着下文操作到连接Github与本地，环境就算是搭建完成。\n\n**本地环境搭建好之后会生成的文件：**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/35.png)\n\n然后直接把<font color=red size=3>Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/37.png)\n\n然后在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>点击输入以下命令上传就可以了：\n\n    hexo clean\n    hexo g\n    hexo d\n\n# 安装Node.js #\n了解一下什么是<font color=red size=3>Node.js</font>：\n\n> <font color=red size=3>Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。\n\n需要用到的命令：\n        \n    $ git --version\n    $ node -v\n    $ npm -v\n\n[点击此处](https://nodejs.org/en/download/ \"Node.js\")进入<font color=red size=3>Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=red size=3>Next</font>。\n\n![](04.png)\n\n检验是否安装成功：\n按<font color=red size=3>Win+R</font>打开命令提示符，输入<font color=red size=3>node -v</font>和<font color=red size=3>npm -v</font>，如果出现版本号，那么就安装成功了。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png)\n\n# 添加国内镜像 #\n这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：\n\n    npm config set registry https://registry.npm.taobao.org\n\n# 安装Git #\n> <font color=red size=3>Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=red size=3>Github</font>。\n\n[点击此处](https://git-scm.com/download/win \"Git\")进入Git官网下载相应版本，默认安装即可。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/005.png)\n\n参考资料：[《如何在windows下安装GIT》](https://www.cnblogs.com/jytx/p/5602927.html \"如何在windows下安装GIT\") (By 俊雨廷休)\n\n检验是否安装成功：\n\n安装完成后在命令提示符中输入<font color=red size=3>git --version</font>验证是否安装成功\n\n    git --version\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/06.png)\n\n# 注册Github账号 #\n\n<font color=red size=3>Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，[点击此处](https://github.com/ \"Github\")进入<font color=red size=3>Github</font>官网点击 <font color=red size=3>Sign Up </font>注册账户。\n\n# 创建git仓库 #\n登录<font color=red size=3>Github</font>创建一个仓库\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/07.png)\n\n如下图所示，**输入自己的项目名字，后面一定要加<font color=red size=3>.github.io</font>后缀，<font color=red size=3>README</font>初始化也要勾上。名称一定要和你的<font color=red size=3>Github</font>名字完全一样，比如你<font color=red size=3>github</font>名字叫<font color=red size=3>A</font>，那么仓库名字一定要是<font color=red size=3>A.github.io</font>。**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/08.png)\n\n选择一个自己喜欢的主题：\n在上面创建的仓库里面点击<font color=red size=3>Settings</font>（不是头像下面那个<font color=red size=3>Settings</font>），向下拉到最后有个<font color=red size=3>GitHub Pages</font>，点击<font color=red size=3>Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=red size=3>GitHub Pages</font>，就可以预览效果啦。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/09.png)\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/10.png)\n\n# 安装Hexo #\n> <font color=red size=3>Hexo</font>是一款基于<font color=red size=3>Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=red size=3>GitHub</font>和<font color=red size=3>Heroku</font>上，是搭建博客的首选框架。\n\n选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=red size=3>（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，输入以下<font color=red size=3> npm </font>命令即可安装\n\n    $ npm install hexo-cli -g\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/11.png)\n\n输入<font color=red size=3>hexo -v</font>即可检验是否安装成功，我这里就不演示了。\n\n# 配置本地hexo #\n还是在刚才新建的文件夹下再新建一个<font color=red size=3>Hexo</font>文件夹，比如我的<font color=red size=3>（C/panakot Blog/Hexo）</font>，在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，依次输入以下<font color=red size=3> npm </font>命令即可初始化。\n\n    hexo init\n    npm install\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/12.png)\n\n初始化成功生成的文件：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/13.png)\n\n接着我们输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>打开本地服务器，然后浏览器打开<http://localhost:4000/>，就可以预览我们的博客啦，如图：\n\n显示以下信息说明操作正确：\n\n```INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.```\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/14.png)\n\n按<font color=red size=3>ctrl+c</font>关闭本地服务器。\n\n**我们以后常用到的<font color=red size=3>Hexo</font>命令：**\n\n- <font color=red size=3>hexo s</font>等价于 <font color=red size=3>hexo server</font>  #<font color=red size=3>Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。\n\n- <font color=red size=3>hexo g</font> 等价于 <font color=red size=3>hexo generate</font>  #生成静态网页 (执行 $ <font color=red size=3>hexo g</font>后会在站点根目录下生成<font color=red size=3>public</font>文件夹,<font color=red size=3> hexo</font>会将\"<font color=red size=3>/blog/source/</font>\" 下面的<font color=red size=3>.md</font>后缀的文件编译为<font color=red size=3>.html</font>后缀的文件,存放在\"<font color=red size=3>/blog/public/ </font>\" 路径下)\n\n- <font color=red size=3>hexo d </font>等价于 <font color=red size=3>hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=red size=3>github</font>)\n- <font color=red size=3>hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=red size=3>public</font>文件夹\n\n# 连接Github与本地 #\n## 一、生成密钥 ##\n\n右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>输入以下命令：\n\n    git config --global user.name \"Name\"\n    git config --global user.email \"Email\"\n\n**<font color=red size=3>Name</font>和<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的用户名和邮箱。**\n\n然后生成密钥：\n\n    ssh-keygen -t rsa -C \"Email\"\n\n\n**<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的邮箱**\n\n然后会出现：\n\n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n    //到这里可以直接回车将密钥按默认文件进行存储\n\n回车之后：\n\n    Enter passphrase (empty for no passphrase):\n    //这里是要你输入密码，其实不需要输什么密码，直接回车就行\n    Enter same passphrase again:\n\n接下来会有：\n\n    Your identification has been saved in /c/Users/you/.ssh/id_rsa.\n    Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\n    The key fingerprint is:\n    这里是各种字母数字组成的字符串，结尾是你的邮箱\n    The key's randomart image is:\n    这里也是各种字母数字符号组成的字符串\n\n现在密钥已经生成，一般存放在<font color=red size=3>（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：\n\n     clip < ~/.ssh/id_rsa.pub\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/15.png)\n\n## 二、连接Github ##\n在<font color=red size=3>Github</font>头像下面点击<font color=red size=3>Settings</font>，再点击<font color=red size=3>SSH and GPG keys</font>，新建一个<font color=red size=3>SSH</font>，名字任意。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/16.png)\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/17.png)\n\n然后将刚才复制的密钥添加就可以了，像这样：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/18.png)\n\n**本地连接Github**\n\n右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了\n\n    ssh -T git@github.com\n    //注意不要做任何修改\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/19.png)\n\n用编辑器打开博客根目录下的<font color=red size=3>_config.yml</font>文件，我用的是记事本，当然vscode也可以这是博客的配置文件，我们需要修改一下才能连接<font color=red size=3>Github</font>。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/20.png)\n\n修改最后一行的配置：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type:\n改为：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type: git\n      repository: git@github.com:panakot/panakot.github.io.git  //自己的仓库地址\n      branch: master\n\n这个是我的更为完整：\n\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n- type: git\n  repository:\n    github: git@github.com:MUYIio/MUYIio.github.io.git       //GitHub仓库\n    coding: git@e.coding.net:godxiaolon/yshawlon/feezxe.git   //coding仓库\n    gitee: git@gitee.com:feezxe/feezxe.git       //gitee仓库\n    #repo: root@xxxxx :/home/git/blog.git        //前面加#表示注释掉，这个是服务器地址\n  branch: master\n- type: baidu_url_submitter\n```\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/21.png)\n\n切记：\n\n- **<font color=red size=3>repository</font>修改为你自己的<font color=red size=3>github</font>项目地址**。\n- **每一个冒号后面都有一个空格。**\n\n# 写文章、发布文章 #\n首先在博客根目录下右键打开<font color=red size=3>Git Bash Here</font>输入以下命令，安装一个扩展.\n\n    npm i hexo-deployer-git\n\n然后输入下面的命令，新建一篇文章。\n\n    hexo new post \"article title\"\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/22.png)\n\n然后打开<font color=red size=3>C:\\panakot Blog\\Hexo\\source\\_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=red size=3>.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/23.png)\n\n编写完<font color=red size=3>markdown</font>文件后，根目录下右键打开<font color=red size=3>Git Bash Here</font>输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>可以本地预览效果，最后输入<font color=red size=3>hexo d</font>上传到<font color=red size=3>github</font>上。\n\n你的博客地址：<font color=red size=3>https://你的用户名.github.io</font>，比如我的是：<https://muyiio.github.io>，现在每个人都可以通过此链接访问你的博客\n\n# MarkDown文章编辑器说明 #\n> 前面我们提到了使用<font color=red size=3>MarkDown</font>编辑我们的博客文章。<font color=red size=3> Markdown</font> 是<font color=red size=3> 2004</font> 年由 <font color=red size=3>John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=red size=3> .md </font>文件可以使用支持 <font color=red size=3>Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=red size=3>（.md文件）</font>保存到<font color=red size=3> \\Hexo\\source\\_posts </font>文件夹下即可。\n\n <font color=red size=3>Windows </font>上推荐使用 <font color=red size=3>MarkdownPad2 </font>或者<font color=red size=3>小书匠</font>编辑器，<font color=red size=3>macOS </font>上使用<font color=red size=3> Mou</font> 编辑器，<font color=red size=3>Linux </font>上使用 <font color=red size=3>Remarkable</font> 编辑器，<font color=red size=3>Web </font>端上使用 简书。\n\n**[点击此处](http://markdownpad.com/download.html \"MarkDown\")下载<font color=red size=3>MarkDown</font>\n，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：**\n\n[《献给写作者的 Markdown 新手指南》](https://www.jianshu.com/p/q81RER/ \"献给写作者的 Markdown 新手指南\") （By 简书）\n\n[《Markdown语法图文全面详解(10分钟学会)》](https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app \"Markdown语法图文全面详解\")（By 黑暗星球）\n\n[《Markdown 语法手册 （完整整理版）》](https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app \"Markdown 语法手册 （完整整理版）\") （By witnessai1）\n\n[《认识与入门 Markdown》](https://sspai.com/post/25137 \"认识与入门 Markdown\")（By Te_Lee）\n\n写完文章记得在博客根目录<font color=red size=3>Bash Here</font>输入<font color=red size=3>hexo g</font>和<font color=red size=3>hexo d</font>上传到网站。\n# 配置个性化域名 #\n一顿操作下来，打开我们的博客还是：<font color=red size=3>www.xxx.github.io</font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=red size=3>www.xxx.com </font>。\n\n[阿里云](https://www.aliyun.com/ \"阿里云\")和[腾讯云](https://cloud.tencent.com/ \"腾讯云\")都可以，我的是腾讯云，购买域名后首先需要添加解析：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/24.png)\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/25.png)\n\n**方法一：**点击添加记录，需要添加两个记录，两个记录类型都是 <font color=red size=3>CNAME </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=red size=3>muyiio.github.io</font>），保存之后域名解析就完成了！\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/27.png)\n\n**方法二：**两个记录类型为<font color=red size=3> A </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都为博客的<font color=red size=3> IP</font> 地址，<font color=red size=3>IP </font>地址可以<font color=red size=3> cmd</font> 中输入<font color=red size=3> ping</font> 你的博客地址 获得（比如我的：<font color=red size=3>ping muyiio.github.io</font>），保存之后域名解析就完成了！\n\n参考资料：\n\n[《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》](https://blog.csdn.net/it_man/article/details/9017307 \"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\")\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/26.png)\n\n**不管在哪个平台购买域名，操作都大同小异，这里说明两点**：\n\n> 如果你填写的是没有<font color=red size=3>www</font>的，比如 <font color=red size=3>muyio.com</font>，那么无论是访问<font color=red size=3> https://www.muyiio.com </font>还是<font color=red size=3> https://muyiio.com</font> ，都会自动跳转到<font color=red size=3> https://muyiio.com</font>。\n\n\n> 如果你填写的是带<font color=red size=3>www</font>的，比如 <font color=red size=3>www.muyiio.com </font>，那么无论是访问 <font color=red size=3>https://www.muyiio.com</font> 还是 <font color=red size=3>https://muyiio.com </font>，都会自动跳转到 <font color=red size=3>http://www.imuyiio.com</font>。\n\n然后打开你的<font color=red size=3>github</font>博客项目，点击settings，拉到下面<font color=red size=3>Custom domain</font>处，填上你自己的域名，保存就可以了。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/28.png)\n\n现在我们的项目根目录应该会出现一个名为<font color=red size=3>CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=red size=3>/source</font>目录，我的是<font color=red size=3>C:\\Blog\\Hexo\\source</font>，新建<font color=red size=3>CNAME</font>文件，<font color=red size=3>（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=red size=3>hexo g、hexo d</font>上传到<font color=red size=3>github</font>。\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/29.png)\n\n现在就可以通过我们的个性化域名：<font color=red size=3>www.xxx.com、xxx.com</font>访问自己的博客了。\n\n# 更换自己喜欢的Hexo主题 #\n点击进入[Hexo主题专栏](https://hexo.io/themes/ \"Hexo主题专栏\")可以看到很多<font color=red size=3>Hexo</font>主题：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/30.png)\n\n推荐：\n\n[几个好用的hexo主题](https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app \"几个好用的hexo主题\") (By fail_perfectly)\n\n这里我们以[Bean Tech](http://huangxuan.me/ \"Bean Tech\")主题为例，下滑到底部我们可以看到他的<font color=red size=3>GitHub</font>（<font color=red size=3>有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/31.png)\n\n点击进入主题的<font color=red size=3>GitHub</font>地址：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/32.png)\n\n复制该项目地址：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/33.png)\n\n然后打开<font color=red size=3> Hexo </font>文件夹下的<font color=red size=3> themes</font> 目录（如：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    $ git clone 此处填写你刚才复制的主题地址\n\n以我们刚才复制的为例：\n\n    $ git clone https://github.com/Huxpro/huxpro.github.io\n\n下载完成后即可在<font color=red size=3> themes </font>目录下生成 <font color=red size=3>hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=red size=3>Hexo</font> 文件夹下的配置文件 <font color=red size=3>_config.yml </font>，找到关键字 <font color=red size=3>theme</font>，修改参数为：<font color=red size=3>theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），**再次注意冒号后面有一个空格！**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/34.png)\n\n现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    hexo clean\n    hexo g\n    hexo d\n\n现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=red size=3>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\_config.yml</font>），主要包含<font color=red size=3> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery\\_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=red size=3> _config.yml </font>文件里都有相关注释，按需修改即可。\n\n\n# 我的博客源代码 #\n**我的博客源代码地址：<https://github.com/MUYIio/hexo-themes-matery>，有心的话可以给个<font color=red size=3>Star&Fork</font>。**\n\n下载源代码：git clone git@github.com:MUYIio/hexo-themes-matery.git\n\n\n\n在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=red size=3>Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。\n\n主题的原地址在这里：[hexo-theme-matery](https://github.com/blinkfox/hexo-theme-matery)，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。\n\n使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。\n\n\n<table><tr><td bgcolor=orange>\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n# 结语 #\n初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。\n\n文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！\n","slug":"1","published":true,"updated":"2023-04-07T09:38:30.719Z","_id":"clq6dy46a0002ikw0odc13l9v","comments":true,"layout":"post","photos":[],"link":"","html":"<p><img src=\"01.png\" alt></p>\n<p><font color=\"magenta\" size=\"4\"><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color=\"red\" size=\"4\"> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p>\n<p><img src=\"02.png\" alt></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ul>\n<li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p>\n</li>\n<li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p>\n</li>\n<li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p>\n</li>\n</ul>\n<p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" title=\"为什么你应该（从现在开始就）写博客\" target=\"_blank\" rel=\"noopener\">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p>\n<p><a href=\"https://www.zhihu.com/question/19916345\" title=\"为什么要自建博客？\" target=\"_blank\" rel=\"noopener\">《为什么要自建博客？》</a>   (By 知乎)</p>\n<p><a href=\"https://www.cnblogs.com/jhzhu/p/3893297.html\" title=\"我为什么写博客\" target=\"_blank\" rel=\"noopener\">《我为什么写博客》</a> （By 知明所以）</p>\n<p>我们需要知道搭建博客要用到的框架。<font color=\"red\" size=\"3\">Hexo</font>是高效的静态站点生成框架，它基于<font color=\"red\" size=\"3\">Node.js</font>。我们使用<font color=\"red\" size=\"3\">MarkDown</font>在本地编辑我们的博客文章，通过<font color=\"red\" size=\"3\">Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p>\n<h2 id=\"本文目录\"><a href=\"#本文目录\" class=\"headerlink\" title=\"本文目录\"></a>本文目录</h2><ul>\n<li><strong>快速搭建</strong></li>\n<li>安装<font color=\"red\" size=\"3\">Node.js</font></li>\n<li>添加国内镜像</li>\n<li>安装<font color=\"red\" size=\"3\">Git </font></li>\n<li>注册<font color=\"red\" size=\"3\">Github</font>账号</li>\n<li>创建<font color=\"red\" size=\"3\">Git</font>仓库</li>\n<li>安装<font color=\"red\" size=\"3\">Hexo</font> </li>\n<li>配置本地<font color=\"red\" size=\"3\">Hexo</font></li>\n<li>连接<font color=\"red\" size=\"3\">Github</font>与本地 </li>\n<li>写文章、发布文章 </li>\n<li><font color=\"red\" size=\"3\">MarkDown</font>文章编辑器说明</li>\n<li>配置个性化域名</li>\n<li>更换自己喜欢的<font color=\"red\" size=\"3\">Hexo</font>主题</li>\n<li>我的博客源代码</li>\n<li>结语</li>\n</ul>\n<hr>\n<h1 id=\"快速搭建（直接使用我的博客源代码）\"><a href=\"#快速搭建（直接使用我的博客源代码）\" class=\"headerlink\" title=\"快速搭建（直接使用我的博客源代码）\"></a>快速搭建（直接使用我的博客源代码）</h1><p><strong>建议自己成功搭建博客之后再使用我的源代码，新手容易出错</strong></p>\n<p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p>\n<p>在这里以我的博客为例。</p>\n<h2 id=\"一、下载博客源代码\"><a href=\"#一、下载博客源代码\" class=\"headerlink\" title=\"一、下载博客源代码\"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color=\"red\" size=\"3\">Star&amp;Fork</font>我的博客源代码：<a href=\"https://github.com/MUYIio/hexo-themes-matery\" target=\"_blank\" rel=\"noopener\">https://github.com/MUYIio/hexo-themes-matery</a>，这里我给出两种下载方法：</p>\n<p><img src=\"03.png\" alt></p>\n<p><strong>第一种</strong>：直接<font color=\"red\" size=\"3\">DownLoad</font>，下载到本地就可以。（<strong>不推荐</strong>）</p>\n<p><strong>第二种</strong>：如果你已经安装了<a href=\"https://git-scm.com/download/win\" title=\"Git\" target=\"_blank\" rel=\"noopener\">Git</a>，就可以右键单击<font color=\"red\" size=\"3\">Come Bash Here</font>运行</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:MUYIio/hexo-themes-matery.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将所有文件下载到本地，这个复杂一点。</p>\n<h2 id=\"二、修改博客文档配置\"><a href=\"#二、修改博客文档配置\" class=\"headerlink\" title=\"二、修改博客文档配置\"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p>\n<ul>\n<li><strong>点击查看隐藏的文件夹删除 .git 文件夹，将自己博客仓库的 .git 文件夹拷贝进去</strong></li>\n<li>根目录配置文件<font color=\"red\" size=\"3\">_config.yml</font>和主题目录配置文件<font color=\"red\" size=\"3\">_config.yml</font>中修改个人信息。</li>\n<li>根目录配置文件中修改<font color=\"red\" size=\"3\">deploy</font>一栏的<font color=\"red\" size=\"3\">repository</font>，修改为自己的仓库地址。</li>\n<li>根目录配置文件中修改<font color=\"red\" size=\"3\">baidu_url_submit</font>一栏的<font color=\"red\" size=\"3\">token</font>。</li>\n<li>主题配置文件中修改<font color=\"red\" size=\"3\">gitalk</font>一栏，修改方法见正文。</li>\n</ul>\n<p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p>\n<p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p>\n<p><strong>本地环境搭建好之后会生成的文件：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/35.png\" alt></p>\n<p>然后直接把<font color=\"red\" size=\"3\">Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/37.png\" alt></p>\n<p>然后在<font color=\"red\" size=\"3\">Hexo</font>文件夹下右键单击鼠标，点击 <font color=\"red\" size=\"3\">Git Bash Here</font>点击输入以下命令上传就可以了：</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>了解一下什么是<font color=\"red\" size=\"3\">Node.js</font>：</p>\n<blockquote>\n<p><font color=\"red\" size=\"3\">Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p>\n</blockquote>\n<p>需要用到的命令：</p>\n<pre><code>$ git --version\n$ node -v\n$ npm -v</code></pre><p><a href=\"https://nodejs.org/en/download/\" title=\"Node.js\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入<font color=\"red\" size=\"3\">Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=\"red\" size=\"3\">Next</font>。</p>\n<p><img src=\"04.png\" alt></p>\n<p>检验是否安装成功：<br>按<font color=\"red\" size=\"3\">Win+R</font>打开命令提示符，输入<font color=\"red\" size=\"3\">node -v</font>和<font color=\"red\" size=\"3\">npm -v</font>，如果出现版本号，那么就安装成功了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png\" alt></p>\n<h1 id=\"添加国内镜像\"><a href=\"#添加国内镜像\" class=\"headerlink\" title=\"添加国内镜像\"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p>\n<pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><blockquote>\n<p><font color=\"red\" size=\"3\">Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=\"red\" size=\"3\">Github</font>。</p>\n</blockquote>\n<p><a href=\"https://git-scm.com/download/win\" title=\"Git\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/005.png\" alt></p>\n<p>参考资料：<a href=\"https://www.cnblogs.com/jytx/p/5602927.html\" title=\"如何在windows下安装GIT\" target=\"_blank\" rel=\"noopener\">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p>\n<p>检验是否安装成功：</p>\n<p>安装完成后在命令提示符中输入<font color=\"red\" size=\"3\">git –version</font>验证是否安装成功</p>\n<pre><code>git --version</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/06.png\" alt></p>\n<h1 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h1><p><font color=\"red\" size=\"3\">Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href=\"https://github.com/\" title=\"Github\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入<font color=\"red\" size=\"3\">Github</font>官网点击 <font color=\"red\" size=\"3\">Sign Up </font>注册账户。</p>\n<h1 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h1><p>登录<font color=\"red\" size=\"3\">Github</font>创建一个仓库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/07.png\" alt></p>\n<p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color=\"red\" size=\"3\">.github.io</font>后缀，<font color=\"red\" size=\"3\">README</font>初始化也要勾上。名称一定要和你的<font color=\"red\" size=\"3\">Github</font>名字完全一样，比如你<font color=\"red\" size=\"3\">github</font>名字叫<font color=\"red\" size=\"3\">A</font>，那么仓库名字一定要是<font color=\"red\" size=\"3\">A.github.io</font>。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/08.png\" alt></p>\n<p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color=\"red\" size=\"3\">Settings</font>（不是头像下面那个<font color=\"red\" size=\"3\">Settings</font>），向下拉到最后有个<font color=\"red\" size=\"3\">GitHub Pages</font>，点击<font color=\"red\" size=\"3\">Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=\"red\" size=\"3\">GitHub Pages</font>，就可以预览效果啦。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/09.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/10.png\" alt></p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><blockquote>\n<p><font color=\"red\" size=\"3\">Hexo</font>是一款基于<font color=\"red\" size=\"3\">Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=\"red\" size=\"3\">GitHub</font>和<font color=\"red\" size=\"3\">Heroku</font>上，是搭建博客的首选框架。</p>\n</blockquote>\n<p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=\"red\" size=\"3\">（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下<font color=\"red\" size=\"3\"> npm </font>命令即可安装</p>\n<pre><code>$ npm install hexo-cli -g</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/11.png\" alt></p>\n<p>输入<font color=\"red\" size=\"3\">hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p>\n<h1 id=\"配置本地hexo\"><a href=\"#配置本地hexo\" class=\"headerlink\" title=\"配置本地hexo\"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color=\"red\" size=\"3\">Hexo</font>文件夹，比如我的<font color=\"red\" size=\"3\">（C/panakot Blog/Hexo）</font>，在<font color=\"red\" size=\"3\">Hexo</font>文件夹下右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>，依次输入以下<font color=\"red\" size=\"3\"> npm </font>命令即可初始化。</p>\n<pre><code>hexo init\nnpm install</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/12.png\" alt></p>\n<p>初始化成功生成的文件：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/13.png\" alt></p>\n<p>接着我们输入<font color=\"red\" size=\"3\">hexo g</font>生成静态网页，然后输入<font color=\"red\" size=\"3\">hexo s</font>打开本地服务器，然后浏览器打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p>\n<p>显示以下信息说明操作正确：</p>\n<p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/14.png\" alt></p>\n<p>按<font color=\"red\" size=\"3\">ctrl+c</font>关闭本地服务器。</p>\n<p><strong>我们以后常用到的<font color=\"red\" size=\"3\">Hexo</font>命令：</strong></p>\n<ul>\n<li><p><font color=\"red\" size=\"3\">hexo s</font>等价于 <font color=\"red\" size=\"3\">hexo server</font>  #<font color=\"red\" size=\"3\">Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo g</font> 等价于 <font color=\"red\" size=\"3\">hexo generate</font>  #生成静态网页 (执行 $ <font color=\"red\" size=\"3\">hexo g</font>后会在站点根目录下生成<font color=\"red\" size=\"3\">public</font>文件夹,<font color=\"red\" size=\"3\"> hexo</font>会将”<font color=\"red\" size=\"3\">/blog/source/</font>“ 下面的<font color=\"red\" size=\"3\">.md</font>后缀的文件编译为<font color=\"red\" size=\"3\">.html</font>后缀的文件,存放在”<font color=\"red\" size=\"3\">/blog/public/ </font>“ 路径下)</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo d </font>等价于 <font color=\"red\" size=\"3\">hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=\"red\" size=\"3\">github</font>)</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=\"red\" size=\"3\">public</font>文件夹</p>\n</li>\n</ul>\n<h1 id=\"连接Github与本地\"><a href=\"#连接Github与本地\" class=\"headerlink\" title=\"连接Github与本地\"></a>连接Github与本地</h1><h2 id=\"一、生成密钥\"><a href=\"#一、生成密钥\" class=\"headerlink\" title=\"一、生成密钥\"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color=\"red\" size=\"3\">Git Bash Here</font>输入以下命令：</p>\n<pre><code>git config --global user.name &quot;Name&quot;\ngit config --global user.email &quot;Email&quot;</code></pre><p><strong><font color=\"red\" size=\"3\">Name</font>和<font color=\"red\" size=\"3\">Email</font>是我们注册<font color=\"red\" size=\"3\">Github</font>时的用户名和邮箱。</strong></p>\n<p>然后生成密钥：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;Email&quot;</code></pre><p><strong><font color=\"red\" size=\"3\">Email</font>是我们注册<font color=\"red\" size=\"3\">Github</font>时的邮箱</strong></p>\n<p>然后会出现：</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n//到这里可以直接回车将密钥按默认文件进行存储</code></pre><p>回车之后：</p>\n<pre><code>Enter passphrase (empty for no passphrase):\n//这里是要你输入密码，其实不需要输什么密码，直接回车就行\nEnter same passphrase again:</code></pre><p>接下来会有：</p>\n<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.\nYour public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\nThe key fingerprint is:\n这里是各种字母数字组成的字符串，结尾是你的邮箱\nThe key&#39;s randomart image is:\n这里也是各种字母数字符号组成的字符串</code></pre><p>现在密钥已经生成，一般存放在<font color=\"red\" size=\"3\">（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p>\n<pre><code> clip &lt; ~/.ssh/id_rsa.pub</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/15.png\" alt></p>\n<h2 id=\"二、连接Github\"><a href=\"#二、连接Github\" class=\"headerlink\" title=\"二、连接Github\"></a>二、连接Github</h2><p>在<font color=\"red\" size=\"3\">Github</font>头像下面点击<font color=\"red\" size=\"3\">Settings</font>，再点击<font color=\"red\" size=\"3\">SSH and GPG keys</font>，新建一个<font color=\"red\" size=\"3\">SSH</font>，名字任意。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/16.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/17.png\" alt></p>\n<p>然后将刚才复制的密钥添加就可以了，像这样：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/18.png\" alt></p>\n<p><strong>本地连接Github</strong></p>\n<p>右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p>\n<pre><code>ssh -T git@github.com\n//注意不要做任何修改</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/19.png\" alt></p>\n<p>用编辑器打开博客根目录下的<font color=\"red\" size=\"3\">_config.yml</font>文件，我用的是记事本，当然vscode也可以这是博客的配置文件，我们需要修改一下才能连接<font color=\"red\" size=\"3\">Github</font>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/20.png\" alt></p>\n<p>修改最后一行的配置：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:</code></pre><p>改为：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:panakot/panakot.github.io.git  //自己的仓库地址\n  branch: master</code></pre><p>这个是我的更为完整：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n- type: git\n  repository:\n    github: git@github.com:MUYIio/MUYIio.github.io.git       //GitHub仓库\n    coding: git@e.coding.net:godxiaolon/yshawlon/feezxe.git   //coding仓库\n    gitee: git@gitee.com:feezxe/feezxe.git       //gitee仓库\n    #repo: root@xxxxx :/home/git/blog.git        //前面加#表示注释掉，这个是服务器地址\n  branch: master\n- type: baidu_url_submitter</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/21.png\" alt></p>\n<p>切记：</p>\n<ul>\n<li><strong><font color=\"red\" size=\"3\">repository</font>修改为你自己的<font color=\"red\" size=\"3\">github</font>项目地址</strong>。</li>\n<li><strong>每一个冒号后面都有一个空格。</strong></li>\n</ul>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color=\"red\" size=\"3\">Git Bash Here</font>输入以下命令，安装一个扩展.</p>\n<pre><code>npm i hexo-deployer-git</code></pre><p>然后输入下面的命令，新建一篇文章。</p>\n<pre><code>hexo new post &quot;article title&quot;</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/22.png\" alt></p>\n<p>然后打开<font color=\"red\" size=\"3\">C:\\panakot Blog\\Hexo\\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=\"red\" size=\"3\">.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/23.png\" alt></p>\n<p>编写完<font color=\"red\" size=\"3\">markdown</font>文件后，根目录下右键打开<font color=\"red\" size=\"3\">Git Bash Here</font>输入<font color=\"red\" size=\"3\">hexo g</font>生成静态网页，然后输入<font color=\"red\" size=\"3\">hexo s</font>可以本地预览效果，最后输入<font color=\"red\" size=\"3\">hexo d</font>上传到<font color=\"red\" size=\"3\">github</font>上。</p>\n<p>你的博客地址：<font color=\"red\" size=\"3\">https://你的用户名.github.io</font>，比如我的是：<a href=\"https://muyiio.github.io\" target=\"_blank\" rel=\"noopener\">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p>\n<h1 id=\"MarkDown文章编辑器说明\"><a href=\"#MarkDown文章编辑器说明\" class=\"headerlink\" title=\"MarkDown文章编辑器说明\"></a>MarkDown文章编辑器说明</h1><blockquote>\n<p>前面我们提到了使用<font color=\"red\" size=\"3\">MarkDown</font>编辑我们的博客文章。<font color=\"red\" size=\"3\"> Markdown</font> 是<font color=\"red\" size=\"3\"> 2004</font> 年由 <font color=\"red\" size=\"3\">John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=\"red\" size=\"3\"> .md </font>文件可以使用支持 <font color=\"red\" size=\"3\">Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=\"red\" size=\"3\">（.md文件）</font>保存到<font color=\"red\" size=\"3\"> \\Hexo\\source_posts </font>文件夹下即可。</p>\n</blockquote>\n<p> <font color=\"red\" size=\"3\">Windows </font>上推荐使用 <font color=\"red\" size=\"3\">MarkdownPad2 </font>或者<font color=\"red\" size=\"3\">小书匠</font>编辑器，<font color=\"red\" size=\"3\">macOS </font>上使用<font color=\"red\" size=\"3\"> Mou</font> 编辑器，<font color=\"red\" size=\"3\">Linux </font>上使用 <font color=\"red\" size=\"3\">Remarkable</font> 编辑器，<font color=\"red\" size=\"3\">Web </font>端上使用 简书。</p>\n<p><strong><a href=\"http://markdownpad.com/download.html\" title=\"MarkDown\" target=\"_blank\" rel=\"noopener\">点击此处</a>下载<font color=\"red\" size=\"3\">MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/q81RER/\" title=\"献给写作者的 Markdown 新手指南\" target=\"_blank\" rel=\"noopener\">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p>\n<p><a href=\"https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app\" title=\"Markdown语法图文全面详解\" target=\"_blank\" rel=\"noopener\">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p>\n<p><a href=\"https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app\" title=\"Markdown 语法手册 （完整整理版）\" target=\"_blank\" rel=\"noopener\">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p>\n<p><a href=\"https://sspai.com/post/25137\" title=\"认识与入门 Markdown\" target=\"_blank\" rel=\"noopener\">《认识与入门 Markdown》</a>（By Te_Lee）</p>\n<p>写完文章记得在博客根目录<font color=\"red\" size=\"3\">Bash Here</font>输入<font color=\"red\" size=\"3\">hexo g</font>和<font color=\"red\" size=\"3\">hexo d</font>上传到网站。</p>\n<h1 id=\"配置个性化域名\"><a href=\"#配置个性化域名\" class=\"headerlink\" title=\"配置个性化域名\"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.github.io\" target=\"_blank\" rel=\"noopener\">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.com\" target=\"_blank\" rel=\"noopener\">www.xxx.com</a> </font>。</p>\n<p><a href=\"https://www.aliyun.com/\" title=\"阿里云\" target=\"_blank\" rel=\"noopener\">阿里云</a>和<a href=\"https://cloud.tencent.com/\" title=\"腾讯云\" target=\"_blank\" rel=\"noopener\">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/24.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/25.png\" alt></p>\n<p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color=\"red\" size=\"3\">CNAME </font>，第一个主机记录为<font color=\"red\" size=\"3\"> @ </font>，第二个主机记录为<font color=\"red\" size=\"3\"> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=\"red\" size=\"3\">muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/27.png\" alt></p>\n<p><strong>方法二：</strong>两个记录类型为<font color=\"red\" size=\"3\"> A </font>，第一个主机记录为<font color=\"red\" size=\"3\"> @ </font>，第二个主机记录为<font color=\"red\" size=\"3\"> www</font>，记录值都为博客的<font color=\"red\" size=\"3\"> IP</font> 地址，<font color=\"red\" size=\"3\">IP </font>地址可以<font color=\"red\" size=\"3\"> cmd</font> 中输入<font color=\"red\" size=\"3\"> ping</font> 你的博客地址 获得（比如我的：<font color=\"red\" size=\"3\">ping muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p>参考资料：</p>\n<p><a href=\"https://blog.csdn.net/it_man/article/details/9017307\" title=\"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\" target=\"_blank\" rel=\"noopener\">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/26.png\" alt></p>\n<p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p>\n<blockquote>\n<p>如果你填写的是没有<font color=\"red\" size=\"3\">www</font>的，比如 <font color=\"red\" size=\"3\">muyio.com</font>，那么无论是访问<font color=\"red\" size=\"3\"> <a href=\"https://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">https://www.muyiio.com</a> </font>还是<font color=\"red\" size=\"3\"> <a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a></font> ，都会自动跳转到<font color=\"red\" size=\"3\"> <a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a></font>。</p>\n</blockquote>\n<blockquote>\n<p>如果你填写的是带<font color=\"red\" size=\"3\">www</font>的，比如 <font color=\"red\" size=\"3\"><a href=\"http://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">www.muyiio.com</a> </font>，那么无论是访问 <font color=\"red\" size=\"3\"><a href=\"https://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">https://www.muyiio.com</a></font> 还是 <font color=\"red\" size=\"3\"><a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a> </font>，都会自动跳转到 <font color=\"red\" size=\"3\"><a href=\"http://www.imuyiio.com\" target=\"_blank\" rel=\"noopener\">http://www.imuyiio.com</a></font>。</p>\n</blockquote>\n<p>然后打开你的<font color=\"red\" size=\"3\">github</font>博客项目，点击settings，拉到下面<font color=\"red\" size=\"3\">Custom domain</font>处，填上你自己的域名，保存就可以了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/28.png\" alt></p>\n<p>现在我们的项目根目录应该会出现一个名为<font color=\"red\" size=\"3\">CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=\"red\" size=\"3\">/source</font>目录，我的是<font color=\"red\" size=\"3\">C:\\Blog\\Hexo\\source</font>，新建<font color=\"red\" size=\"3\">CNAME</font>文件，<font color=\"red\" size=\"3\">（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=\"red\" size=\"3\">hexo g、hexo d</font>上传到<font color=\"red\" size=\"3\">github</font>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/29.png\" alt></p>\n<p>现在就可以通过我们的个性化域名：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.com、xxx.com\" target=\"_blank\" rel=\"noopener\">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p>\n<h1 id=\"更换自己喜欢的Hexo主题\"><a href=\"#更换自己喜欢的Hexo主题\" class=\"headerlink\" title=\"更换自己喜欢的Hexo主题\"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href=\"https://hexo.io/themes/\" title=\"Hexo主题专栏\" target=\"_blank\" rel=\"noopener\">Hexo主题专栏</a>可以看到很多<font color=\"red\" size=\"3\">Hexo</font>主题：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/30.png\" alt></p>\n<p>推荐：</p>\n<p><a href=\"https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app\" title=\"几个好用的hexo主题\" target=\"_blank\" rel=\"noopener\">几个好用的hexo主题</a> (By fail_perfectly)</p>\n<p>这里我们以<a href=\"http://huangxuan.me/\" title=\"Bean Tech\" target=\"_blank\" rel=\"noopener\">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color=\"red\" size=\"3\">GitHub</font>（<font color=\"red\" size=\"3\">有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/31.png\" alt></p>\n<p>点击进入主题的<font color=\"red\" size=\"3\">GitHub</font>地址：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/32.png\" alt></p>\n<p>复制该项目地址：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/33.png\" alt></p>\n<p>然后打开<font color=\"red\" size=\"3\"> Hexo </font>文件夹下的<font color=\"red\" size=\"3\"> themes</font> 目录（如：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>$ git clone 此处填写你刚才复制的主题地址</code></pre><p>以我们刚才复制的为例：</p>\n<pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io</code></pre><p>下载完成后即可在<font color=\"red\" size=\"3\"> themes </font>目录下生成 <font color=\"red\" size=\"3\">hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=\"red\" size=\"3\">Hexo</font> 文件夹下的配置文件 <font color=\"red\" size=\"3\">_config.yml </font>，找到关键字 <font color=\"red\" size=\"3\">theme</font>，修改参数为：<font color=\"red\" size=\"3\">theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/34.png\" alt></p>\n<p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=\"red\" size=\"3\">_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo_config.yml</font>），主要包含<font color=\"red\" size=\"3\"> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=\"red\" size=\"3\"> _config.yml </font>文件里都有相关注释，按需修改即可。</p>\n<h1 id=\"我的博客源代码\"><a href=\"#我的博客源代码\" class=\"headerlink\" title=\"我的博客源代码\"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href=\"https://github.com/MUYIio/hexo-themes-matery\" target=\"_blank\" rel=\"noopener\">https://github.com/MUYIio/hexo-themes-matery</a>，有心的话可以给个<font color=\"red\" size=\"3\">Star&amp;Fork</font>。</strong></p>\n<p>下载源代码：git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:MUYIio/hexo-themes-matery.git</p>\n<p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=\"red\" size=\"3\">Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p>\n<p>主题的原地址在这里：<a href=\"https://github.com/blinkfox/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p>\n<p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p>\n<table><tr><td bgcolor=\"orange\">\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p>\n<p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>\n","excerpt":"","more":"<p><img src=\"01.png\" alt></p>\n<p><font color=\"magenta\" size=\"4\"><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color=\"red\" size=\"4\"> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p>\n<p><img src=\"02.png\" alt></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ul>\n<li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p>\n</li>\n<li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p>\n</li>\n<li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p>\n</li>\n</ul>\n<p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" title=\"为什么你应该（从现在开始就）写博客\" target=\"_blank\" rel=\"noopener\">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p>\n<p><a href=\"https://www.zhihu.com/question/19916345\" title=\"为什么要自建博客？\" target=\"_blank\" rel=\"noopener\">《为什么要自建博客？》</a>   (By 知乎)</p>\n<p><a href=\"https://www.cnblogs.com/jhzhu/p/3893297.html\" title=\"我为什么写博客\" target=\"_blank\" rel=\"noopener\">《我为什么写博客》</a> （By 知明所以）</p>\n<p>我们需要知道搭建博客要用到的框架。<font color=\"red\" size=\"3\">Hexo</font>是高效的静态站点生成框架，它基于<font color=\"red\" size=\"3\">Node.js</font>。我们使用<font color=\"red\" size=\"3\">MarkDown</font>在本地编辑我们的博客文章，通过<font color=\"red\" size=\"3\">Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p>\n<h2 id=\"本文目录\"><a href=\"#本文目录\" class=\"headerlink\" title=\"本文目录\"></a>本文目录</h2><ul>\n<li><strong>快速搭建</strong></li>\n<li>安装<font color=\"red\" size=\"3\">Node.js</font></li>\n<li>添加国内镜像</li>\n<li>安装<font color=\"red\" size=\"3\">Git </font></li>\n<li>注册<font color=\"red\" size=\"3\">Github</font>账号</li>\n<li>创建<font color=\"red\" size=\"3\">Git</font>仓库</li>\n<li>安装<font color=\"red\" size=\"3\">Hexo</font> </li>\n<li>配置本地<font color=\"red\" size=\"3\">Hexo</font></li>\n<li>连接<font color=\"red\" size=\"3\">Github</font>与本地 </li>\n<li>写文章、发布文章 </li>\n<li><font color=\"red\" size=\"3\">MarkDown</font>文章编辑器说明</li>\n<li>配置个性化域名</li>\n<li>更换自己喜欢的<font color=\"red\" size=\"3\">Hexo</font>主题</li>\n<li>我的博客源代码</li>\n<li>结语</li>\n</ul>\n<hr>\n<h1 id=\"快速搭建（直接使用我的博客源代码）\"><a href=\"#快速搭建（直接使用我的博客源代码）\" class=\"headerlink\" title=\"快速搭建（直接使用我的博客源代码）\"></a>快速搭建（直接使用我的博客源代码）</h1><p><strong>建议自己成功搭建博客之后再使用我的源代码，新手容易出错</strong></p>\n<p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p>\n<p>在这里以我的博客为例。</p>\n<h2 id=\"一、下载博客源代码\"><a href=\"#一、下载博客源代码\" class=\"headerlink\" title=\"一、下载博客源代码\"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color=\"red\" size=\"3\">Star&amp;Fork</font>我的博客源代码：<a href=\"https://github.com/MUYIio/hexo-themes-matery\" target=\"_blank\" rel=\"noopener\">https://github.com/MUYIio/hexo-themes-matery</a>，这里我给出两种下载方法：</p>\n<p><img src=\"03.png\" alt></p>\n<p><strong>第一种</strong>：直接<font color=\"red\" size=\"3\">DownLoad</font>，下载到本地就可以。（<strong>不推荐</strong>）</p>\n<p><strong>第二种</strong>：如果你已经安装了<a href=\"https://git-scm.com/download/win\" title=\"Git\" target=\"_blank\" rel=\"noopener\">Git</a>，就可以右键单击<font color=\"red\" size=\"3\">Come Bash Here</font>运行</p>\n<pre><code class=\"bash\">git clone git@github.com:MUYIio/hexo-themes-matery.git</code></pre>\n<p>将所有文件下载到本地，这个复杂一点。</p>\n<h2 id=\"二、修改博客文档配置\"><a href=\"#二、修改博客文档配置\" class=\"headerlink\" title=\"二、修改博客文档配置\"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p>\n<ul>\n<li><strong>点击查看隐藏的文件夹删除 .git 文件夹，将自己博客仓库的 .git 文件夹拷贝进去</strong></li>\n<li>根目录配置文件<font color=\"red\" size=\"3\">_config.yml</font>和主题目录配置文件<font color=\"red\" size=\"3\">_config.yml</font>中修改个人信息。</li>\n<li>根目录配置文件中修改<font color=\"red\" size=\"3\">deploy</font>一栏的<font color=\"red\" size=\"3\">repository</font>，修改为自己的仓库地址。</li>\n<li>根目录配置文件中修改<font color=\"red\" size=\"3\">baidu_url_submit</font>一栏的<font color=\"red\" size=\"3\">token</font>。</li>\n<li>主题配置文件中修改<font color=\"red\" size=\"3\">gitalk</font>一栏，修改方法见正文。</li>\n</ul>\n<p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p>\n<p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p>\n<p><strong>本地环境搭建好之后会生成的文件：</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/35.png\" alt></p>\n<p>然后直接把<font color=\"red\" size=\"3\">Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/37.png\" alt></p>\n<p>然后在<font color=\"red\" size=\"3\">Hexo</font>文件夹下右键单击鼠标，点击 <font color=\"red\" size=\"3\">Git Bash Here</font>点击输入以下命令上传就可以了：</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>了解一下什么是<font color=\"red\" size=\"3\">Node.js</font>：</p>\n<blockquote>\n<p><font color=\"red\" size=\"3\">Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p>\n</blockquote>\n<p>需要用到的命令：</p>\n<pre><code>$ git --version\n$ node -v\n$ npm -v</code></pre><p><a href=\"https://nodejs.org/en/download/\" title=\"Node.js\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入<font color=\"red\" size=\"3\">Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=\"red\" size=\"3\">Next</font>。</p>\n<p><img src=\"04.png\" alt></p>\n<p>检验是否安装成功：<br>按<font color=\"red\" size=\"3\">Win+R</font>打开命令提示符，输入<font color=\"red\" size=\"3\">node -v</font>和<font color=\"red\" size=\"3\">npm -v</font>，如果出现版本号，那么就安装成功了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png\" alt></p>\n<h1 id=\"添加国内镜像\"><a href=\"#添加国内镜像\" class=\"headerlink\" title=\"添加国内镜像\"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p>\n<pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><blockquote>\n<p><font color=\"red\" size=\"3\">Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=\"red\" size=\"3\">Github</font>。</p>\n</blockquote>\n<p><a href=\"https://git-scm.com/download/win\" title=\"Git\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/005.png\" alt></p>\n<p>参考资料：<a href=\"https://www.cnblogs.com/jytx/p/5602927.html\" title=\"如何在windows下安装GIT\" target=\"_blank\" rel=\"noopener\">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p>\n<p>检验是否安装成功：</p>\n<p>安装完成后在命令提示符中输入<font color=\"red\" size=\"3\">git –version</font>验证是否安装成功</p>\n<pre><code>git --version</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/06.png\" alt></p>\n<h1 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h1><p><font color=\"red\" size=\"3\">Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href=\"https://github.com/\" title=\"Github\" target=\"_blank\" rel=\"noopener\">点击此处</a>进入<font color=\"red\" size=\"3\">Github</font>官网点击 <font color=\"red\" size=\"3\">Sign Up </font>注册账户。</p>\n<h1 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h1><p>登录<font color=\"red\" size=\"3\">Github</font>创建一个仓库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/07.png\" alt></p>\n<p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color=\"red\" size=\"3\">.github.io</font>后缀，<font color=\"red\" size=\"3\">README</font>初始化也要勾上。名称一定要和你的<font color=\"red\" size=\"3\">Github</font>名字完全一样，比如你<font color=\"red\" size=\"3\">github</font>名字叫<font color=\"red\" size=\"3\">A</font>，那么仓库名字一定要是<font color=\"red\" size=\"3\">A.github.io</font>。</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/08.png\" alt></p>\n<p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color=\"red\" size=\"3\">Settings</font>（不是头像下面那个<font color=\"red\" size=\"3\">Settings</font>），向下拉到最后有个<font color=\"red\" size=\"3\">GitHub Pages</font>，点击<font color=\"red\" size=\"3\">Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=\"red\" size=\"3\">GitHub Pages</font>，就可以预览效果啦。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/09.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/10.png\" alt></p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><blockquote>\n<p><font color=\"red\" size=\"3\">Hexo</font>是一款基于<font color=\"red\" size=\"3\">Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=\"red\" size=\"3\">GitHub</font>和<font color=\"red\" size=\"3\">Heroku</font>上，是搭建博客的首选框架。</p>\n</blockquote>\n<p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=\"red\" size=\"3\">（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下<font color=\"red\" size=\"3\"> npm </font>命令即可安装</p>\n<pre><code>$ npm install hexo-cli -g</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/11.png\" alt></p>\n<p>输入<font color=\"red\" size=\"3\">hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p>\n<h1 id=\"配置本地hexo\"><a href=\"#配置本地hexo\" class=\"headerlink\" title=\"配置本地hexo\"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color=\"red\" size=\"3\">Hexo</font>文件夹，比如我的<font color=\"red\" size=\"3\">（C/panakot Blog/Hexo）</font>，在<font color=\"red\" size=\"3\">Hexo</font>文件夹下右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>，依次输入以下<font color=\"red\" size=\"3\"> npm </font>命令即可初始化。</p>\n<pre><code>hexo init\nnpm install</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/12.png\" alt></p>\n<p>初始化成功生成的文件：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/13.png\" alt></p>\n<p>接着我们输入<font color=\"red\" size=\"3\">hexo g</font>生成静态网页，然后输入<font color=\"red\" size=\"3\">hexo s</font>打开本地服务器，然后浏览器打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p>\n<p>显示以下信息说明操作正确：</p>\n<p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/14.png\" alt></p>\n<p>按<font color=\"red\" size=\"3\">ctrl+c</font>关闭本地服务器。</p>\n<p><strong>我们以后常用到的<font color=\"red\" size=\"3\">Hexo</font>命令：</strong></p>\n<ul>\n<li><p><font color=\"red\" size=\"3\">hexo s</font>等价于 <font color=\"red\" size=\"3\">hexo server</font>  #<font color=\"red\" size=\"3\">Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo g</font> 等价于 <font color=\"red\" size=\"3\">hexo generate</font>  #生成静态网页 (执行 $ <font color=\"red\" size=\"3\">hexo g</font>后会在站点根目录下生成<font color=\"red\" size=\"3\">public</font>文件夹,<font color=\"red\" size=\"3\"> hexo</font>会将”<font color=\"red\" size=\"3\">/blog/source/</font>“ 下面的<font color=\"red\" size=\"3\">.md</font>后缀的文件编译为<font color=\"red\" size=\"3\">.html</font>后缀的文件,存放在”<font color=\"red\" size=\"3\">/blog/public/ </font>“ 路径下)</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo d </font>等价于 <font color=\"red\" size=\"3\">hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=\"red\" size=\"3\">github</font>)</p>\n</li>\n<li><p><font color=\"red\" size=\"3\">hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=\"red\" size=\"3\">public</font>文件夹</p>\n</li>\n</ul>\n<h1 id=\"连接Github与本地\"><a href=\"#连接Github与本地\" class=\"headerlink\" title=\"连接Github与本地\"></a>连接Github与本地</h1><h2 id=\"一、生成密钥\"><a href=\"#一、生成密钥\" class=\"headerlink\" title=\"一、生成密钥\"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color=\"red\" size=\"3\">Git Bash Here</font>输入以下命令：</p>\n<pre><code>git config --global user.name &quot;Name&quot;\ngit config --global user.email &quot;Email&quot;</code></pre><p><strong><font color=\"red\" size=\"3\">Name</font>和<font color=\"red\" size=\"3\">Email</font>是我们注册<font color=\"red\" size=\"3\">Github</font>时的用户名和邮箱。</strong></p>\n<p>然后生成密钥：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;Email&quot;</code></pre><p><strong><font color=\"red\" size=\"3\">Email</font>是我们注册<font color=\"red\" size=\"3\">Github</font>时的邮箱</strong></p>\n<p>然后会出现：</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n//到这里可以直接回车将密钥按默认文件进行存储</code></pre><p>回车之后：</p>\n<pre><code>Enter passphrase (empty for no passphrase):\n//这里是要你输入密码，其实不需要输什么密码，直接回车就行\nEnter same passphrase again:</code></pre><p>接下来会有：</p>\n<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.\nYour public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\nThe key fingerprint is:\n这里是各种字母数字组成的字符串，结尾是你的邮箱\nThe key&#39;s randomart image is:\n这里也是各种字母数字符号组成的字符串</code></pre><p>现在密钥已经生成，一般存放在<font color=\"red\" size=\"3\">（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p>\n<pre><code> clip &lt; ~/.ssh/id_rsa.pub</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/15.png\" alt></p>\n<h2 id=\"二、连接Github\"><a href=\"#二、连接Github\" class=\"headerlink\" title=\"二、连接Github\"></a>二、连接Github</h2><p>在<font color=\"red\" size=\"3\">Github</font>头像下面点击<font color=\"red\" size=\"3\">Settings</font>，再点击<font color=\"red\" size=\"3\">SSH and GPG keys</font>，新建一个<font color=\"red\" size=\"3\">SSH</font>，名字任意。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/16.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/17.png\" alt></p>\n<p>然后将刚才复制的密钥添加就可以了，像这样：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/18.png\" alt></p>\n<p><strong>本地连接Github</strong></p>\n<p>右键单击鼠标，点击<font color=\"red\" size=\"3\"> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p>\n<pre><code>ssh -T git@github.com\n//注意不要做任何修改</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/19.png\" alt></p>\n<p>用编辑器打开博客根目录下的<font color=\"red\" size=\"3\">_config.yml</font>文件，我用的是记事本，当然vscode也可以这是博客的配置文件，我们需要修改一下才能连接<font color=\"red\" size=\"3\">Github</font>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/20.png\" alt></p>\n<p>修改最后一行的配置：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:</code></pre><p>改为：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:panakot/panakot.github.io.git  //自己的仓库地址\n  branch: master</code></pre><p>这个是我的更为完整：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n- type: git\n  repository:\n    github: git@github.com:MUYIio/MUYIio.github.io.git       //GitHub仓库\n    coding: git@e.coding.net:godxiaolon/yshawlon/feezxe.git   //coding仓库\n    gitee: git@gitee.com:feezxe/feezxe.git       //gitee仓库\n    #repo: root@xxxxx :/home/git/blog.git        //前面加#表示注释掉，这个是服务器地址\n  branch: master\n- type: baidu_url_submitter</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/21.png\" alt></p>\n<p>切记：</p>\n<ul>\n<li><strong><font color=\"red\" size=\"3\">repository</font>修改为你自己的<font color=\"red\" size=\"3\">github</font>项目地址</strong>。</li>\n<li><strong>每一个冒号后面都有一个空格。</strong></li>\n</ul>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color=\"red\" size=\"3\">Git Bash Here</font>输入以下命令，安装一个扩展.</p>\n<pre><code>npm i hexo-deployer-git</code></pre><p>然后输入下面的命令，新建一篇文章。</p>\n<pre><code>hexo new post &quot;article title&quot;</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/22.png\" alt></p>\n<p>然后打开<font color=\"red\" size=\"3\">C:\\panakot Blog\\Hexo\\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=\"red\" size=\"3\">.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/23.png\" alt></p>\n<p>编写完<font color=\"red\" size=\"3\">markdown</font>文件后，根目录下右键打开<font color=\"red\" size=\"3\">Git Bash Here</font>输入<font color=\"red\" size=\"3\">hexo g</font>生成静态网页，然后输入<font color=\"red\" size=\"3\">hexo s</font>可以本地预览效果，最后输入<font color=\"red\" size=\"3\">hexo d</font>上传到<font color=\"red\" size=\"3\">github</font>上。</p>\n<p>你的博客地址：<font color=\"red\" size=\"3\">https://你的用户名.github.io</font>，比如我的是：<a href=\"https://muyiio.github.io\" target=\"_blank\" rel=\"noopener\">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p>\n<h1 id=\"MarkDown文章编辑器说明\"><a href=\"#MarkDown文章编辑器说明\" class=\"headerlink\" title=\"MarkDown文章编辑器说明\"></a>MarkDown文章编辑器说明</h1><blockquote>\n<p>前面我们提到了使用<font color=\"red\" size=\"3\">MarkDown</font>编辑我们的博客文章。<font color=\"red\" size=\"3\"> Markdown</font> 是<font color=\"red\" size=\"3\"> 2004</font> 年由 <font color=\"red\" size=\"3\">John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=\"red\" size=\"3\"> .md </font>文件可以使用支持 <font color=\"red\" size=\"3\">Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=\"red\" size=\"3\">（.md文件）</font>保存到<font color=\"red\" size=\"3\"> \\Hexo\\source_posts </font>文件夹下即可。</p>\n</blockquote>\n<p> <font color=\"red\" size=\"3\">Windows </font>上推荐使用 <font color=\"red\" size=\"3\">MarkdownPad2 </font>或者<font color=\"red\" size=\"3\">小书匠</font>编辑器，<font color=\"red\" size=\"3\">macOS </font>上使用<font color=\"red\" size=\"3\"> Mou</font> 编辑器，<font color=\"red\" size=\"3\">Linux </font>上使用 <font color=\"red\" size=\"3\">Remarkable</font> 编辑器，<font color=\"red\" size=\"3\">Web </font>端上使用 简书。</p>\n<p><strong><a href=\"http://markdownpad.com/download.html\" title=\"MarkDown\" target=\"_blank\" rel=\"noopener\">点击此处</a>下载<font color=\"red\" size=\"3\">MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/q81RER/\" title=\"献给写作者的 Markdown 新手指南\" target=\"_blank\" rel=\"noopener\">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p>\n<p><a href=\"https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app\" title=\"Markdown语法图文全面详解\" target=\"_blank\" rel=\"noopener\">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p>\n<p><a href=\"https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app\" title=\"Markdown 语法手册 （完整整理版）\" target=\"_blank\" rel=\"noopener\">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p>\n<p><a href=\"https://sspai.com/post/25137\" title=\"认识与入门 Markdown\" target=\"_blank\" rel=\"noopener\">《认识与入门 Markdown》</a>（By Te_Lee）</p>\n<p>写完文章记得在博客根目录<font color=\"red\" size=\"3\">Bash Here</font>输入<font color=\"red\" size=\"3\">hexo g</font>和<font color=\"red\" size=\"3\">hexo d</font>上传到网站。</p>\n<h1 id=\"配置个性化域名\"><a href=\"#配置个性化域名\" class=\"headerlink\" title=\"配置个性化域名\"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.github.io\" target=\"_blank\" rel=\"noopener\">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.com\" target=\"_blank\" rel=\"noopener\">www.xxx.com</a> </font>。</p>\n<p><a href=\"https://www.aliyun.com/\" title=\"阿里云\" target=\"_blank\" rel=\"noopener\">阿里云</a>和<a href=\"https://cloud.tencent.com/\" title=\"腾讯云\" target=\"_blank\" rel=\"noopener\">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/24.png\" alt></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/25.png\" alt></p>\n<p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color=\"red\" size=\"3\">CNAME </font>，第一个主机记录为<font color=\"red\" size=\"3\"> @ </font>，第二个主机记录为<font color=\"red\" size=\"3\"> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=\"red\" size=\"3\">muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/27.png\" alt></p>\n<p><strong>方法二：</strong>两个记录类型为<font color=\"red\" size=\"3\"> A </font>，第一个主机记录为<font color=\"red\" size=\"3\"> @ </font>，第二个主机记录为<font color=\"red\" size=\"3\"> www</font>，记录值都为博客的<font color=\"red\" size=\"3\"> IP</font> 地址，<font color=\"red\" size=\"3\">IP </font>地址可以<font color=\"red\" size=\"3\"> cmd</font> 中输入<font color=\"red\" size=\"3\"> ping</font> 你的博客地址 获得（比如我的：<font color=\"red\" size=\"3\">ping muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p>参考资料：</p>\n<p><a href=\"https://blog.csdn.net/it_man/article/details/9017307\" title=\"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\" target=\"_blank\" rel=\"noopener\">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/26.png\" alt></p>\n<p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p>\n<blockquote>\n<p>如果你填写的是没有<font color=\"red\" size=\"3\">www</font>的，比如 <font color=\"red\" size=\"3\">muyio.com</font>，那么无论是访问<font color=\"red\" size=\"3\"> <a href=\"https://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">https://www.muyiio.com</a> </font>还是<font color=\"red\" size=\"3\"> <a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a></font> ，都会自动跳转到<font color=\"red\" size=\"3\"> <a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a></font>。</p>\n</blockquote>\n<blockquote>\n<p>如果你填写的是带<font color=\"red\" size=\"3\">www</font>的，比如 <font color=\"red\" size=\"3\"><a href=\"http://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">www.muyiio.com</a> </font>，那么无论是访问 <font color=\"red\" size=\"3\"><a href=\"https://www.muyiio.com\" target=\"_blank\" rel=\"noopener\">https://www.muyiio.com</a></font> 还是 <font color=\"red\" size=\"3\"><a href=\"https://muyiio.com\" target=\"_blank\" rel=\"noopener\">https://muyiio.com</a> </font>，都会自动跳转到 <font color=\"red\" size=\"3\"><a href=\"http://www.imuyiio.com\" target=\"_blank\" rel=\"noopener\">http://www.imuyiio.com</a></font>。</p>\n</blockquote>\n<p>然后打开你的<font color=\"red\" size=\"3\">github</font>博客项目，点击settings，拉到下面<font color=\"red\" size=\"3\">Custom domain</font>处，填上你自己的域名，保存就可以了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/28.png\" alt></p>\n<p>现在我们的项目根目录应该会出现一个名为<font color=\"red\" size=\"3\">CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=\"red\" size=\"3\">/source</font>目录，我的是<font color=\"red\" size=\"3\">C:\\Blog\\Hexo\\source</font>，新建<font color=\"red\" size=\"3\">CNAME</font>文件，<font color=\"red\" size=\"3\">（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=\"red\" size=\"3\">hexo g、hexo d</font>上传到<font color=\"red\" size=\"3\">github</font>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/29.png\" alt></p>\n<p>现在就可以通过我们的个性化域名：<font color=\"red\" size=\"3\"><a href=\"http://www.xxx.com、xxx.com\" target=\"_blank\" rel=\"noopener\">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p>\n<h1 id=\"更换自己喜欢的Hexo主题\"><a href=\"#更换自己喜欢的Hexo主题\" class=\"headerlink\" title=\"更换自己喜欢的Hexo主题\"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href=\"https://hexo.io/themes/\" title=\"Hexo主题专栏\" target=\"_blank\" rel=\"noopener\">Hexo主题专栏</a>可以看到很多<font color=\"red\" size=\"3\">Hexo</font>主题：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/30.png\" alt></p>\n<p>推荐：</p>\n<p><a href=\"https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app\" title=\"几个好用的hexo主题\" target=\"_blank\" rel=\"noopener\">几个好用的hexo主题</a> (By fail_perfectly)</p>\n<p>这里我们以<a href=\"http://huangxuan.me/\" title=\"Bean Tech\" target=\"_blank\" rel=\"noopener\">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color=\"red\" size=\"3\">GitHub</font>（<font color=\"red\" size=\"3\">有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/31.png\" alt></p>\n<p>点击进入主题的<font color=\"red\" size=\"3\">GitHub</font>地址：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/32.png\" alt></p>\n<p>复制该项目地址：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/1/33.png\" alt></p>\n<p>然后打开<font color=\"red\" size=\"3\"> Hexo </font>文件夹下的<font color=\"red\" size=\"3\"> themes</font> 目录（如：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>$ git clone 此处填写你刚才复制的主题地址</code></pre><p>以我们刚才复制的为例：</p>\n<pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io</code></pre><p>下载完成后即可在<font color=\"red\" size=\"3\"> themes </font>目录下生成 <font color=\"red\" size=\"3\">hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=\"red\" size=\"3\">Hexo</font> 文件夹下的配置文件 <font color=\"red\" size=\"3\">_config.yml </font>，找到关键字 <font color=\"red\" size=\"3\">theme</font>，修改参数为：<font color=\"red\" size=\"3\">theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/1/34.png\" alt></p>\n<p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=\"red\" size=\"3\"> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=\"red\" size=\"3\">_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo_config.yml</font>），主要包含<font color=\"red\" size=\"3\"> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=\"red\" size=\"3\">C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=\"red\" size=\"3\"> _config.yml </font>文件里都有相关注释，按需修改即可。</p>\n<h1 id=\"我的博客源代码\"><a href=\"#我的博客源代码\" class=\"headerlink\" title=\"我的博客源代码\"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href=\"https://github.com/MUYIio/hexo-themes-matery\" target=\"_blank\" rel=\"noopener\">https://github.com/MUYIio/hexo-themes-matery</a>，有心的话可以给个<font color=\"red\" size=\"3\">Star&amp;Fork</font>。</strong></p>\n<p>下载源代码：git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:MUYIio/hexo-themes-matery.git</p>\n<p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=\"red\" size=\"3\">Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p>\n<p>主题的原地址在这里：<a href=\"https://github.com/blinkfox/hexo-theme-matery\" target=\"_blank\" rel=\"noopener\">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p>\n<p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p>\n<table><tr><td bgcolor=\"orange\">\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p>\n<p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>\n","path":"1.html","permalink":"https://www.yshawlon.cn/1.html","tags":[{"name":"Github","_id":"clq6dy4800006ikw0unrgcg6e","slug":"Github","path":"tags/Github/","permalink":"https://www.yshawlon.cn/tags/Github/","length":4},{"name":"Hexo","_id":"clq6dy489000dikw04lptx64o","slug":"Hexo","path":"tags/Hexo/","permalink":"https://www.yshawlon.cn/tags/Hexo/","length":12},{"name":"博客搭建","_id":"clq6dy48e000iikw063g6urmj","slug":"博客搭建","path":"tags/博客搭建/","permalink":"https://www.yshawlon.cn/tags/博客搭建/","length":1}],"categories":[{"name":"Blog","_id":"clq6dy47z0005ikw0td637o94","slug":"Blog","path":"categories/Blog/","permalink":"https://www.yshawlon.cn/categories/Blog/","length":12}],"prev":{"title":"Hexo 双线部署到 Coding Pages 和 GitHub Pages 提升访问速度","date":"2020-02-20T15:15:24.000Z","summary":"为了摆脱GitHub的龟速暴击，我们选择把博客托管到Coding来提升访问速度。","slug":"Hexo-双线部署到-Coding-Pages-和-GitHub-Pages-提升访问速度","published":true,"updated":"2021-05-18T10:09:24.745Z","_id":"clq6dy48p000vikw0ahtn9vvb","layout":"post","photos":[],"link":"","excerpt":"","path":"hexo-shuang-xian-bu-shu-dao-coding-pages-he-github-pages-ti-sheng-fang-wen-su-du.html","permalink":"https://www.yshawlon.cn/hexo-shuang-xian-bu-shu-dao-coding-pages-he-github-pages-ti-sheng-fang-wen-su-du.html","__post":true},"next":{"title":"2019总结及2020规划","date":"2020-01-16T16:17:54.000Z","summary":"首先，感谢屏幕前的你来到我的博客，第一篇博客记录一下今年的规划。","slug":"2019总结及2020规划","published":true,"updated":"2021-10-21T09:54:37.349Z","_id":"clq6dy47x0004ikw0h2jjqjxd","layout":"post","photos":[],"link":"","excerpt":"","path":"2019-zong-jie-ji-2020-gui-hua.html","permalink":"https://www.yshawlon.cn/2019-zong-jie-ji-2020-gui-hua.html","__post":true},"__post":true}