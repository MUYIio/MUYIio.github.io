{"title":"使用Java Arrays类进行排序","date":"2021-10-21T06:02:24.000Z","toc":true,"summary":"C语言有qsort()函数，C++有sort()函数，java语言有Arrays类（与Array区分）","source":"_posts/使用Java-Arrays类进行排序.md","raw":"---\ntitle: 使用Java Arrays类进行排序\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-10-21 14:02:24\npassword:\nsummary: C语言有qsort()函数，C++有sort()函数，java语言有Arrays类（与Array区分）\ntags:\n - 排序\ncategories:\n- Java\nkeywords:\ndescription:\n---\n\n## 使用Java Arrays类进行排序\n\n在使用排序算法时，C语言有`qsort()`函数，C++有`sort()`函数，java语言有`Arrays`类（与Array区分），记录一下使用Arrays排序算法的知识点。\n\n### 1.对基本数据类型的数组的排序：\n\n**tips：**\n\n- 1.Arrays类中的sort()使用的是“经过调优的快速排序法;\n\n- 2.比如int[]，double[]，char[]等基数据类型的数组，Arrays类之只是提供了默认的升序排列，没有提供相应的降序排列方法。\n- 3.要对基础类型的数组进行降序排序，需要将这些数组转化为对应的封装类数组，如Integer[]，Double[]，Character[]等，对这些类数组进行排序。(其实还不如先进行升序排序，自己在转为降序)。\n\n\n\n**函数原型（默认升序）：**\n\n```java\nstatic void sort(int[] a)                               //  对指定的 int 型数组按数字升序进行排序\nstatic void sort(int[] a, int fromIndex, int toIndex)    //  对指定 int 型数组的指定范围按数字升序进行排序\n```\n\n**代码实例：**\n\n```java\nimport java.util.Arrays;\n\npublic class ArraysSort_11 {\n  public static void main(String args[])\n  {\n\t int[] a={1,4,-1,5,0};\n\tArrays.sort(a);\n\t\n\t//数组a[]的内容变为{-1,0,1,4,5}\n\t\n\tfor(int i=0;i<a.length;i++)\n\t\tSystem.out.print(a[i]+\" \");\n  }\n}\n```\n\n\n\n### 2.对复合数据类型的数据的排序：\n\n **函数原型：** \n\n```java\n(1)public static<T> void sort(T[] a，Comparator c) // 根据指定比较器产生的顺序对指定对象数组进行排序。\n(2)public static<T> void sort(T[] a，int fromIndex，int toIndex，Comparator c) // 根据指定比较器产生的顺序对指定对象数组的指定范围进行排序。　\n```\n\n**代码实例：**\n\n```java\npackage aa;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\npublic class Arraysort {\n  Point[] arr;\n  Arraysort(){\n  \tarr=new Point[4];  //定义对象数组arr，并分配存储的空间\n    for(int i=0;i<4;i++)\n    \tarr[i]=new Point();\n  }\n\n  public static void main(String[] args) {\n\tArraysort sort=new Arraysort();\n\tsort.arr[0].x=2;sort.arr[0].y=1;  //初始化，对象数组中的数据\n\tsort.arr[1].x=2;sort.arr[1].y=2;\n\tsort.arr[2].x=1;sort.arr[2].y=2;\n\tsort.arr[3].x=0;sort.arr[3].y=1;\n\n\tArrays.sort(sort.arr, new MyComprator());  //使用指定的排序器，进行排序\n\t\tfor(int i=0;i<4;i++)  //输出排序结果\n\t\t\tSystem.out.println(\"(\"+sort.arr[i].x+\",\"+sort.arr[i].y+\")\");\n  }\n}\n\nclass Point{\n  int x;\n  int y;\n}\n\n//比较器，x坐标从小到大排序；x相同时，按照y从小到大排序\nclass MyComprator implements Comparator {\n  public int compare(Object arg0, Object arg1) {\n\tPoint t1=(Point)arg0;\n\tPoint t2=(Point)arg1;\n\tif(t1.x != t2.x)\n\t\treturn t1.x>t2.x? 1:-1;\n\telse\n   \t\treturn t1.y>t2.y? 1:-1;\n  }\n}\n```\n\n \n\n**tips:**上面的两个算法是经过调优的合并排序算法","slug":"使用Java-Arrays类进行排序","published":true,"updated":"2021-10-21T06:58:21.958Z","_id":"clq6dy4a7002likw040vcio4s","comments":true,"layout":"post","photos":[],"link":"","html":"<h2 id=\"使用Java-Arrays类进行排序\"><a href=\"#使用Java-Arrays类进行排序\" class=\"headerlink\" title=\"使用Java Arrays类进行排序\"></a>使用Java Arrays类进行排序</h2><p>在使用排序算法时，C语言有<code>qsort()</code>函数，C++有<code>sort()</code>函数，java语言有<code>Arrays</code>类（与Array区分），记录一下使用Arrays排序算法的知识点。</p>\n<h3 id=\"1-对基本数据类型的数组的排序：\"><a href=\"#1-对基本数据类型的数组的排序：\" class=\"headerlink\" title=\"1.对基本数据类型的数组的排序：\"></a>1.对基本数据类型的数组的排序：</h3><p><strong>tips：</strong></p>\n<ul>\n<li><p>1.Arrays类中的sort()使用的是“经过调优的快速排序法;</p>\n</li>\n<li><p>2.比如int[]，double[]，char[]等基数据类型的数组，Arrays类之只是提供了默认的升序排列，没有提供相应的降序排列方法。</p>\n</li>\n<li><p>3.要对基础类型的数组进行降序排序，需要将这些数组转化为对应的封装类数组，如Integer[]，Double[]，Character[]等，对这些类数组进行排序。(其实还不如先进行升序排序，自己在转为降序)。</p>\n</li>\n</ul>\n<p><strong>函数原型（默认升序）：</strong></p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span>                               <span class=\"token comment\" spellcheck=\"true\">//  对指定的 int 型数组按数字升序进行排序</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fromIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> toIndex<span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">//  对指定 int 型数组的指定范围按数字升序进行排序</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>代码实例：</strong></p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Arrays<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArraysSort_11</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//数组a[]的内容变为{-1,0,1,4,5}</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-对复合数据类型的数据的排序：\"><a href=\"#2-对复合数据类型的数据的排序：\" class=\"headerlink\" title=\"2.对复合数据类型的数据的排序：\"></a>2.对复合数据类型的数据的排序：</h3><p> <strong>函数原型：</strong> </p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a，Comparator c<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// 根据指定比较器产生的顺序对指定对象数组进行排序。</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a，<span class=\"token keyword\">int</span> fromIndex，<span class=\"token keyword\">int</span> toIndex，Comparator c<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// 根据指定比较器产生的顺序对指定对象数组的指定范围进行排序。　</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>代码实例：</strong></p>\n<pre class=\"line-numbers language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> aa<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Arrays<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Comparator<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Arraysort</span> <span class=\"token punctuation\">{</span>\n  Point<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">Arraysort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      arr<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//定义对象数组arr，并分配存储的空间</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Arraysort sort<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Arraysort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//初始化，对象数组中的数据</span>\n    sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyComprator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//使用指定的排序器，进行排序</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\">//输出排序结果</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span><span class=\"token operator\">+</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span>sort<span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//比较器，x坐标从小到大排序；x相同时，按照y从小到大排序</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComprator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>Object arg0<span class=\"token punctuation\">,</span> Object arg1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Point t1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>arg0<span class=\"token punctuation\">;</span>\n    Point t2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>arg1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">!=</span> t2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> t1<span class=\"token punctuation\">.</span>x<span class=\"token operator\">></span>t2<span class=\"token punctuation\">.</span>x<span class=\"token operator\">?</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n           <span class=\"token keyword\">return</span> t1<span class=\"token punctuation\">.</span>y<span class=\"token operator\">></span>t2<span class=\"token punctuation\">.</span>y<span class=\"token operator\">?</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>tips:</strong>上面的两个算法是经过调优的合并排序算法</p>\n","excerpt":"","more":"<h2 id=\"使用Java-Arrays类进行排序\"><a href=\"#使用Java-Arrays类进行排序\" class=\"headerlink\" title=\"使用Java Arrays类进行排序\"></a>使用Java Arrays类进行排序</h2><p>在使用排序算法时，C语言有<code>qsort()</code>函数，C++有<code>sort()</code>函数，java语言有<code>Arrays</code>类（与Array区分），记录一下使用Arrays排序算法的知识点。</p>\n<h3 id=\"1-对基本数据类型的数组的排序：\"><a href=\"#1-对基本数据类型的数组的排序：\" class=\"headerlink\" title=\"1.对基本数据类型的数组的排序：\"></a>1.对基本数据类型的数组的排序：</h3><p><strong>tips：</strong></p>\n<ul>\n<li><p>1.Arrays类中的sort()使用的是“经过调优的快速排序法;</p>\n</li>\n<li><p>2.比如int[]，double[]，char[]等基数据类型的数组，Arrays类之只是提供了默认的升序排列，没有提供相应的降序排列方法。</p>\n</li>\n<li><p>3.要对基础类型的数组进行降序排序，需要将这些数组转化为对应的封装类数组，如Integer[]，Double[]，Character[]等，对这些类数组进行排序。(其实还不如先进行升序排序，自己在转为降序)。</p>\n</li>\n</ul>\n<p><strong>函数原型（默认升序）：</strong></p>\n<pre><code class=\"java\">static void sort(int[] a)                               //  对指定的 int 型数组按数字升序进行排序\nstatic void sort(int[] a, int fromIndex, int toIndex)    //  对指定 int 型数组的指定范围按数字升序进行排序</code></pre>\n<p><strong>代码实例：</strong></p>\n<pre><code class=\"java\">import java.util.Arrays;\n\npublic class ArraysSort_11 {\n  public static void main(String args[])\n  {\n     int[] a={1,4,-1,5,0};\n    Arrays.sort(a);\n\n    //数组a[]的内容变为{-1,0,1,4,5}\n\n    for(int i=0;i&lt;a.length;i++)\n        System.out.print(a[i]+&quot; &quot;);\n  }\n}</code></pre>\n<h3 id=\"2-对复合数据类型的数据的排序：\"><a href=\"#2-对复合数据类型的数据的排序：\" class=\"headerlink\" title=\"2.对复合数据类型的数据的排序：\"></a>2.对复合数据类型的数据的排序：</h3><p> <strong>函数原型：</strong> </p>\n<pre><code class=\"java\">(1)public static&lt;T&gt; void sort(T[] a，Comparator c) // 根据指定比较器产生的顺序对指定对象数组进行排序。\n(2)public static&lt;T&gt; void sort(T[] a，int fromIndex，int toIndex，Comparator c) // 根据指定比较器产生的顺序对指定对象数组的指定范围进行排序。　</code></pre>\n<p><strong>代码实例：</strong></p>\n<pre><code class=\"java\">package aa;\nimport java.util.Arrays;\nimport java.util.Comparator;\n\npublic class Arraysort {\n  Point[] arr;\n  Arraysort(){\n      arr=new Point[4];  //定义对象数组arr，并分配存储的空间\n    for(int i=0;i&lt;4;i++)\n        arr[i]=new Point();\n  }\n\n  public static void main(String[] args) {\n    Arraysort sort=new Arraysort();\n    sort.arr[0].x=2;sort.arr[0].y=1;  //初始化，对象数组中的数据\n    sort.arr[1].x=2;sort.arr[1].y=2;\n    sort.arr[2].x=1;sort.arr[2].y=2;\n    sort.arr[3].x=0;sort.arr[3].y=1;\n\n    Arrays.sort(sort.arr, new MyComprator());  //使用指定的排序器，进行排序\n        for(int i=0;i&lt;4;i++)  //输出排序结果\n            System.out.println(&quot;(&quot;+sort.arr[i].x+&quot;,&quot;+sort.arr[i].y+&quot;)&quot;);\n  }\n}\n\nclass Point{\n  int x;\n  int y;\n}\n\n//比较器，x坐标从小到大排序；x相同时，按照y从小到大排序\nclass MyComprator implements Comparator {\n  public int compare(Object arg0, Object arg1) {\n    Point t1=(Point)arg0;\n    Point t2=(Point)arg1;\n    if(t1.x != t2.x)\n        return t1.x&gt;t2.x? 1:-1;\n    else\n           return t1.y&gt;t2.y? 1:-1;\n  }\n}</code></pre>\n<p><strong>tips:</strong>上面的两个算法是经过调优的合并排序算法</p>\n","path":"shi-yong-java-arrays-lei-jin-xing-pai-xu.html","permalink":"https://www.yshawlon.cn/shi-yong-java-arrays-lei-jin-xing-pai-xu.html","tags":[{"name":"排序","_id":"clq6dy4b90054ikw07hiiu245","slug":"排序","path":"tags/排序/","permalink":"https://www.yshawlon.cn/tags/排序/","length":2}],"categories":[{"name":"Java","_id":"clq6dy4b00049ikw0qslmlfml","slug":"Java","path":"categories/Java/","permalink":"https://www.yshawlon.cn/categories/Java/","length":2}],"prev":{"title":"十大经典排序算法(附动画及代码)","date":"2021-12-14T02:44:44.000Z","summary":"关于各种排序算法的笔记总结，含代码展示和动画演示！","slug":"qSort","published":true,"updated":"2022-06-06T14:37:33.122Z","_id":"clq6dy49w001zikw0ccfcywxz","layout":"post","photos":[],"link":"","excerpt":"","path":"qsort.html","permalink":"https://www.yshawlon.cn/qsort.html","__post":true},"next":{"title":"C++ 中关于Lambda 表达式的总结","date":"2021-10-18T08:57:56.000Z","summary":"Lambda表达式是C++ 11新特性之一，总的来说就是一个函数。","slug":"C-中关于Lambda-表达式的总结","published":true,"updated":"2022-05-23T15:03:31.054Z","_id":"clq6dy4810008ikw0poi31mhm","layout":"post","photos":[],"link":"","excerpt":"","path":"c-zhong-guan-yu-lambda-biao-da-shi-de-zong-jie.html","permalink":"https://www.yshawlon.cn/c-zhong-guan-yu-lambda-biao-da-shi-de-zong-jie.html","__post":true},"__post":true}