{"title":"Hexo博客部署到腾讯云服务器(使用宝塔面板)","date":"2020-04-10T09:13:54.000Z","toc":true,"summary":"宝塔Linux是提升运维效率的服务器管理软件，一键LAMP/LNMP/集群/监控/网站/FTP/数据","source":"_posts/使用宝塔面板一键部署hexo博客.md","raw":"---\ntitle: Hexo博客部署到腾讯云服务器(使用宝塔面板)\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-04-10 17:13:54\npassword:\nsummary: 宝塔Linux是提升运维效率的服务器管理软件，一键LAMP/LNMP/集群/监控/网站/FTP/数据\ntags: \n- Hexo\ncategories:\n- 服务器\n---\n\n\n\n前两天突然发现网站挂了，因为Coding和GitHub同时故障。于是我的博客也进不去！虽然博客也部署在服务器，但是没有开启HTTPS,也没有部署证书。所以就想用宝塔面板来部署博客。\n\n**使用宝塔面板的好处：**\n\n- **操作更方便，习惯了Windows或者对Linux不熟悉的朋友可以更方便**\n\n- **添加证书更加方便，而且可以开启HTTPS**\n\n\n**我的服务器：**\n\n- 系统 `CentOS 7.5 64bit`\n\n- 配置 `标准型S2/1核/2GB/1Mbps`\n\n\n\n**服务器需要的环境**\n\n- 环境：`git`，`Nginx`，`宝塔Linux`\n- 使用`git` 自动化部署发布\n\n\n\n\n\n打开腾讯云，进入【云服务器】→【登录】\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/02.png)\n\n\n\n\n\n>  初始密码在右上角消息里面有\n\n\n\n# 1】Git安装及配置\n\n\n\n### 一、安装依赖库和编译工具\n\n- 安装依赖库：\n\n  ```bash\n  yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel \n  ```\n\n\n\n然后会出现：\n\n```bash\nIs this ok [y/d/N]:\n```\n\n输入`y`继续安装，后面也一样。\n\n\n\n- 安装编译工具：\n\n  ```bash\n  yum install gcc perl-ExtUtils-MakeMaker package \n  ```\n\n\n\n### 二、下载 git并解压编译安装\n\n\n\n- 查看服务器已有的git版本\n\n```bash\ngit --version\n```\n\n\n\n然后会看到：\n\n```bash\ngit version 1.8.3.1\n```\n\n\n\n> 但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。\n\n\n\n- 将陈旧版本的git删除\n\n```bash\nyum remove git\n```\n\n\n\n- 选择一个目录来存放下载下来的 git 安装包。这里选择了`/usr/local/src` 目录\n\n  ```bash\n  cd /usr/local/src  \n  ```\n\n  \n\n- 下载最新版git到`/usr/local/src`，可以在官网找到版本，目前最新版本是2.26.0。\n\n```bash\nwget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz\n```\n\n\n\n- 解压到当前目录\n\n```bash\ntar -zvxf git-2.26.0.tar.gz\n```\n\n\n\n\n\n- 进入 `git-2.26.0.tar.gz` 目录下\n\n```bash\ncd git-2.26.0\n```\n\n\n\n- 执行编译\n\n```bash\nmake prefix=/usr/local/git all\n```\n\n\n\n- 安装 git 到 /usr/local/git 目录下\n\n```bash\nmake prefix=/usr/local/git install\n```\n\n\n\n### 三、配置 git 环境变量\n\n- 打开环境变量配置文件\n\n```bash\nvim /etc/profile\n```\n\n**按i进入编辑模式，按向下键到底部，添加下面两行命令：**\n\n```bash\nPATH=$PATH:/usr/local/git/bin   # git 的目录\nexport PATH\n```\n\n**按`esc`退出，按`:wq`保存编辑。(注意是先`:`再是`wq`)**\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004810.png)\n\n\n\n\n\n\n\n- 使 git 环境变量生效\n\n```bash\n source /etc/profile\n```\n\n\n\n- 验证安装完成，查看 git 的版本号\n\n```bash\ngit --version\n```\n\n这时候我们的git版本已经变成了：\n\n```bash\ngit version 2.26.0\n```\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004827.png)\n\n\n\n\n\n\n\n###  四、创建 git 用户\n\n- 创建git用户\n\n```bash\nadduser git\n```\n\n\n\n- 获取权限\n\n```bash\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n\n\n按 `i` 键进入文件的编辑模式，按向下键找到如下字段\n\n```bash\nroot    ALL=(ALL)       ALL\n```\n\n在其后面增加一句：\n\n```bash\ngit     ALL=(ALL)       ALL\n```\n\n**按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`:`，然后输入`wq`回车）**\n\n\n\n\n\n- 退回权限\n\n```bash\nchmod 400 /etc/sudoers\n```\n\n\n\n### 五、配置密钥\n\n- 创建密钥\n\n来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在`c/用户/.ssh`下。\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004830.png)\n\n\n\n\n\n如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤\n\n[Github + Hexo 搭建个人博客超详细教程](https://www.muyiio.com/2020/02/18/1/)\n\n\n\n- 将密钥保存在服务器(之前有密钥的直接复制就可以)\n\n将`id_rsa.pub`里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹\n\n```bash\nsu git\nmkdir ~/.ssh\n```\n\n\n\n创建`.ssh/authorized_keys`文件，打开`authorized_keys`文件并将刚才在本地机器复制的内容拷贝其中并保存\n\n```bash\nvim ~/.ssh/authorized_keys\n```\n\n**按`i`进入编辑模式粘贴完按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`:`，然后输入`wq`回车）**\n\n\n\n- 修改权限\n\n\n\n```bash\nchmod 755 ~\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys\n```\n\n\n\n- 测试本地连接服务器\n\n  在本地电脑git bash here\n\n```bash\n//yourIp为远程服务器的ip地址\nssh -v git@yourIp     //yourIp为你的服务器ip\n```\n\n\n\n如图则证明本地机器与远程机器已经接通\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004834.png)\n\n\n\n\n\n### 六、创建git仓库\n\n- 切换到root用户，创建一个目录用于存储网站的根目录\n\n```bash\nsu root\n```\n\n\n\n- 创建网站的根目录\n\n```bash\nmkdir /home/hexo\n```\n\n\n\n- 给予权限\n\n```bash\nchown git:git -R /home/hexo\n```\n\n\n\n### 七、自动化部署\n\n- 获取root权限\n\n```bash\nsu root\n```\n\n\n\n- 建立git仓库\n\n```bash\ncd /home/git\ngit init --bare blog.git\n```\n\n\n\n- 修改blog.git权限\n\n```bash\nchown git:git -R blog.git\n```\n\n\n\n\n\n- 在 `/home/hexo/blog.git` 下，有一个自动生成的 `hooks` 文件夹，我们创建一个新的 `git` 钩子 `post-receive`，用于自动部署。\n\n```bash\nvim blog.git/hooks/post-receive\n```\n\n\n\n- **按 `i` 键进入文件的编辑模式**，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录\n\n```bash\n #!/bin/bash \n git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f \n```\n\n**按 `Esc` 键退出编辑模式，输入`:wq` 保存退出。（先输入`：`，然后输入`wq`回车）**\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/部署服务器/QQ图片20200402004843.png)\n\n\n\n\n\n\n\n- 修改文件权限，使得其可执行。\n\n```bash\nchmod +x /home/git/blog.git/hooks/post-receive\n```\n\n\n\n\n\n\n\n# 2】安装宝塔 #\n\n> 宝塔Linux面板是提升运维效率的服务器管理软件，支持一键LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA等100多项服务器管理功能。支持的操作系统有CentOS，Ubuntu、Debian、Fedora.\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190445.png)\n\n\n\n\n\n- 首先切换到根目录\n\n```bash\ncd ~\n```\n\n\n\n\n- **安装6.9稳定版（宝塔linux6.x版本基于centos7开发，适用于centos7.x版本）**\n\n```bash\nyum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && bash install.sh\n```\n\n**中间会让你输入`y/n`继续安装，输入`y`**\n\n\n\n\n\n- **7.x版本以下安装宝塔5.9**\n\n```bash\nyum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh\n```\n\n\n\n# 3】登录宝塔面板 #\n\n\n- **宝塔安装完成后会出现以下字样**\n\n\n\n```nginx\n================================================================\n\nBT-Panel default info!\n==================================================================\n\nBt-Panel-URL: http://119.34.25.52:8888/af293c8c\nusername: aaaaaaaaa\npassword: 123456789\nWarning:\nIf you cannot access the panel, \n\nrelease the following port (8888|888|80|443|20|21) in the security group\n==================================================================\n```\n\n**注明：**\n\n```nginx\nBt-Panel-URL: http://119.34.25.52:8888/af293c8c       #登录宝塔面板的地址\nusername: aaaaaaaaa                                   #账号\npassword: 123456789                                   #密码\n```\n\n\n然后我们来到浏览器输入URL进入宝塔面板，再输入账号密码登录。\n\n- **不知道账号密码以及登录地址在服务器输入下面命令即可**\n\n```nginx\n/etc/init.d/bt default\n```\n\n\n\n- **安装LNMP（推荐）**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190456.png)\n\n\n\n等待安装完成。\n\n\n\n# 4】添加网站 #\n\n- **点击【网站】→【添加站点】**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410191537.png)\n\n\n\n\n\n\n\n- **添加密钥和证书并强制Https**\n\n> **如果没有申请证书就去域名注册商处免费申请一个，这里我以腾讯云为例**\n\n1.首先下载证书：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190500.png)\n\n\n\n2.在本地解压打开，我们可以看到证书目录文件：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190503.png)\n\n\n\n3.宝塔面板只需要用到`Nginx`或`Apache`的，其他无需理会。\n\n**①使用Nginx:**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190507.png)\n\n其中`.key`后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）\n\n`.crt`后缀的是证书（也可能是pem后缀），填入面板证书的右边框中（用文本编辑器完整复制粘贴进去）\n\n\n\n\n\n**②使用Apache:**\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190518.png)\n\n\n其中`.key`后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）\n\n1、2两张证书则需要合并填入面板证书的右边蓝框中（用文本编辑器完整复制粘贴进去）\n\n**若不合并只填蓝框域名证书手机访问就会报缺失证书链/不安全等同时**\n\n**若顺序不正确会导致apache无法正常启动**\n\n\n\n\n\n4.证书添加成功后在右上角强制Https\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200410190521.png)\n\n\n\n\n\n\n\n# 5】配置本地Hexo\n\n- 博客根目录_config下增加\n\n```\ndeploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支\n```\n\n\n\n- 部署\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n\n\n- 输入`hexo d`的时候，会要求你输入自己的服务器密码\n\n```\nBranch 'master' set up to track remote branch 'master' from 'https://e.coding.net/godxiaolon/godxiaolon.git'.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82's password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -> master\nBranch 'master' set up to track remote branch 'master' from 'root@118.25.27.52:/home/git/hexoBlog.git'.\nINFO  Deploy done: git\n```\n\n>  输入密码不会有显示，输完回车就可以\n\n\n\n- **如果出现`bash: git-receive-pack: command not found`,则运行：**\n\n```\nsudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack\n```\n\n\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/部署服务器/03.png)\n\n\n\n\n\n\n\n- 访问服务器ip，看看有没有成功\n\n\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/宝塔面板/QQ图片20200413093509.png)\n\n\n\n**可以看到，使用宝塔面板部署了证书，浏览器标识为安全。**\n\n\n\n# 6】总结 #\n\n宝塔的实用性挺广的，喜欢的小伙伴们可以去探索~\n\n**教程有不对的地方欢迎指正~**","slug":"使用宝塔面板一键部署hexo博客","published":true,"updated":"2021-05-18T08:42:06.167Z","_id":"clq6dy4ac002rikw0f9k9onoy","comments":true,"layout":"post","photos":[],"link":"","html":"<p>前两天突然发现网站挂了，因为Coding和GitHub同时故障。于是我的博客也进不去！虽然博客也部署在服务器，但是没有开启HTTPS,也没有部署证书。所以就想用宝塔面板来部署博客。</p>\n<p><strong>使用宝塔面板的好处：</strong></p>\n<ul>\n<li><p><strong>操作更方便，习惯了Windows或者对Linux不熟悉的朋友可以更方便</strong></p>\n</li>\n<li><p><strong>添加证书更加方便，而且可以开启HTTPS</strong></p>\n</li>\n</ul>\n<p><strong>我的服务器：</strong></p>\n<ul>\n<li><p>系统 <code>CentOS 7.5 64bit</code></p>\n</li>\n<li><p>配置 <code>标准型S2/1核/2GB/1Mbps</code></p>\n</li>\n</ul>\n<p><strong>服务器需要的环境</strong></p>\n<ul>\n<li>环境：<code>git</code>，<code>Nginx</code>，<code>宝塔Linux</code></li>\n<li>使用<code>git</code> 自动化部署发布</li>\n</ul>\n<p>打开腾讯云，进入【云服务器】→【登录】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/02.png\" alt></p>\n<blockquote>\n<p> 初始密码在右上角消息里面有</p>\n</blockquote>\n<h1 id=\"1】Git安装及配置\"><a href=\"#1】Git安装及配置\" class=\"headerlink\" title=\"1】Git安装及配置\"></a>1】Git安装及配置</h1><h3 id=\"一、安装依赖库和编译工具\"><a href=\"#一、安装依赖库和编译工具\" class=\"headerlink\" title=\"一、安装依赖库和编译工具\"></a>一、安装依赖库和编译工具</h3><ul>\n<li><p>安装依赖库：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<p>然后会出现：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">Is this ok <span class=\"token punctuation\">[</span>y/d/N<span class=\"token punctuation\">]</span>:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入<code>y</code>继续安装，后面也一样。</p>\n<ul>\n<li><p>安装编译工具：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> gcc perl-ExtUtils-MakeMaker package <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h3 id=\"二、下载-git并解压编译安装\"><a href=\"#二、下载-git并解压编译安装\" class=\"headerlink\" title=\"二、下载 git并解压编译安装\"></a>二、下载 git并解压编译安装</h3><ul>\n<li>查看服务器已有的git版本</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后会看到：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> version 1.8.3.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。</p>\n</blockquote>\n<ul>\n<li>将陈旧版本的git删除</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">yum remove <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><p>选择一个目录来存放下载下来的 git 安装包。这里选择了<code>/usr/local/src</code> 目录</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /usr/local/src  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<ul>\n<li>下载最新版git到<code>/usr/local/src</code>，可以在官网找到版本，目前最新版本是2.26.0。</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>解压到当前目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zvxf git-2.26.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>进入 <code>git-2.26.0.tar.gz</code> 目录下</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> git-2.26.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>执行编译</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> prefix<span class=\"token operator\">=</span>/usr/local/git all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>安装 git 到 /usr/local/git 目录下</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">make</span> prefix<span class=\"token operator\">=</span>/usr/local/git <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"三、配置-git-环境变量\"><a href=\"#三、配置-git-环境变量\" class=\"headerlink\" title=\"三、配置 git 环境变量\"></a>三、配置 git 环境变量</h3><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">vim /etc/profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>按i进入编辑模式，按向下键到底部，添加下面两行命令：</strong></p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">PATH<span class=\"token operator\">=</span><span class=\"token variable\">$PATH</span>:/usr/local/git/bin   <span class=\"token comment\" spellcheck=\"true\"># git 的目录</span>\n<span class=\"token function\">export</span> PATH<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>按<code>esc</code>退出，按<code>:wq</code>保存编辑。(注意是先<code>:</code>再是<code>wq</code>)</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004810.png\" alt></p>\n<ul>\n<li>使 git 环境变量生效</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token function\">source</span> /etc/profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>验证安装完成，查看 git 的版本号</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这时候我们的git版本已经变成了：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> version 2.26.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004827.png\" alt></p>\n<h3 id=\"四、创建-git-用户\"><a href=\"#四、创建-git-用户\" class=\"headerlink\" title=\"四、创建 git 用户\"></a>四、创建 git 用户</h3><ul>\n<li>创建git用户</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">adduser <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>获取权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> 740 /etc/sudoers\nvim /etc/sudoers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>按 <code>i</code> 键进入文件的编辑模式，按向下键找到如下字段</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">root    ALL<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span>       ALL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在其后面增加一句：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span>     ALL<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span>       ALL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>退回权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> 400 /etc/sudoers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"五、配置密钥\"><a href=\"#五、配置密钥\" class=\"headerlink\" title=\"五、配置密钥\"></a>五、配置密钥</h3><ul>\n<li>创建密钥</li>\n</ul>\n<p>来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在<code>c/用户/.ssh</code>下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004830.png\" alt></p>\n<p>如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤</p>\n<p><a href=\"https://www.muyiio.com/2020/02/18/1/\" target=\"_blank\" rel=\"noopener\">Github + Hexo 搭建个人博客超详细教程</a></p>\n<ul>\n<li>将密钥保存在服务器(之前有密钥的直接复制就可以)</li>\n</ul>\n<p>将<code>id_rsa.pub</code>里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">su</span> <span class=\"token function\">git</span>\n<span class=\"token function\">mkdir</span> ~/.ssh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>创建<code>.ssh/authorized_keys</code>文件，打开<code>authorized_keys</code>文件并将刚才在本地机器复制的内容拷贝其中并保存</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">vim ~/.ssh/authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>修改权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> 755 ~\n<span class=\"token function\">chmod</span> 700 ~/.ssh\n<span class=\"token function\">chmod</span> 600 ~/.ssh/authorized_keys<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><p>测试本地连接服务器</p>\n<p>在本地电脑git bash here</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">//yourIp为远程服务器的ip地址\n<span class=\"token function\">ssh</span> -v git@yourIp     //yourIp为你的服务器ip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如图则证明本地机器与远程机器已经接通</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004834.png\" alt></p>\n<h3 id=\"六、创建git仓库\"><a href=\"#六、创建git仓库\" class=\"headerlink\" title=\"六、创建git仓库\"></a>六、创建git仓库</h3><ul>\n<li>切换到root用户，创建一个目录用于存储网站的根目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">su</span> root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>创建网站的根目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /home/hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>给予权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> git:git -R /home/hexo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"七、自动化部署\"><a href=\"#七、自动化部署\" class=\"headerlink\" title=\"七、自动化部署\"></a>七、自动化部署</h3><ul>\n<li>获取root权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">su</span> root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>建立git仓库</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /home/git\n<span class=\"token function\">git</span> init --bare blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>修改blog.git权限</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chown</span> git:git -R blog.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>在 <code>/home/hexo/blog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹，我们创建一个新的 <code>git</code> 钩子 <code>post-receive</code>，用于自动部署。</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">vim blog.git/hooks/post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><strong>按 <code>i</code> 键进入文件的编辑模式</strong>，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"> <span class=\"token comment\" spellcheck=\"true\">#!/bin/bash </span>\n <span class=\"token function\">git</span> --work-tree<span class=\"token operator\">=</span>/home/hexo --git-dir<span class=\"token operator\">=</span>/home/git/blog.git checkout -f <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>：</code>，然后输入<code>wq</code>回车）</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004843.png\" alt></p>\n<ul>\n<li>修改文件权限，使得其可执行。</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x /home/git/blog.git/hooks/post-receive<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"2】安装宝塔\"><a href=\"#2】安装宝塔\" class=\"headerlink\" title=\"2】安装宝塔\"></a>2】安装宝塔</h1><blockquote>\n<p>宝塔Linux面板是提升运维效率的服务器管理软件，支持一键LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA等100多项服务器管理功能。支持的操作系统有CentOS，Ubuntu、Debian、Fedora.</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190445.png\" alt></p>\n<ul>\n<li>首先切换到根目录</li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> ~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><strong>安装6.9稳定版（宝塔linux6.x版本基于centos7开发，适用于centos7.x版本）</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">wget</span> -O install.sh http://download.bt.cn/install/install_6.0.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> install.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>中间会让你输入<code>y/n</code>继续安装，输入<code>y</code></strong></p>\n<ul>\n<li><strong>7.x版本以下安装宝塔5.9</strong></li>\n</ul>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">wget</span> -O install.sh http://download.bt.cn/install/install.sh <span class=\"token operator\">&amp;&amp;</span> sh install.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"3】登录宝塔面板\"><a href=\"#3】登录宝塔面板\" class=\"headerlink\" title=\"3】登录宝塔面板\"></a>3】登录宝塔面板</h1><ul>\n<li><strong>宝塔安装完成后会出现以下字样</strong></li>\n</ul>\n<pre class=\"line-numbers language-nginx\"><code class=\"language-nginx\"><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">=</span>\n\nBT<span class=\"token operator\">-</span>Panel default info<span class=\"token operator\">!</span>\n<span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span>\n\nBt<span class=\"token operator\">-</span>Panel<span class=\"token operator\">-</span>URL<span class=\"token punctuation\">:</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">119.34</span><span class=\"token punctuation\">.</span><span class=\"token number\">25.52</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token operator\">/</span>af293c8c\nusername<span class=\"token punctuation\">:</span> aaaaaaaaa\npassword<span class=\"token punctuation\">:</span> <span class=\"token number\">123456789</span>\nWarning<span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">If</span> you cannot access the panel<span class=\"token punctuation\">,</span> \n\nrelease the following <span class=\"token function\">port</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token operator\">|</span><span class=\"token number\">888</span><span class=\"token operator\">|</span><span class=\"token number\">80</span><span class=\"token operator\">|</span><span class=\"token number\">443</span><span class=\"token operator\">|</span><span class=\"token number\">20</span><span class=\"token operator\">|</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span> in the security group\n<span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注明：</strong></p>\n<pre class=\"line-numbers language-nginx\"><code class=\"language-nginx\">Bt<span class=\"token operator\">-</span>Panel<span class=\"token operator\">-</span>URL<span class=\"token punctuation\">:</span> <span class=\"token keyword\">http</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">119.34</span><span class=\"token punctuation\">.</span><span class=\"token number\">25.52</span><span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token operator\">/</span>af293c8c       <span class=\"token comment\" spellcheck=\"true\">#登录宝塔面板的地址</span>\nusername<span class=\"token punctuation\">:</span> aaaaaaaaa                                   <span class=\"token comment\" spellcheck=\"true\">#账号</span>\npassword<span class=\"token punctuation\">:</span> <span class=\"token number\">123456789</span>                                   <span class=\"token comment\" spellcheck=\"true\">#密码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>然后我们来到浏览器输入URL进入宝塔面板，再输入账号密码登录。</p>\n<ul>\n<li><strong>不知道账号密码以及登录地址在服务器输入下面命令即可</strong></li>\n</ul>\n<pre class=\"line-numbers language-nginx\"><code class=\"language-nginx\"><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>init<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>bt default<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><strong>安装LNMP（推荐）</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190456.png\" alt></p>\n<p>等待安装完成。</p>\n<h1 id=\"4】添加网站\"><a href=\"#4】添加网站\" class=\"headerlink\" title=\"4】添加网站\"></a>4】添加网站</h1><ul>\n<li><strong>点击【网站】→【添加站点】</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410191537.png\" alt></p>\n<ul>\n<li><strong>添加密钥和证书并强制Https</strong></li>\n</ul>\n<blockquote>\n<p><strong>如果没有申请证书就去域名注册商处免费申请一个，这里我以腾讯云为例</strong></p>\n</blockquote>\n<p>1.首先下载证书：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190500.png\" alt></p>\n<p>2.在本地解压打开，我们可以看到证书目录文件：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190503.png\" alt></p>\n<p>3.宝塔面板只需要用到<code>Nginx</code>或<code>Apache</code>的，其他无需理会。</p>\n<p><strong>①使用Nginx:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190507.png\" alt></p>\n<p>其中<code>.key</code>后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）</p>\n<p><code>.crt</code>后缀的是证书（也可能是pem后缀），填入面板证书的右边框中（用文本编辑器完整复制粘贴进去）</p>\n<p><strong>②使用Apache:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190518.png\" alt></p>\n<p>其中<code>.key</code>后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）</p>\n<p>1、2两张证书则需要合并填入面板证书的右边蓝框中（用文本编辑器完整复制粘贴进去）</p>\n<p><strong>若不合并只填蓝框域名证书手机访问就会报缺失证书链/不安全等同时</strong></p>\n<p><strong>若顺序不正确会导致apache无法正常启动</strong></p>\n<p>4.证书添加成功后在右上角强制Https</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190521.png\" alt></p>\n<h1 id=\"5】配置本地Hexo\"><a href=\"#5】配置本地Hexo\" class=\"headerlink\" title=\"5】配置本地Hexo\"></a>5】配置本地Hexo</h1><ul>\n<li>博客根目录_config下增加</li>\n</ul>\n<pre><code>deploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支</code></pre><ul>\n<li>部署</li>\n</ul>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><ul>\n<li>输入<code>hexo d</code>的时候，会要求你输入自己的服务器密码</li>\n</ul>\n<pre><code>Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;https://e.coding.net/godxiaolon/godxiaolon.git&#39;.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82&#39;s password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -&gt; master\nBranch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;root@118.25.27.52:/home/git/hexoBlog.git&#39;.\nINFO  Deploy done: git</code></pre><blockquote>\n<p> 输入密码不会有显示，输完回车就可以</p>\n</blockquote>\n<ul>\n<li><strong>如果出现<code>bash: git-receive-pack: command not found</code>,则运行：</strong></li>\n</ul>\n<pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/03.png\" alt></p>\n<ul>\n<li>访问服务器ip，看看有没有成功</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200413093509.png\" alt></p>\n<p><strong>可以看到，使用宝塔面板部署了证书，浏览器标识为安全。</strong></p>\n<h1 id=\"6】总结\"><a href=\"#6】总结\" class=\"headerlink\" title=\"6】总结\"></a>6】总结</h1><p>宝塔的实用性挺广的，喜欢的小伙伴们可以去探索~</p>\n<p><strong>教程有不对的地方欢迎指正~</strong></p>\n","excerpt":"","more":"<p>前两天突然发现网站挂了，因为Coding和GitHub同时故障。于是我的博客也进不去！虽然博客也部署在服务器，但是没有开启HTTPS,也没有部署证书。所以就想用宝塔面板来部署博客。</p>\n<p><strong>使用宝塔面板的好处：</strong></p>\n<ul>\n<li><p><strong>操作更方便，习惯了Windows或者对Linux不熟悉的朋友可以更方便</strong></p>\n</li>\n<li><p><strong>添加证书更加方便，而且可以开启HTTPS</strong></p>\n</li>\n</ul>\n<p><strong>我的服务器：</strong></p>\n<ul>\n<li><p>系统 <code>CentOS 7.5 64bit</code></p>\n</li>\n<li><p>配置 <code>标准型S2/1核/2GB/1Mbps</code></p>\n</li>\n</ul>\n<p><strong>服务器需要的环境</strong></p>\n<ul>\n<li>环境：<code>git</code>，<code>Nginx</code>，<code>宝塔Linux</code></li>\n<li>使用<code>git</code> 自动化部署发布</li>\n</ul>\n<p>打开腾讯云，进入【云服务器】→【登录】</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/02.png\" alt></p>\n<blockquote>\n<p> 初始密码在右上角消息里面有</p>\n</blockquote>\n<h1 id=\"1】Git安装及配置\"><a href=\"#1】Git安装及配置\" class=\"headerlink\" title=\"1】Git安装及配置\"></a>1】Git安装及配置</h1><h3 id=\"一、安装依赖库和编译工具\"><a href=\"#一、安装依赖库和编译工具\" class=\"headerlink\" title=\"一、安装依赖库和编译工具\"></a>一、安装依赖库和编译工具</h3><ul>\n<li><p>安装依赖库：</p>\n<pre><code class=\"bash\">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel </code></pre>\n</li>\n</ul>\n<p>然后会出现：</p>\n<pre><code class=\"bash\">Is this ok [y/d/N]:</code></pre>\n<p>输入<code>y</code>继续安装，后面也一样。</p>\n<ul>\n<li><p>安装编译工具：</p>\n<pre><code class=\"bash\">yum install gcc perl-ExtUtils-MakeMaker package </code></pre>\n</li>\n</ul>\n<h3 id=\"二、下载-git并解压编译安装\"><a href=\"#二、下载-git并解压编译安装\" class=\"headerlink\" title=\"二、下载 git并解压编译安装\"></a>二、下载 git并解压编译安装</h3><ul>\n<li>查看服务器已有的git版本</li>\n</ul>\n<pre><code class=\"bash\">git --version</code></pre>\n<p>然后会看到：</p>\n<pre><code class=\"bash\">git version 1.8.3.1</code></pre>\n<blockquote>\n<p>但是官网版本已经更新了，因为yum仓库的Git版本更新的时间会存在延时，我们这里采用源码包安装方式安装。</p>\n</blockquote>\n<ul>\n<li>将陈旧版本的git删除</li>\n</ul>\n<pre><code class=\"bash\">yum remove git</code></pre>\n<ul>\n<li><p>选择一个目录来存放下载下来的 git 安装包。这里选择了<code>/usr/local/src</code> 目录</p>\n<pre><code class=\"bash\">cd /usr/local/src  </code></pre>\n</li>\n</ul>\n<ul>\n<li>下载最新版git到<code>/usr/local/src</code>，可以在官网找到版本，目前最新版本是2.26.0。</li>\n</ul>\n<pre><code class=\"bash\">wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz</code></pre>\n<ul>\n<li>解压到当前目录</li>\n</ul>\n<pre><code class=\"bash\">tar -zvxf git-2.26.0.tar.gz</code></pre>\n<ul>\n<li>进入 <code>git-2.26.0.tar.gz</code> 目录下</li>\n</ul>\n<pre><code class=\"bash\">cd git-2.26.0</code></pre>\n<ul>\n<li>执行编译</li>\n</ul>\n<pre><code class=\"bash\">make prefix=/usr/local/git all</code></pre>\n<ul>\n<li>安装 git 到 /usr/local/git 目录下</li>\n</ul>\n<pre><code class=\"bash\">make prefix=/usr/local/git install</code></pre>\n<h3 id=\"三、配置-git-环境变量\"><a href=\"#三、配置-git-环境变量\" class=\"headerlink\" title=\"三、配置 git 环境变量\"></a>三、配置 git 环境变量</h3><ul>\n<li>打开环境变量配置文件</li>\n</ul>\n<pre><code class=\"bash\">vim /etc/profile</code></pre>\n<p><strong>按i进入编辑模式，按向下键到底部，添加下面两行命令：</strong></p>\n<pre><code class=\"bash\">PATH=$PATH:/usr/local/git/bin   # git 的目录\nexport PATH</code></pre>\n<p><strong>按<code>esc</code>退出，按<code>:wq</code>保存编辑。(注意是先<code>:</code>再是<code>wq</code>)</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004810.png\" alt></p>\n<ul>\n<li>使 git 环境变量生效</li>\n</ul>\n<pre><code class=\"bash\"> source /etc/profile</code></pre>\n<ul>\n<li>验证安装完成，查看 git 的版本号</li>\n</ul>\n<pre><code class=\"bash\">git --version</code></pre>\n<p>这时候我们的git版本已经变成了：</p>\n<pre><code class=\"bash\">git version 2.26.0</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004827.png\" alt></p>\n<h3 id=\"四、创建-git-用户\"><a href=\"#四、创建-git-用户\" class=\"headerlink\" title=\"四、创建 git 用户\"></a>四、创建 git 用户</h3><ul>\n<li>创建git用户</li>\n</ul>\n<pre><code class=\"bash\">adduser git</code></pre>\n<ul>\n<li>获取权限</li>\n</ul>\n<pre><code class=\"bash\">chmod 740 /etc/sudoers\nvim /etc/sudoers</code></pre>\n<p>按 <code>i</code> 键进入文件的编辑模式，按向下键找到如下字段</p>\n<pre><code class=\"bash\">root    ALL=(ALL)       ALL</code></pre>\n<p>在其后面增加一句：</p>\n<pre><code class=\"bash\">git     ALL=(ALL)       ALL</code></pre>\n<p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>退回权限</li>\n</ul>\n<pre><code class=\"bash\">chmod 400 /etc/sudoers</code></pre>\n<h3 id=\"五、配置密钥\"><a href=\"#五、配置密钥\" class=\"headerlink\" title=\"五、配置密钥\"></a>五、配置密钥</h3><ul>\n<li>创建密钥</li>\n</ul>\n<p>来到这里的小伙伴应该都已经有了自己的hexo博客，那么肯定已经创建过自己的密钥，一般存放在<code>c/用户/.ssh</code>下。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004830.png\" alt></p>\n<p>如果没有自己的密钥，可以移步我之前的教程，里面有密钥创建步骤</p>\n<p><a href=\"https://www.muyiio.com/2020/02/18/1/\" target=\"_blank\" rel=\"noopener\">Github + Hexo 搭建个人博客超详细教程</a></p>\n<ul>\n<li>将密钥保存在服务器(之前有密钥的直接复制就可以)</li>\n</ul>\n<p>将<code>id_rsa.pub</code>里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p>\n<pre><code class=\"bash\">su git\nmkdir ~/.ssh</code></pre>\n<p>创建<code>.ssh/authorized_keys</code>文件，打开<code>authorized_keys</code>文件并将刚才在本地机器复制的内容拷贝其中并保存</p>\n<pre><code class=\"bash\">vim ~/.ssh/authorized_keys</code></pre>\n<p><strong>按<code>i</code>进入编辑模式粘贴完按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>:</code>，然后输入<code>wq</code>回车）</strong></p>\n<ul>\n<li>修改权限</li>\n</ul>\n<pre><code class=\"bash\">chmod 755 ~\nchmod 700 ~/.ssh\nchmod 600 ~/.ssh/authorized_keys</code></pre>\n<ul>\n<li><p>测试本地连接服务器</p>\n<p>在本地电脑git bash here</p>\n</li>\n</ul>\n<pre><code class=\"bash\">//yourIp为远程服务器的ip地址\nssh -v git@yourIp     //yourIp为你的服务器ip</code></pre>\n<p>如图则证明本地机器与远程机器已经接通</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004834.png\" alt></p>\n<h3 id=\"六、创建git仓库\"><a href=\"#六、创建git仓库\" class=\"headerlink\" title=\"六、创建git仓库\"></a>六、创建git仓库</h3><ul>\n<li>切换到root用户，创建一个目录用于存储网站的根目录</li>\n</ul>\n<pre><code class=\"bash\">su root</code></pre>\n<ul>\n<li>创建网站的根目录</li>\n</ul>\n<pre><code class=\"bash\">mkdir /home/hexo</code></pre>\n<ul>\n<li>给予权限</li>\n</ul>\n<pre><code class=\"bash\">chown git:git -R /home/hexo</code></pre>\n<h3 id=\"七、自动化部署\"><a href=\"#七、自动化部署\" class=\"headerlink\" title=\"七、自动化部署\"></a>七、自动化部署</h3><ul>\n<li>获取root权限</li>\n</ul>\n<pre><code class=\"bash\">su root</code></pre>\n<ul>\n<li>建立git仓库</li>\n</ul>\n<pre><code class=\"bash\">cd /home/git\ngit init --bare blog.git</code></pre>\n<ul>\n<li>修改blog.git权限</li>\n</ul>\n<pre><code class=\"bash\">chown git:git -R blog.git</code></pre>\n<ul>\n<li>在 <code>/home/hexo/blog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹，我们创建一个新的 <code>git</code> 钩子 <code>post-receive</code>，用于自动部署。</li>\n</ul>\n<pre><code class=\"bash\">vim blog.git/hooks/post-receive</code></pre>\n<ul>\n<li><strong>按 <code>i</code> 键进入文件的编辑模式</strong>，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</li>\n</ul>\n<pre><code class=\"bash\"> #!/bin/bash \n git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre>\n<p><strong>按 <code>Esc</code> 键退出编辑模式，输入<code>:wq</code> 保存退出。（先输入<code>：</code>，然后输入<code>wq</code>回车）</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/QQ%E5%9B%BE%E7%89%8720200402004843.png\" alt></p>\n<ul>\n<li>修改文件权限，使得其可执行。</li>\n</ul>\n<pre><code class=\"bash\">chmod +x /home/git/blog.git/hooks/post-receive</code></pre>\n<h1 id=\"2】安装宝塔\"><a href=\"#2】安装宝塔\" class=\"headerlink\" title=\"2】安装宝塔\"></a>2】安装宝塔</h1><blockquote>\n<p>宝塔Linux面板是提升运维效率的服务器管理软件，支持一键LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA等100多项服务器管理功能。支持的操作系统有CentOS，Ubuntu、Debian、Fedora.</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190445.png\" alt></p>\n<ul>\n<li>首先切换到根目录</li>\n</ul>\n<pre><code class=\"bash\">cd ~</code></pre>\n<ul>\n<li><strong>安装6.9稳定版（宝塔linux6.x版本基于centos7开发，适用于centos7.x版本）</strong></li>\n</ul>\n<pre><code class=\"bash\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</code></pre>\n<p><strong>中间会让你输入<code>y/n</code>继续安装，输入<code>y</code></strong></p>\n<ul>\n<li><strong>7.x版本以下安装宝塔5.9</strong></li>\n</ul>\n<pre><code class=\"bash\">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</code></pre>\n<h1 id=\"3】登录宝塔面板\"><a href=\"#3】登录宝塔面板\" class=\"headerlink\" title=\"3】登录宝塔面板\"></a>3】登录宝塔面板</h1><ul>\n<li><strong>宝塔安装完成后会出现以下字样</strong></li>\n</ul>\n<pre><code class=\"nginx\">================================================================\n\nBT-Panel default info!\n==================================================================\n\nBt-Panel-URL: http://119.34.25.52:8888/af293c8c\nusername: aaaaaaaaa\npassword: 123456789\nWarning:\nIf you cannot access the panel, \n\nrelease the following port (8888|888|80|443|20|21) in the security group\n==================================================================</code></pre>\n<p><strong>注明：</strong></p>\n<pre><code class=\"nginx\">Bt-Panel-URL: http://119.34.25.52:8888/af293c8c       #登录宝塔面板的地址\nusername: aaaaaaaaa                                   #账号\npassword: 123456789                                   #密码</code></pre>\n<p>然后我们来到浏览器输入URL进入宝塔面板，再输入账号密码登录。</p>\n<ul>\n<li><strong>不知道账号密码以及登录地址在服务器输入下面命令即可</strong></li>\n</ul>\n<pre><code class=\"nginx\">/etc/init.d/bt default</code></pre>\n<ul>\n<li><strong>安装LNMP（推荐）</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190456.png\" alt></p>\n<p>等待安装完成。</p>\n<h1 id=\"4】添加网站\"><a href=\"#4】添加网站\" class=\"headerlink\" title=\"4】添加网站\"></a>4】添加网站</h1><ul>\n<li><strong>点击【网站】→【添加站点】</strong></li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410191537.png\" alt></p>\n<ul>\n<li><strong>添加密钥和证书并强制Https</strong></li>\n</ul>\n<blockquote>\n<p><strong>如果没有申请证书就去域名注册商处免费申请一个，这里我以腾讯云为例</strong></p>\n</blockquote>\n<p>1.首先下载证书：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190500.png\" alt></p>\n<p>2.在本地解压打开，我们可以看到证书目录文件：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190503.png\" alt></p>\n<p>3.宝塔面板只需要用到<code>Nginx</code>或<code>Apache</code>的，其他无需理会。</p>\n<p><strong>①使用Nginx:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190507.png\" alt></p>\n<p>其中<code>.key</code>后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）</p>\n<p><code>.crt</code>后缀的是证书（也可能是pem后缀），填入面板证书的右边框中（用文本编辑器完整复制粘贴进去）</p>\n<p><strong>②使用Apache:</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190518.png\" alt></p>\n<p>其中<code>.key</code>后缀的是服务器私钥，填入面板证书的左边框中（用文本编辑器完整复制粘贴进去）</p>\n<p>1、2两张证书则需要合并填入面板证书的右边蓝框中（用文本编辑器完整复制粘贴进去）</p>\n<p><strong>若不合并只填蓝框域名证书手机访问就会报缺失证书链/不安全等同时</strong></p>\n<p><strong>若顺序不正确会导致apache无法正常启动</strong></p>\n<p>4.证书添加成功后在右上角强制Https</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200410190521.png\" alt></p>\n<h1 id=\"5】配置本地Hexo\"><a href=\"#5】配置本地Hexo\" class=\"headerlink\" title=\"5】配置本地Hexo\"></a>5】配置本地Hexo</h1><ul>\n<li>博客根目录_config下增加</li>\n</ul>\n<pre><code>deploy:\n    type: git\n    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址\n    branch: master    #分支</code></pre><ul>\n<li>部署</li>\n</ul>\n<pre><code>hexo clean\nhexo g\nhexo d</code></pre><ul>\n<li>输入<code>hexo d</code>的时候，会要求你输入自己的服务器密码</li>\n</ul>\n<pre><code>Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;https://e.coding.net/godxiaolon/godxiaolon.git&#39;.\nOn branch master\nnothing to commit, working tree clean\nroot@119.25.56.82&#39;s password:\nEnumerating objects: 182, done.\nCounting objects: 100% (182/182), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (61/61), done.\nWriting objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.\nTotal 95 (delta 45), reused 0 (delta 0)\nremote: hooks/post-receive: line 1: t: command not found\nTo 118.25.27.52:/home/git/hexoBlog.git\n   8df3691..7d63b39  HEAD -&gt; master\nBranch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;root@118.25.27.52:/home/git/hexoBlog.git&#39;.\nINFO  Deploy done: git</code></pre><blockquote>\n<p> 输入密码不会有显示，输完回车就可以</p>\n</blockquote>\n<ul>\n<li><strong>如果出现<code>bash: git-receive-pack: command not found</code>,则运行：</strong></li>\n</ul>\n<pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.8/Images/posts/%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/03.png\" alt></p>\n<ul>\n<li>访问服务器ip，看看有没有成功</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/QQ%E5%9B%BE%E7%89%8720200413093509.png\" alt></p>\n<p><strong>可以看到，使用宝塔面板部署了证书，浏览器标识为安全。</strong></p>\n<h1 id=\"6】总结\"><a href=\"#6】总结\" class=\"headerlink\" title=\"6】总结\"></a>6】总结</h1><p>宝塔的实用性挺广的，喜欢的小伙伴们可以去探索~</p>\n<p><strong>教程有不对的地方欢迎指正~</strong></p>\n","path":"shi-yong-bao-ta-mian-ban-yi-jian-bu-shu-hexo-bo-ke.html","permalink":"https://www.yshawlon.cn/shi-yong-bao-ta-mian-ban-yi-jian-bu-shu-hexo-bo-ke.html","tags":[{"name":"Hexo","_id":"clq6dy489000dikw04lptx64o","slug":"Hexo","path":"tags/Hexo/","permalink":"https://www.yshawlon.cn/tags/Hexo/","length":12}],"categories":[{"name":"服务器","_id":"clq6dy49u001wikw01qvhle9u","slug":"服务器","path":"categories/服务器/","permalink":"https://www.yshawlon.cn/categories/服务器/","length":2}],"prev":{"title":"C语言编程题目整合","date":"2020-04-13T06:50:08.000Z","summary":"做过的题目渐渐变得生疏，索性记录在博客上，看着更直观些，好记性不如烂笔头！","slug":"C语言编程题目整合","published":true,"updated":"2020-04-26T14:44:31.157Z","_id":"clq6dy48i000kikw088mtkeaj","layout":"post","photos":[],"link":"","excerpt":"","path":"c-yu-yan-bian-cheng-ti-mu-zheng-he.html","permalink":"https://www.yshawlon.cn/c-yu-yan-bian-cheng-ti-mu-zheng-he.html","__post":true},"next":{"title":"Hexo博客提交百度收录SEO","date":"2020-04-07T15:27:53.000Z","summary":"我们需要手动给搜索引擎提交收录，别人在搜索到关键词时就看到我们的文章","slug":"Hexo博客提交百度收录SEO","published":true,"updated":"2021-05-18T10:15:35.925Z","_id":"clq6dy48q000xikw0nrnb37qo","layout":"post","photos":[],"link":"","excerpt":"","path":"hexo-bo-ke-ti-jiao-bai-du-shou-lu-seo.html","permalink":"https://www.yshawlon.cn/hexo-bo-ke-ti-jiao-bai-du-shou-lu-seo.html","__post":true},"__post":true}