{"title":"Hexo 博客代码块样式美化","date":"2020-04-03T12:26:29.000Z","toc":true,"summary":"本文记录对博客代码块进行美化增加了语言识别、copy、行号等等。","source":"_posts/Hexo-博客代码块样式美化.md","raw":"---\ntitle: Hexo 博客代码块样式美化\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-04-03 20:26:29\npassword:\nsummary: 本文记录对博客代码块进行美化增加了语言识别、copy、行号等等。\ntags:\n- Hexo\n- Code\ncategories:\n- Blog\n---\n\n\n下面的代码放置位置基于matery主题，不同的主题可能存在一些差异，但也相差无几，自己琢磨琢磨;另外，如果原有关于代码块配置代码，请删掉，不然可能会发生冲突导致无法展示效果。\n\n\n\n\n## 1】预览\n\n\n\n- 直接看效果：\n\n![](https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/代码块美化/QQ图片20200403235158.png)\n\n\n\n\n\n## 2】配置\n\n\n\n- **1.首先在`themes/matery/source/libs`下创建一个`codeBlock`文件夹，后面在该文件夹下创建五个`.js`文件**\n\n\n- 创建`codeBlockFuction.js`文件夹，写入下面代码：\n\n```js\n// 代码块功能依赖\n\n$(function () {\n    $('pre').wrap('<div class=\"code-area\" style=\"position: relative\"></div>');\n});\n```\n\n\n\n- 创建`codeBLang.js`文件夹，写入下面代码：\n\n\n\n\n\n```js\n// 代码块语言识别\n\n$(function () {\n  var $highlight_lang = $('<div class=\"code_lang\" title=\"代码语言\"></div>');\n\n  $('pre').after($highlight_lang);\n  $('pre').each(function () {\n    var code_language = $(this).attr('class');\n\nif (!code_language) {\n  return true;\n};\nvar lang_name = code_language.replace(\"line-numbers\", \"\").trim().replace(\"language-\", \"\").trim();\n\n// 首字母大写\nlang_name = lang_name.slice(0, 1).toUpperCase() + lang_name.slice(1);\n$(this).siblings(\".code_lang\").text(lang_name);\n\n  });\n});\n```\n\n\n\n- 创建`codeCopy.js`文件夹，写入下面代码：\n\n\n\n```js\n$(function () {\n    var $copyIcon = $('<i class=\"fa fa-copy code_copy\" title=\"复制代码\" aria-hidden=\"true\"></i>');\n    $('.code-area').prepend($copyIcon);\nnew ClipboardJS('.fa-copy', {\n    target: function (trigger) {\n        return trigger.nextElementSibling;\n    }\n});\n\n});\n```\n\n\n\n- 创建`clipboard.min.js`文件夹，写入下面代码：\n\n```js\n/*!\n\n* clipboard.js v2.0.4\n* https://zenorocha.github.io/clipboard.js\n* \n* Licensed MIT © Zeno Rocha\n*/ \n! function (t, e) {\n\"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof exports ? exports.ClipboardJS = e() : t.ClipboardJS = e()\n}(this, function () {\nreturn function (n) {\n    var o = {};\n\nfunction r(t) {\n    if (o[t]) return o[t].exports;\n    var e = o[t] = {\n        i: t,\n        l: !1,\n        exports: {}\n    };\n    return n[t].call(e.exports, e, e.exports, r), e.l = !0, e.exports\n}\nreturn r.m = n, r.c = o, r.d = function (t, e, n) {\n    r.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n    })\n}, r.r = function (t) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n    }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n    })\n}, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n            enumerable: !0,\n            value: e\n        }), 2 & t && \"string\" != typeof e)\n        for (var o in e) r.d(n, o, function (t) {\n            return e[t]\n        }.bind(null, o));\n    return n\n}, r.n = function (t) {\n    var e = t && t.__esModule ? function () {\n        return t.default\n    } : function () {\n        return t\n    };\n    return r.d(e, \"a\", e), e\n}, r.o = function (t, e) {\n    return Object.prototype.hasOwnProperty.call(t, e)\n}, r.p = \"\", r(r.s = 0)\n\n}([function (t, e, n) {\n    \"use strict\";\n    var r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n            return typeof t\n        } : function (t) {\n            return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t\n        },\n        i = function () {\n            function o(t, e) {\n                for (var n = 0; n < e.length; n++) {\n                    var o = e[n];\n                    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)\n                }\n            }\n            return function (t, e, n) {\n                return e && o(t.prototype, e), n && o(t, n), t\n            }\n        }(),\n        a = o(n(1)),\n        c = o(n(3)),\n        u = o(n(4));\n\nfunction o(t) {\n    return t && t.__esModule ? t : {\n        default: t\n    }\n}\nvar l = function (t) {\n    function o(t, e) {\n        ! function (t, e) {\n            if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\")\n        }(this, o);\n        var n = function (t, e) {\n            if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n            return !e || \"object\" != typeof e && \"function\" != typeof e ? t : e\n        }(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this));\n        return n.resolveOptions(e), n.listenClick(t), n\n    }\n    return function (t, e) {\n        if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n        t.prototype = Object.create(e && e.prototype, {\n            constructor: {\n                value: t,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)\n    }(o, c.default), i(o, [{\n        key: \"resolveOptions\",\n        value: function () {\n            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n            this.action = \"function\" == typeof t.action ? t.action : this.defaultAction, this.target = \"function\" == typeof t.target ? t.target : this.defaultTarget, this.text = \"function\" == typeof t.text ? t.text : this.defaultText, this.container = \"object\" === r(t.container) ? t.container : document.body\n        }\n    }, {\n        key: \"listenClick\",\n        value: function (t) {\n            var e = this;\n            this.listener = (0, u.default)(t, \"click\", function (t) {\n                return e.onClick(t)\n            })\n        }\n    }, {\n        key: \"onClick\",\n        value: function (t) {\n            var e = t.delegateTarget || t.currentTarget;\n            this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new a.default({\n                action: this.action(e),\n                target: this.target(e),\n                text: this.text(e),\n                container: this.container,\n                trigger: e,\n                emitter: this\n            })\n        }\n    }, {\n        key: \"defaultAction\",\n        value: function (t) {\n            return s(\"action\", t)\n        }\n    }, {\n        key: \"defaultTarget\",\n        value: function (t) {\n            var e = s(\"target\", t);\n            if (e) return document.querySelector(e)\n        }\n    }, {\n        key: \"defaultText\",\n        value: function (t) {\n            return s(\"text\", t)\n        }\n    }, {\n        key: \"destroy\",\n        value: function () {\n            this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), this.clipboardAction = null)\n        }\n    }], [{\n        key: \"isSupported\",\n        value: function () {\n            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [\"copy\", \"cut\"],\n                e = \"string\" == typeof t ? [t] : t,\n                n = !!document.queryCommandSupported;\n            return e.forEach(function (t) {\n                n = n && !!document.queryCommandSupported(t)\n            }), n\n        }\n    }]), o\n}();\n\nfunction s(t, e) {\n    var n = \"data-clipboard-\" + t;\n    if (e.hasAttribute(n)) return e.getAttribute(n)\n}\nt.exports = l\n\n}, function (t, e, n) {\n    \"use strict\";\n    var o, r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n            return typeof t\n        } : function (t) {\n            return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t\n        },\n        i = function () {\n            function o(t, e) {\n                for (var n = 0; n < e.length; n++) {\n                    var o = e[n];\n                    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)\n                }\n            }\n            return function (t, e, n) {\n                return e && o(t.prototype, e), n && o(t, n), t\n            }\n        }(),\n        a = n(2),\n        c = (o = a) && o.__esModule ? o : {\n            default: o\n        };\n    var u = function () {\n        function e(t) {\n            ! function (t, e) {\n                if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\")\n            }(this, e), this.resolveOptions(t), this.initSelection()\n        }\n        return i(e, [{\n            key: \"resolveOptions\",\n            value: function () {\n                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};\n                this.action = t.action, this.container = t.container, this.emitter = t.emitter, this.target = t.target, this.text = t.text, this.trigger = t.trigger, this.selectedText = \"\"\n            }\n        }, {\n            key: \"initSelection\",\n            value: function () {\n                this.text ? this.selectFake() : this.target && this.selectTarget()\n            }\n        }, {\n            key: \"selectFake\",\n            value: function () {\n                var t = this,\n                    e = \"rtl\" == document.documentElement.getAttribute(\"dir\");\n                this.removeFake(), this.fakeHandlerCallback = function () {\n                    return t.removeFake()\n                }, this.fakeHandler = this.container.addEventListener(\"click\", this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement(\"textarea\"), this.fakeElem.style.fontSize = \"12pt\", this.fakeElem.style.border = \"0\", this.fakeElem.style.padding = \"0\", this.fakeElem.style.margin = \"0\", this.fakeElem.style.position = \"absolute\", this.fakeElem.style[e ? \"right\" : \"left\"] = \"-9999px\";\n                var n = window.pageYOffset || document.documentElement.scrollTop;\n                this.fakeElem.style.top = n + \"px\", this.fakeElem.setAttribute(\"readonly\", \"\"), this.fakeElem.value = this.text, this.container.appendChild(this.fakeElem), this.selectedText = (0, c.default)(this.fakeElem), this.copyText()\n            }\n        }, {\n            key: \"removeFake\",\n            value: function () {\n                this.fakeHandler && (this.container.removeEventListener(\"click\", this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (this.container.removeChild(this.fakeElem), this.fakeElem = null)\n            }\n        }, {\n            key: \"selectTarget\",\n            value: function () {\n                this.selectedText = (0, c.default)(this.target), this.copyText()\n            }\n        }, {\n            key: \"copyText\",\n            value: function () {\n                var e = void 0;\n                try {\n                    e = document.execCommand(this.action)\n                } catch (t) {\n                    e = !1\n                }\n                this.handleResult(e)\n            }\n        }, {\n            key: \"handleResult\",\n            value: function (t) {\n                this.emitter.emit(t ? \"success\" : \"error\", {\n                    action: this.action,\n                    text: this.selectedText,\n                    trigger: this.trigger,\n                    clearSelection: this.clearSelection.bind(this)\n                })\n            }\n        }, {\n            key: \"clearSelection\",\n            value: function () {\n                this.trigger && this.trigger.focus(), window.getSelection().removeAllRanges()\n            }\n        }, {\n            key: \"destroy\",\n            value: function () {\n                this.removeFake()\n            }\n        }, {\n            key: \"action\",\n            set: function () {\n                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : \"copy\";\n                if (this._action = t, \"copy\" !== this._action && \"cut\" !== this._action) throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"')\n            },\n            get: function () {\n                return this._action\n            }\n        }, {\n            key: \"target\",\n            set: function (t) {\n                if (void 0 !== t) {\n                    if (!t || \"object\" !== (void 0 === t ? \"undefined\" : r(t)) || 1 !== t.nodeType) throw new Error('Invalid \"target\" value, use a valid Element');\n                    if (\"copy\" === this.action && t.hasAttribute(\"disabled\")) throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                    if (\"cut\" === this.action && (t.hasAttribute(\"readonly\") || t.hasAttribute(\"disabled\"))) throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                    this._target = t\n                }\n            },\n            get: function () {\n                return this._target\n            }\n        }]), e\n    }();\n    t.exports = u\n}, function (t, e) {\n    t.exports = function (t) {\n        var e;\n        if (\"SELECT\" === t.nodeName) t.focus(), e = t.value;\n        else if (\"INPUT\" === t.nodeName || \"TEXTAREA\" === t.nodeName) {\n            var n = t.hasAttribute(\"readonly\");\n            n || t.setAttribute(\"readonly\", \"\"), t.select(), t.setSelectionRange(0, t.value.length), n || t.removeAttribute(\"readonly\"), e = t.value\n        } else {\n            t.hasAttribute(\"contenteditable\") && t.focus();\n            var o = window.getSelection(),\n                r = document.createRange();\n            r.selectNodeContents(t), o.removeAllRanges(), o.addRange(r), e = o.toString()\n        }\n        return e\n    }\n}, function (t, e) {\n    function n() {}\n    n.prototype = {\n        on: function (t, e, n) {\n            var o = this.e || (this.e = {});\n            return (o[t] || (o[t] = [])).push({\n                fn: e,\n                ctx: n\n            }), this\n        },\n        once: function (t, e, n) {\n            var o = this;\n\n​    function r() {\n​        o.off(t, r), e.apply(n, arguments)\n​    }\n​    return r._ = e, this.on(t, r, n)\n},\nemit: function (t) {\n​    for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o < r; o++) n[o].fn.apply(n[o].ctx, e);\n​    return this\n},\noff: function (t, e) {\n​    var n = this.e || (this.e = {}),\n​        o = n[t],\n​        r = [];\n​    if (o && e)\n​        for (var i = 0, a = o.length; i < a; i++) o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);\n​    return r.length ? n[t] = r : delete n[t], this\n}\n\n}, t.exports = n\n\n}, function (t, e, n) {\n    var d = n(5),\n        h = n(6);\n    t.exports = function (t, e, n) {\n        if (!t && !e && !n) throw new Error(\"Missing required arguments\");\n        if (!d.string(e)) throw new TypeError(\"Second argument must be a String\");\n        if (!d.fn(n)) throw new TypeError(\"Third argument must be a Function\");\n        if (d.node(t)) return s = e, f = n, (l = t).addEventListener(s, f), {\n            destroy: function () {\n                l.removeEventListener(s, f)\n            }\n        };\n        if (d.nodeList(t)) return a = t, c = e, u = n, Array.prototype.forEach.call(a, function (t) {\n            t.addEventListener(c, u)\n        }), {\n            destroy: function () {\n                Array.prototype.forEach.call(a, function (t) {\n                    t.removeEventListener(c, u)\n                })\n            }\n        };\n        if (d.string(t)) return o = t, r = e, i = n, h(document.body, o, r, i);\n        throw new TypeError(\"First argument must be a String, HTMLElement, HTMLCollection, or NodeList\");\n        var o, r, i, a, c, u, l, s, f\n    }\n}, function (t, n) {\n    n.node = function (t) {\n        return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType\n    }, n.nodeList = function (t) {\n        var e = Object.prototype.toString.call(t);\n        return void 0 !== t && (\"[object NodeList]\" === e || \"[object HTMLCollection]\" === e) && \"length\" in t && (0 === t.length || n.node(t[0]))\n    }, n.string = function (t) {\n        return \"string\" == typeof t || t instanceof String\n    }, n.fn = function (t) {\n        return \"[object Function]\" === Object.prototype.toString.call(t)\n    }\n}, function (t, e, n) {\n    var a = n(7);\n\nfunction i(t, e, n, o, r) {\n    var i = function (e, n, t, o) {\n        return function (t) {\n            t.delegateTarget = a(t.target, n), t.delegateTarget && o.call(e, t)\n        }\n    }.apply(this, arguments);\n    return t.addEventListener(n, i, r), {\n        destroy: function () {\n            t.removeEventListener(n, i, r)\n        }\n    }\n}\nt.exports = function (t, e, n, o, r) {\n    return \"function\" == typeof t.addEventListener ? i.apply(null, arguments) : \"function\" == typeof n ? i.bind(null, document).apply(null, arguments) : (\"string\" == typeof t && (t = document.querySelectorAll(t)), Array.prototype.map.call(t, function (t) {\n        return i(t, e, n, o, r)\n    }))\n}\n\n}, function (t, e) {\n    if (\"undefined\" != typeof Element && !Element.prototype.matches) {\n        var n = Element.prototype;\n        n.matches = n.matchesSelector || n.mozMatchesSelector || n.msMatchesSelector || n.oMatchesSelector || n.webkitMatchesSelector\n    }\n    t.exports = function (t, e) {\n        for (; t && 9 !== t.nodeType;) {\n            if (\"function\" == typeof t.matches && t.matches(e)) return t;\n            t = t.parentNode\n        }\n    }\n}])\n});\n```\n\n\n\n- 创建`codeShrink.js`文件夹，写入下面代码：\n\n```js\n// 代码块收缩\n\n$(function () {\n  var $code_expand = $('<i class=\"fa fa-chevron-down code-expand\" title=\"折叠代码\" aria-hidden=\"true\"></i>');\n\n  $('.code-area').prepend($code_expand);\n  $('.code-expand').on('click', function () {\n    if ($(this).parent().hasClass('code-closed')) {\n      $(this).siblings('pre').find('code').show();\n      $(this).parent().removeClass('code-closed');\n    } else {\n      $(this).siblings('pre').find('code').hide();\n      $(this).parent().addClass('code-closed');\n    }\n  });\n});\n```\n\n\n\n\n\n\n- **2.然后在`matery.css`中添加`CSS`代码**\n\n\n\n```css\ncode {\n    padding: 1px 5px;\n    font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n    /* font-size: 0.91rem; */\n    color: #e96900;\n    background-color: #f8f8f8;\n    border-radius: 2px;\n}\n\npre code {\n    padding: 0;\n    color: #e8eaf6;\n    background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n    padding: 1.2em;\n    margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color: #e8eaf6;\n    white-space: pre-wrap !important;\n} */\n\n.line-numbers-rows {\n    border-right-width: 0px !important;\n}\n\n.line-numbers {\n    padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n    margin: 1rem 0 !important;\n    background: #272822;\n    overflow: auto;\n    border-radius: 0.35rem;\n    tab-size: 4;\n}\n\n\npre {\n    padding: 1.5rem !important;\n    margin: 1rem 0 !important;\n    background: #272822;\n    overflow: auto;\n    border-radius: 0.35rem;\n    tab-size: 4;\n}\n\npre::before {\n    content: \"\";\n    height: 16px;\n    margin-bottom: 0;\n    display: block;\n}\n\npre::after {\n    content: \" \";\n    position: absolute;\n    border-radius: 50%;\n    background: #ff5f56;\n    width: 12px;\n    height: 12px;\n    top: 0;\n    left: 12px;\n    margin-top: 12px;\n    -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n    box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n    padding: 1px 5px;\n    font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;\n    font-size: 0.91rem;\n    color: #e96900;\n    background-color: #f8f8f8;\n    border-radius: 2px;\n}\n\n.code_copy {\n    position: absolute;\n    top: 0.7rem;\n    right: 35px;\n    z-index: 1;\n    filter: invert(50%);\n    cursor: pointer;\n}\n\n.code_lang {\n    position: absolute;\n    top: 1.2rem;\n    right: 60px;\n    line-height: 0;\n    font-weight: bold;\n    font-family: normal;\n    z-index: 1;\n    filter: invert(50%);\n    cursor: pointer;\n} \n\n.code-expand {\n    position: absolute;\n    top: 4px;\n    right: 0px;\n    filter: invert(50%);\n    padding: 7px 10px;\n    z-index: 1;\n    cursor: pointer;\n    transition: all .3s;\n    transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n    transform: rotate(-180deg) !important;\n    transition: all .3s;\n}\n\n.code-closed pre::before {\n    height: 0px;\n}\n\npre code {\n    padding: 0;\n    color: #e8eaf6;\n    background-color: #272822;\n}\n\npre[class*=\"language-\"] {\n    padding: 1.2em;\n    margin: .5em 0;\n}\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n    color: #e8eaf6;\n    white-space: pre-wrap !important;\n}\n\n```\n\n\n\n\n\n\n\n\n- **3.最后在post.ejs中添加如下代码：**\n\n\n\n```js\n<script type=\"text/javascript\" src=\"/libs/codeBlock/codeBlockFuction.js\"></script>\n<!-- 代码语言 -->\n<script type=\"text/javascript\" src=\"/libs/codeBlock/codeLang.js\"></script>\n<!-- 代码块复制 -->\n<script type=\"text/javascript\" src=\"/libs/codeBlock/codeCopy.js\"></script>\n<script type=\"text/javascript\" src=\"/libs/codeBlock/clipboard.min.js\"></script>\n<!-- 代码块收缩 -->\n<script type=\"text/javascript\" src=\"/libs/codeBlock/codeShrink.js\"></script> \n<!-- 代码块折行 -->\n<style type=\"text/css\">code[class*=\"language-\"], pre[class*=\"language-\"] { white-space: pre !important; }</style>\n```\n\n\n\n\n\n\n最后三连看看效果吧~","slug":"Hexo-博客代码块样式美化","published":true,"updated":"2021-05-18T08:34:57.229Z","_id":"clq6dy48m000qikw0y30o79kl","comments":true,"layout":"post","photos":[],"link":"","html":"<p>下面的代码放置位置基于matery主题，不同的主题可能存在一些差异，但也相差无几，自己琢磨琢磨;另外，如果原有关于代码块配置代码，请删掉，不然可能会发生冲突导致无法展示效果。</p>\n<h2 id=\"1】预览\"><a href=\"#1】预览\" class=\"headerlink\" title=\"1】预览\"></a>1】预览</h2><ul>\n<li>直接看效果：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E4%BB%A3%E7%A0%81%E5%9D%97%E7%BE%8E%E5%8C%96/QQ%E5%9B%BE%E7%89%8720200403235158.png\" alt></p>\n<h2 id=\"2】配置\"><a href=\"#2】配置\" class=\"headerlink\" title=\"2】配置\"></a>2】配置</h2><ul>\n<li><strong>1.首先在<code>themes/matery/source/libs</code>下创建一个<code>codeBlock</code>文件夹，后面在该文件夹下创建五个<code>.js</code>文件</strong></li>\n</ul>\n<ul>\n<li>创建<code>codeBlockFuction.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 代码块功能依赖</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div class=\"code-area\" style=\"position: relative\">&lt;/div>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>创建<code>codeBLang.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 代码块语言识别</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> $highlight_lang <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div class=\"code_lang\" title=\"代码语言\">&lt;/div>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>$highlight_lang<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> code_language <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>code_language<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> lang_name <span class=\"token operator\">=</span> code_language<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"line-numbers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"language-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 首字母大写</span>\nlang_name <span class=\"token operator\">=</span> lang_name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> lang_name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">siblings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".code_lang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>lang_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>创建<code>codeCopy.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> $copyIcon <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;i class=\"fa fa-copy code_copy\" title=\"复制代码\" aria-hidden=\"true\">&lt;/i>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.code-area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepend</span><span class=\"token punctuation\">(</span>$copyIcon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">ClipboardJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.fa-copy'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    target<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>trigger<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> trigger<span class=\"token punctuation\">.</span>nextElementSibling<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>创建<code>clipboard.min.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">/*!\n\n* clipboard.js v2.0.4\n* https://zenorocha.github.io/clipboard.js\n* \n* Licensed MIT © Zeno Rocha\n*/</span> \n<span class=\"token operator\">!</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token string\">\"object\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> module <span class=\"token operator\">?</span> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> define <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd <span class=\"token operator\">?</span> <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">?</span> exports<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">.</span>ClipboardJS <span class=\"token operator\">=</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        i<span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n        l<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        exports<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>exports\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        enumerable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">get</span><span class=\"token punctuation\">:</span> n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> Symbol<span class=\"token punctuation\">.</span>toStringTag <span class=\"token operator\">&amp;&amp;</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Module\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__esModule\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">&amp;</span> t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>__esModule<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            enumerable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> e\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>n <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> t\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>o <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"symbol\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t\n        <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> Symbol<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">\"symbol\"</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> t\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        i <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        a <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        c <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        u <span class=\"token operator\">=</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span><span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> t <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> t\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">!</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cannot call a class as a function\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReferenceError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this hasn't been initialised - super() hasn't been called\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">||</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">?</span> t <span class=\"token punctuation\">:</span> e\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">listenClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"function\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Super expression must either be null or a function, not \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            constructor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                value<span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n                enumerable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                writable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                configurable<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>setPrototypeOf <span class=\"token operator\">?</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"resolveOptions\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>action <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>action <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultAction<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>target <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>target <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>text <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>defaultText<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">===</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> t<span class=\"token punctuation\">.</span>container <span class=\"token punctuation\">:</span> document<span class=\"token punctuation\">.</span>body\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"listenClick\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onClick\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">a<span class=\"token punctuation\">.</span>default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                target<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                text<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                container<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">,</span>\n                trigger<span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">,</span>\n                emitter<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"defaultAction\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"defaultTarget\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"defaultText\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"destroy\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clipboardAction <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"isSupported\"</span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                e <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> t<span class=\"token punctuation\">,</span>\n                n <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span>queryCommandSupported<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                n <span class=\"token operator\">=</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">queryCommandSupported</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token string\">\"data-clipboard-\"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nt<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> l\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"symbol\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> t\n        <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Symbol <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!==</span> Symbol<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">?</span> <span class=\"token string\">\"symbol\"</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> t\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        i <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> e<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>enumerable <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>configurable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"value\"</span> <span class=\"token keyword\">in</span> o <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>writable <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">o</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">=</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">.</span>__esModule <span class=\"token operator\">?</span> o <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> o\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> u <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">!</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cannot call a class as a function\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolveOptions</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"resolveOptions\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"initSelection\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"selectFake\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                    e <span class=\"token operator\">=</span> <span class=\"token string\">\"rtl\"</span> <span class=\"token operator\">==</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"textarea\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token string\">\"12pt\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>margin <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">\"absolute\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span>e <span class=\"token operator\">?</span> <span class=\"token string\">\"right\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"-9999px\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"removeFake\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeHandlerCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fakeElem <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"selectTarget\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"copyText\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                    e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    e <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleResult</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"handleResult\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>emitter<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">?</span> <span class=\"token string\">\"success\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    action<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span>\n                    text<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedText<span class=\"token punctuation\">,</span>\n                    trigger<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">,</span>\n                    clearSelection<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clearSelection<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"clearSelection\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"destroy\"</span><span class=\"token punctuation\">,</span>\n            value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeFake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">set</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">=</span> t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"copy\"</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"cut\"</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"action\" value, use either \"copy\" or \"cut\"'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">get</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_action\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">set</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">||</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">!==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">===</span> t <span class=\"token operator\">?</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">1</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" value, use a valid Element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"copy\"</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"cut\"</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"disabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target <span class=\"token operator\">=</span> t\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">get</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_target\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> u\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> e<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT\"</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"INPUT\"</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">||</span> <span class=\"token string\">\"TEXTAREA\"</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">setSelectionRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">||</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>value\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contenteditable\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                r <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            r<span class=\"token punctuation\">.</span><span class=\"token function\">selectNodeContents</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllRanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> e\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    n<span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        on<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                fn<span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">,</span>\n                ctx<span class=\"token punctuation\">:</span> n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        once<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n​    <span class=\"token keyword\">function</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n​        o<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span>\n​    <span class=\"token punctuation\">}</span>\n​    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">=</span> e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nemit<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n​    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> o <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> o<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span>o<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n​    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\noff<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n​    <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n​        o <span class=\"token operator\">=</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n​        r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n​    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">)</span>\n​        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span>_ <span class=\"token operator\">!==</span> e <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n​    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r <span class=\"token punctuation\">:</span> <span class=\"token keyword\">delete</span> n<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> n\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        h <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>e <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Missing required arguments\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Second argument must be a String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Third argument must be a Function\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> s <span class=\"token operator\">=</span> e<span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            destroy<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                l<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">nodeList</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> a <span class=\"token operator\">=</span> t<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> e<span class=\"token punctuation\">,</span> u <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>forEach<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            destroy<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>forEach<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> o <span class=\"token operator\">=</span> t<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> e<span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">,</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First argument must be a String, HTMLElement, HTMLCollection, or NodeList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> f\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    n<span class=\"token punctuation\">.</span>node <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">1</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>nodeType\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>nodeList <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span> <span class=\"token operator\">!==</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"[object NodeList]\"</span> <span class=\"token operator\">===</span> e <span class=\"token operator\">||</span> <span class=\"token string\">\"[object HTMLCollection]\"</span> <span class=\"token operator\">===</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"length\"</span> <span class=\"token keyword\">in</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">===</span> t<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>string <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">||</span> t <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"[object Function]\"</span> <span class=\"token operator\">===</span> Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">=</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>delegateTarget <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        destroy<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nt<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>addEventListener <span class=\"token operator\">?</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> n <span class=\"token operator\">?</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"string\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Element <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>Element<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> Element<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n        n<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>matchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>mozMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>msMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>oMatchesSelector <span class=\"token operator\">||</span> n<span class=\"token punctuation\">.</span>webkitMatchesSelector\n    <span class=\"token punctuation\">}</span>\n    t<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">9</span> <span class=\"token operator\">!==</span> t<span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"function\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> t<span class=\"token punctuation\">.</span>matches <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n            t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>parentNode\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>创建<code>codeShrink.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token comment\" spellcheck=\"true\">// 代码块收缩</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> $code_expand <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;i class=\"fa fa-chevron-down code-expand\" title=\"折叠代码\" aria-hidden=\"true\">&lt;/i>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.code-area'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">prepend</span><span class=\"token punctuation\">(</span>$code_expand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.code-expand'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-closed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">siblings</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-closed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">siblings</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code-closed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>2.然后在<code>matery.css</code>中添加<code>CSS</code>代码</strong></li>\n</ul>\n<pre class=\"line-numbers language-css\"><code class=\"language-css\"><span class=\"token selector\">code </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Inconsolata, Monaco, Consolas, <span class=\"token string\">'Courier New'</span>, Courier, monospace<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* font-size: 0.91rem; */</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e96900</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#f8f8f8</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre code </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e8eaf6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#272822</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre<span class=\"token attribute\">[class*=\"language-\"]</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.2</span>em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">.5</span>em <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">code<span class=\"token attribute\">[class*=\"language-\"]</span>,\npre<span class=\"token attribute\">[class*=\"language-\"]</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e8eaf6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> pre-wrap <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token selector\">*/\n\n<span class=\"token class\">.line-numbers-rows</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-right-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>px <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.line-numbers</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span>rem <span class=\"token number\">1.5</span>rem <span class=\"token number\">1.5</span>rem <span class=\"token number\">3.2</span>rem <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>rem <span class=\"token number\">0</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#272822</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.35</span>rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">tab-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token selector\">pre </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span>rem <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>rem <span class=\"token number\">0</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#272822</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.35</span>rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">tab-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre<span class=\"token pseudo-element\">::before</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre<span class=\"token pseudo-element\">::after</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#ff5f56</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>px <span class=\"token number\">0</span> <span class=\"token hexcode\">#ffbd2e</span>, <span class=\"token number\">40</span>px <span class=\"token number\">0</span> <span class=\"token hexcode\">#27c93f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>px <span class=\"token number\">0</span> <span class=\"token hexcode\">#ffbd2e</span>, <span class=\"token number\">40</span>px <span class=\"token number\">0</span> <span class=\"token hexcode\">#27c93f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">code </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>px <span class=\"token number\">5</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Inconsolata, Monaco, Consolas, <span class=\"token string\">'Courier New'</span>, Courier, monospace<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.91</span>rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e96900</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#f8f8f8</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.code_copy</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span>rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">35</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">50%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.code_lang</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.2</span>rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">50%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token selector\"><span class=\"token class\">.code-expand</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">50%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span>px <span class=\"token number\">10</span>px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all <span class=\"token number\">.3</span>s<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span>deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.code-closed</span> <span class=\"token class\">.code-expand</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>-<span class=\"token number\">180</span>deg<span class=\"token punctuation\">)</span> <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all <span class=\"token number\">.3</span>s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.code-closed</span> pre<span class=\"token pseudo-element\">::before</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre code </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e8eaf6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#272822</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre<span class=\"token attribute\">[class*=\"language-\"]</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.2</span>em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> <span class=\"token number\">.5</span>em <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">code<span class=\"token attribute\">[class*=\"language-\"]</span>,\npre<span class=\"token attribute\">[class*=\"language-\"]</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode\">#e8eaf6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> pre-wrap <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>3.最后在post.ejs中添加如下代码：</strong></li>\n</ul>\n<pre class=\"line-numbers language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/codeBlock/codeBlockFuction.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 代码语言 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/codeBlock/codeLang.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 代码块复制 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/codeBlock/codeCopy.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/codeBlock/clipboard.min.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 代码块收缩 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/libs/codeBlock/codeShrink.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 代码块折行 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style type<span class=\"token operator\">=</span><span class=\"token string\">\"text/css\"</span><span class=\"token operator\">></span>code<span class=\"token punctuation\">[</span><span class=\"token keyword\">class</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token string\">\"language-\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pre<span class=\"token punctuation\">[</span><span class=\"token keyword\">class</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token string\">\"language-\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> white<span class=\"token operator\">-</span>space<span class=\"token punctuation\">:</span> pre <span class=\"token operator\">!</span>important<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后三连看看效果吧~</p>\n","excerpt":"","more":"<p>下面的代码放置位置基于matery主题，不同的主题可能存在一些差异，但也相差无几，自己琢磨琢磨;另外，如果原有关于代码块配置代码，请删掉，不然可能会发生冲突导致无法展示效果。</p>\n<h2 id=\"1】预览\"><a href=\"#1】预览\" class=\"headerlink\" title=\"1】预览\"></a>1】预览</h2><ul>\n<li>直接看效果：</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.5/Images/posts/%E4%BB%A3%E7%A0%81%E5%9D%97%E7%BE%8E%E5%8C%96/QQ%E5%9B%BE%E7%89%8720200403235158.png\" alt></p>\n<h2 id=\"2】配置\"><a href=\"#2】配置\" class=\"headerlink\" title=\"2】配置\"></a>2】配置</h2><ul>\n<li><strong>1.首先在<code>themes/matery/source/libs</code>下创建一个<code>codeBlock</code>文件夹，后面在该文件夹下创建五个<code>.js</code>文件</strong></li>\n</ul>\n<ul>\n<li>创建<code>codeBlockFuction.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre><code class=\"js\">// 代码块功能依赖\n\n$(function () {\n    $(&#39;pre&#39;).wrap(&#39;&lt;div class=&quot;code-area&quot; style=&quot;position: relative&quot;&gt;&lt;/div&gt;&#39;);\n});</code></pre>\n<ul>\n<li>创建<code>codeBLang.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre><code class=\"js\">// 代码块语言识别\n\n$(function () {\n  var $highlight_lang = $(&#39;&lt;div class=&quot;code_lang&quot; title=&quot;代码语言&quot;&gt;&lt;/div&gt;&#39;);\n\n  $(&#39;pre&#39;).after($highlight_lang);\n  $(&#39;pre&#39;).each(function () {\n    var code_language = $(this).attr(&#39;class&#39;);\n\nif (!code_language) {\n  return true;\n};\nvar lang_name = code_language.replace(&quot;line-numbers&quot;, &quot;&quot;).trim().replace(&quot;language-&quot;, &quot;&quot;).trim();\n\n// 首字母大写\nlang_name = lang_name.slice(0, 1).toUpperCase() + lang_name.slice(1);\n$(this).siblings(&quot;.code_lang&quot;).text(lang_name);\n\n  });\n});</code></pre>\n<ul>\n<li>创建<code>codeCopy.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre><code class=\"js\">$(function () {\n    var $copyIcon = $(&#39;&lt;i class=&quot;fa fa-copy code_copy&quot; title=&quot;复制代码&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&#39;);\n    $(&#39;.code-area&#39;).prepend($copyIcon);\nnew ClipboardJS(&#39;.fa-copy&#39;, {\n    target: function (trigger) {\n        return trigger.nextElementSibling;\n    }\n});\n\n});</code></pre>\n<ul>\n<li>创建<code>clipboard.min.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre><code class=\"js\">/*!\n\n* clipboard.js v2.0.4\n* https://zenorocha.github.io/clipboard.js\n* \n* Licensed MIT © Zeno Rocha\n*/ \n! function (t, e) {\n&quot;object&quot; == typeof exports &amp;&amp; &quot;object&quot; == typeof module ? module.exports = e() : &quot;function&quot; == typeof define &amp;&amp; define.amd ? define([], e) : &quot;object&quot; == typeof exports ? exports.ClipboardJS = e() : t.ClipboardJS = e()\n}(this, function () {\nreturn function (n) {\n    var o = {};\n\nfunction r(t) {\n    if (o[t]) return o[t].exports;\n    var e = o[t] = {\n        i: t,\n        l: !1,\n        exports: {}\n    };\n    return n[t].call(e.exports, e, e.exports, r), e.l = !0, e.exports\n}\nreturn r.m = n, r.c = o, r.d = function (t, e, n) {\n    r.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: n\n    })\n}, r.r = function (t) {\n    &quot;undefined&quot; != typeof Symbol &amp;&amp; Symbol.toStringTag &amp;&amp; Object.defineProperty(t, Symbol.toStringTag, {\n        value: &quot;Module&quot;\n    }), Object.defineProperty(t, &quot;__esModule&quot;, {\n        value: !0\n    })\n}, r.t = function (e, t) {\n    if (1 &amp; t &amp;&amp; (e = r(e)), 8 &amp; t) return e;\n    if (4 &amp; t &amp;&amp; &quot;object&quot; == typeof e &amp;&amp; e &amp;&amp; e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, &quot;default&quot;, {\n            enumerable: !0,\n            value: e\n        }), 2 &amp; t &amp;&amp; &quot;string&quot; != typeof e)\n        for (var o in e) r.d(n, o, function (t) {\n            return e[t]\n        }.bind(null, o));\n    return n\n}, r.n = function (t) {\n    var e = t &amp;&amp; t.__esModule ? function () {\n        return t.default\n    } : function () {\n        return t\n    };\n    return r.d(e, &quot;a&quot;, e), e\n}, r.o = function (t, e) {\n    return Object.prototype.hasOwnProperty.call(t, e)\n}, r.p = &quot;&quot;, r(r.s = 0)\n\n}([function (t, e, n) {\n    &quot;use strict&quot;;\n    var r = &quot;function&quot; == typeof Symbol &amp;&amp; &quot;symbol&quot; == typeof Symbol.iterator ? function (t) {\n            return typeof t\n        } : function (t) {\n            return t &amp;&amp; &quot;function&quot; == typeof Symbol &amp;&amp; t.constructor === Symbol &amp;&amp; t !== Symbol.prototype ? &quot;symbol&quot; : typeof t\n        },\n        i = function () {\n            function o(t, e) {\n                for (var n = 0; n &lt; e.length; n++) {\n                    var o = e[n];\n                    o.enumerable = o.enumerable || !1, o.configurable = !0, &quot;value&quot; in o &amp;&amp; (o.writable = !0), Object.defineProperty(t, o.key, o)\n                }\n            }\n            return function (t, e, n) {\n                return e &amp;&amp; o(t.prototype, e), n &amp;&amp; o(t, n), t\n            }\n        }(),\n        a = o(n(1)),\n        c = o(n(3)),\n        u = o(n(4));\n\nfunction o(t) {\n    return t &amp;&amp; t.__esModule ? t : {\n        default: t\n    }\n}\nvar l = function (t) {\n    function o(t, e) {\n        ! function (t, e) {\n            if (!(t instanceof e)) throw new TypeError(&quot;Cannot call a class as a function&quot;)\n        }(this, o);\n        var n = function (t, e) {\n            if (!t) throw new ReferenceError(&quot;this hasn&#39;t been initialised - super() hasn&#39;t been called&quot;);\n            return !e || &quot;object&quot; != typeof e &amp;&amp; &quot;function&quot; != typeof e ? t : e\n        }(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this));\n        return n.resolveOptions(e), n.listenClick(t), n\n    }\n    return function (t, e) {\n        if (&quot;function&quot; != typeof e &amp;&amp; null !== e) throw new TypeError(&quot;Super expression must either be null or a function, not &quot; + typeof e);\n        t.prototype = Object.create(e &amp;&amp; e.prototype, {\n            constructor: {\n                value: t,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }), e &amp;&amp; (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)\n    }(o, c.default), i(o, [{\n        key: &quot;resolveOptions&quot;,\n        value: function () {\n            var t = 0 &lt; arguments.length &amp;&amp; void 0 !== arguments[0] ? arguments[0] : {};\n            this.action = &quot;function&quot; == typeof t.action ? t.action : this.defaultAction, this.target = &quot;function&quot; == typeof t.target ? t.target : this.defaultTarget, this.text = &quot;function&quot; == typeof t.text ? t.text : this.defaultText, this.container = &quot;object&quot; === r(t.container) ? t.container : document.body\n        }\n    }, {\n        key: &quot;listenClick&quot;,\n        value: function (t) {\n            var e = this;\n            this.listener = (0, u.default)(t, &quot;click&quot;, function (t) {\n                return e.onClick(t)\n            })\n        }\n    }, {\n        key: &quot;onClick&quot;,\n        value: function (t) {\n            var e = t.delegateTarget || t.currentTarget;\n            this.clipboardAction &amp;&amp; (this.clipboardAction = null), this.clipboardAction = new a.default({\n                action: this.action(e),\n                target: this.target(e),\n                text: this.text(e),\n                container: this.container,\n                trigger: e,\n                emitter: this\n            })\n        }\n    }, {\n        key: &quot;defaultAction&quot;,\n        value: function (t) {\n            return s(&quot;action&quot;, t)\n        }\n    }, {\n        key: &quot;defaultTarget&quot;,\n        value: function (t) {\n            var e = s(&quot;target&quot;, t);\n            if (e) return document.querySelector(e)\n        }\n    }, {\n        key: &quot;defaultText&quot;,\n        value: function (t) {\n            return s(&quot;text&quot;, t)\n        }\n    }, {\n        key: &quot;destroy&quot;,\n        value: function () {\n            this.listener.destroy(), this.clipboardAction &amp;&amp; (this.clipboardAction.destroy(), this.clipboardAction = null)\n        }\n    }], [{\n        key: &quot;isSupported&quot;,\n        value: function () {\n            var t = 0 &lt; arguments.length &amp;&amp; void 0 !== arguments[0] ? arguments[0] : [&quot;copy&quot;, &quot;cut&quot;],\n                e = &quot;string&quot; == typeof t ? [t] : t,\n                n = !!document.queryCommandSupported;\n            return e.forEach(function (t) {\n                n = n &amp;&amp; !!document.queryCommandSupported(t)\n            }), n\n        }\n    }]), o\n}();\n\nfunction s(t, e) {\n    var n = &quot;data-clipboard-&quot; + t;\n    if (e.hasAttribute(n)) return e.getAttribute(n)\n}\nt.exports = l\n\n}, function (t, e, n) {\n    &quot;use strict&quot;;\n    var o, r = &quot;function&quot; == typeof Symbol &amp;&amp; &quot;symbol&quot; == typeof Symbol.iterator ? function (t) {\n            return typeof t\n        } : function (t) {\n            return t &amp;&amp; &quot;function&quot; == typeof Symbol &amp;&amp; t.constructor === Symbol &amp;&amp; t !== Symbol.prototype ? &quot;symbol&quot; : typeof t\n        },\n        i = function () {\n            function o(t, e) {\n                for (var n = 0; n &lt; e.length; n++) {\n                    var o = e[n];\n                    o.enumerable = o.enumerable || !1, o.configurable = !0, &quot;value&quot; in o &amp;&amp; (o.writable = !0), Object.defineProperty(t, o.key, o)\n                }\n            }\n            return function (t, e, n) {\n                return e &amp;&amp; o(t.prototype, e), n &amp;&amp; o(t, n), t\n            }\n        }(),\n        a = n(2),\n        c = (o = a) &amp;&amp; o.__esModule ? o : {\n            default: o\n        };\n    var u = function () {\n        function e(t) {\n            ! function (t, e) {\n                if (!(t instanceof e)) throw new TypeError(&quot;Cannot call a class as a function&quot;)\n            }(this, e), this.resolveOptions(t), this.initSelection()\n        }\n        return i(e, [{\n            key: &quot;resolveOptions&quot;,\n            value: function () {\n                var t = 0 &lt; arguments.length &amp;&amp; void 0 !== arguments[0] ? arguments[0] : {};\n                this.action = t.action, this.container = t.container, this.emitter = t.emitter, this.target = t.target, this.text = t.text, this.trigger = t.trigger, this.selectedText = &quot;&quot;\n            }\n        }, {\n            key: &quot;initSelection&quot;,\n            value: function () {\n                this.text ? this.selectFake() : this.target &amp;&amp; this.selectTarget()\n            }\n        }, {\n            key: &quot;selectFake&quot;,\n            value: function () {\n                var t = this,\n                    e = &quot;rtl&quot; == document.documentElement.getAttribute(&quot;dir&quot;);\n                this.removeFake(), this.fakeHandlerCallback = function () {\n                    return t.removeFake()\n                }, this.fakeHandler = this.container.addEventListener(&quot;click&quot;, this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement(&quot;textarea&quot;), this.fakeElem.style.fontSize = &quot;12pt&quot;, this.fakeElem.style.border = &quot;0&quot;, this.fakeElem.style.padding = &quot;0&quot;, this.fakeElem.style.margin = &quot;0&quot;, this.fakeElem.style.position = &quot;absolute&quot;, this.fakeElem.style[e ? &quot;right&quot; : &quot;left&quot;] = &quot;-9999px&quot;;\n                var n = window.pageYOffset || document.documentElement.scrollTop;\n                this.fakeElem.style.top = n + &quot;px&quot;, this.fakeElem.setAttribute(&quot;readonly&quot;, &quot;&quot;), this.fakeElem.value = this.text, this.container.appendChild(this.fakeElem), this.selectedText = (0, c.default)(this.fakeElem), this.copyText()\n            }\n        }, {\n            key: &quot;removeFake&quot;,\n            value: function () {\n                this.fakeHandler &amp;&amp; (this.container.removeEventListener(&quot;click&quot;, this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem &amp;&amp; (this.container.removeChild(this.fakeElem), this.fakeElem = null)\n            }\n        }, {\n            key: &quot;selectTarget&quot;,\n            value: function () {\n                this.selectedText = (0, c.default)(this.target), this.copyText()\n            }\n        }, {\n            key: &quot;copyText&quot;,\n            value: function () {\n                var e = void 0;\n                try {\n                    e = document.execCommand(this.action)\n                } catch (t) {\n                    e = !1\n                }\n                this.handleResult(e)\n            }\n        }, {\n            key: &quot;handleResult&quot;,\n            value: function (t) {\n                this.emitter.emit(t ? &quot;success&quot; : &quot;error&quot;, {\n                    action: this.action,\n                    text: this.selectedText,\n                    trigger: this.trigger,\n                    clearSelection: this.clearSelection.bind(this)\n                })\n            }\n        }, {\n            key: &quot;clearSelection&quot;,\n            value: function () {\n                this.trigger &amp;&amp; this.trigger.focus(), window.getSelection().removeAllRanges()\n            }\n        }, {\n            key: &quot;destroy&quot;,\n            value: function () {\n                this.removeFake()\n            }\n        }, {\n            key: &quot;action&quot;,\n            set: function () {\n                var t = 0 &lt; arguments.length &amp;&amp; void 0 !== arguments[0] ? arguments[0] : &quot;copy&quot;;\n                if (this._action = t, &quot;copy&quot; !== this._action &amp;&amp; &quot;cut&quot; !== this._action) throw new Error(&#39;Invalid &quot;action&quot; value, use either &quot;copy&quot; or &quot;cut&quot;&#39;)\n            },\n            get: function () {\n                return this._action\n            }\n        }, {\n            key: &quot;target&quot;,\n            set: function (t) {\n                if (void 0 !== t) {\n                    if (!t || &quot;object&quot; !== (void 0 === t ? &quot;undefined&quot; : r(t)) || 1 !== t.nodeType) throw new Error(&#39;Invalid &quot;target&quot; value, use a valid Element&#39;);\n                    if (&quot;copy&quot; === this.action &amp;&amp; t.hasAttribute(&quot;disabled&quot;)) throw new Error(&#39;Invalid &quot;target&quot; attribute. Please use &quot;readonly&quot; instead of &quot;disabled&quot; attribute&#39;);\n                    if (&quot;cut&quot; === this.action &amp;&amp; (t.hasAttribute(&quot;readonly&quot;) || t.hasAttribute(&quot;disabled&quot;))) throw new Error(&#39;Invalid &quot;target&quot; attribute. You can\\&#39;t cut text from elements with &quot;readonly&quot; or &quot;disabled&quot; attributes&#39;);\n                    this._target = t\n                }\n            },\n            get: function () {\n                return this._target\n            }\n        }]), e\n    }();\n    t.exports = u\n}, function (t, e) {\n    t.exports = function (t) {\n        var e;\n        if (&quot;SELECT&quot; === t.nodeName) t.focus(), e = t.value;\n        else if (&quot;INPUT&quot; === t.nodeName || &quot;TEXTAREA&quot; === t.nodeName) {\n            var n = t.hasAttribute(&quot;readonly&quot;);\n            n || t.setAttribute(&quot;readonly&quot;, &quot;&quot;), t.select(), t.setSelectionRange(0, t.value.length), n || t.removeAttribute(&quot;readonly&quot;), e = t.value\n        } else {\n            t.hasAttribute(&quot;contenteditable&quot;) &amp;&amp; t.focus();\n            var o = window.getSelection(),\n                r = document.createRange();\n            r.selectNodeContents(t), o.removeAllRanges(), o.addRange(r), e = o.toString()\n        }\n        return e\n    }\n}, function (t, e) {\n    function n() {}\n    n.prototype = {\n        on: function (t, e, n) {\n            var o = this.e || (this.e = {});\n            return (o[t] || (o[t] = [])).push({\n                fn: e,\n                ctx: n\n            }), this\n        },\n        once: function (t, e, n) {\n            var o = this;\n\n​    function r() {\n​        o.off(t, r), e.apply(n, arguments)\n​    }\n​    return r._ = e, this.on(t, r, n)\n},\nemit: function (t) {\n​    for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o &lt; r; o++) n[o].fn.apply(n[o].ctx, e);\n​    return this\n},\noff: function (t, e) {\n​    var n = this.e || (this.e = {}),\n​        o = n[t],\n​        r = [];\n​    if (o &amp;&amp; e)\n​        for (var i = 0, a = o.length; i &lt; a; i++) o[i].fn !== e &amp;&amp; o[i].fn._ !== e &amp;&amp; r.push(o[i]);\n​    return r.length ? n[t] = r : delete n[t], this\n}\n\n}, t.exports = n\n\n}, function (t, e, n) {\n    var d = n(5),\n        h = n(6);\n    t.exports = function (t, e, n) {\n        if (!t &amp;&amp; !e &amp;&amp; !n) throw new Error(&quot;Missing required arguments&quot;);\n        if (!d.string(e)) throw new TypeError(&quot;Second argument must be a String&quot;);\n        if (!d.fn(n)) throw new TypeError(&quot;Third argument must be a Function&quot;);\n        if (d.node(t)) return s = e, f = n, (l = t).addEventListener(s, f), {\n            destroy: function () {\n                l.removeEventListener(s, f)\n            }\n        };\n        if (d.nodeList(t)) return a = t, c = e, u = n, Array.prototype.forEach.call(a, function (t) {\n            t.addEventListener(c, u)\n        }), {\n            destroy: function () {\n                Array.prototype.forEach.call(a, function (t) {\n                    t.removeEventListener(c, u)\n                })\n            }\n        };\n        if (d.string(t)) return o = t, r = e, i = n, h(document.body, o, r, i);\n        throw new TypeError(&quot;First argument must be a String, HTMLElement, HTMLCollection, or NodeList&quot;);\n        var o, r, i, a, c, u, l, s, f\n    }\n}, function (t, n) {\n    n.node = function (t) {\n        return void 0 !== t &amp;&amp; t instanceof HTMLElement &amp;&amp; 1 === t.nodeType\n    }, n.nodeList = function (t) {\n        var e = Object.prototype.toString.call(t);\n        return void 0 !== t &amp;&amp; (&quot;[object NodeList]&quot; === e || &quot;[object HTMLCollection]&quot; === e) &amp;&amp; &quot;length&quot; in t &amp;&amp; (0 === t.length || n.node(t[0]))\n    }, n.string = function (t) {\n        return &quot;string&quot; == typeof t || t instanceof String\n    }, n.fn = function (t) {\n        return &quot;[object Function]&quot; === Object.prototype.toString.call(t)\n    }\n}, function (t, e, n) {\n    var a = n(7);\n\nfunction i(t, e, n, o, r) {\n    var i = function (e, n, t, o) {\n        return function (t) {\n            t.delegateTarget = a(t.target, n), t.delegateTarget &amp;&amp; o.call(e, t)\n        }\n    }.apply(this, arguments);\n    return t.addEventListener(n, i, r), {\n        destroy: function () {\n            t.removeEventListener(n, i, r)\n        }\n    }\n}\nt.exports = function (t, e, n, o, r) {\n    return &quot;function&quot; == typeof t.addEventListener ? i.apply(null, arguments) : &quot;function&quot; == typeof n ? i.bind(null, document).apply(null, arguments) : (&quot;string&quot; == typeof t &amp;&amp; (t = document.querySelectorAll(t)), Array.prototype.map.call(t, function (t) {\n        return i(t, e, n, o, r)\n    }))\n}\n\n}, function (t, e) {\n    if (&quot;undefined&quot; != typeof Element &amp;&amp; !Element.prototype.matches) {\n        var n = Element.prototype;\n        n.matches = n.matchesSelector || n.mozMatchesSelector || n.msMatchesSelector || n.oMatchesSelector || n.webkitMatchesSelector\n    }\n    t.exports = function (t, e) {\n        for (; t &amp;&amp; 9 !== t.nodeType;) {\n            if (&quot;function&quot; == typeof t.matches &amp;&amp; t.matches(e)) return t;\n            t = t.parentNode\n        }\n    }\n}])\n});</code></pre>\n<ul>\n<li>创建<code>codeShrink.js</code>文件夹，写入下面代码：</li>\n</ul>\n<pre><code class=\"js\">// 代码块收缩\n\n$(function () {\n  var $code_expand = $(&#39;&lt;i class=&quot;fa fa-chevron-down code-expand&quot; title=&quot;折叠代码&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&#39;);\n\n  $(&#39;.code-area&#39;).prepend($code_expand);\n  $(&#39;.code-expand&#39;).on(&#39;click&#39;, function () {\n    if ($(this).parent().hasClass(&#39;code-closed&#39;)) {\n      $(this).siblings(&#39;pre&#39;).find(&#39;code&#39;).show();\n      $(this).parent().removeClass(&#39;code-closed&#39;);\n    } else {\n      $(this).siblings(&#39;pre&#39;).find(&#39;code&#39;).hide();\n      $(this).parent().addClass(&#39;code-closed&#39;);\n    }\n  });\n});</code></pre>\n<ul>\n<li><strong>2.然后在<code>matery.css</code>中添加<code>CSS</code>代码</strong></li>\n</ul>\n<pre><code class=\"css\">code {\n    padding: 1px 5px;\n    font-family: Inconsolata, Monaco, Consolas, &#39;Courier New&#39;, Courier, monospace;\n    /* font-size: 0.91rem; */\n    color: #e96900;\n    background-color: #f8f8f8;\n    border-radius: 2px;\n}\n\npre code {\n    padding: 0;\n    color: #e8eaf6;\n    background-color: #272822;\n}\n\npre[class*=&quot;language-&quot;] {\n    padding: 1.2em;\n    margin: .5em 0;\n}\n\ncode[class*=&quot;language-&quot;],\npre[class*=&quot;language-&quot;] {\n    color: #e8eaf6;\n    white-space: pre-wrap !important;\n} */\n\n.line-numbers-rows {\n    border-right-width: 0px !important;\n}\n\n.line-numbers {\n    padding: 1.5rem 1.5rem 1.5rem 3.2rem !important;\n    margin: 1rem 0 !important;\n    background: #272822;\n    overflow: auto;\n    border-radius: 0.35rem;\n    tab-size: 4;\n}\n\n\npre {\n    padding: 1.5rem !important;\n    margin: 1rem 0 !important;\n    background: #272822;\n    overflow: auto;\n    border-radius: 0.35rem;\n    tab-size: 4;\n}\n\npre::before {\n    content: &quot;&quot;;\n    height: 16px;\n    margin-bottom: 0;\n    display: block;\n}\n\npre::after {\n    content: &quot; &quot;;\n    position: absolute;\n    border-radius: 50%;\n    background: #ff5f56;\n    width: 12px;\n    height: 12px;\n    top: 0;\n    left: 12px;\n    margin-top: 12px;\n    -webkit-box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n    box-shadow: 20px 0 #ffbd2e, 40px 0 #27c93f;\n}\n\ncode {\n    padding: 1px 5px;\n    font-family: Inconsolata, Monaco, Consolas, &#39;Courier New&#39;, Courier, monospace;\n    font-size: 0.91rem;\n    color: #e96900;\n    background-color: #f8f8f8;\n    border-radius: 2px;\n}\n\n.code_copy {\n    position: absolute;\n    top: 0.7rem;\n    right: 35px;\n    z-index: 1;\n    filter: invert(50%);\n    cursor: pointer;\n}\n\n.code_lang {\n    position: absolute;\n    top: 1.2rem;\n    right: 60px;\n    line-height: 0;\n    font-weight: bold;\n    font-family: normal;\n    z-index: 1;\n    filter: invert(50%);\n    cursor: pointer;\n} \n\n.code-expand {\n    position: absolute;\n    top: 4px;\n    right: 0px;\n    filter: invert(50%);\n    padding: 7px 10px;\n    z-index: 1;\n    cursor: pointer;\n    transition: all .3s;\n    transform: rotate(0deg);\n}\n\n.code-closed .code-expand {\n    transform: rotate(-180deg) !important;\n    transition: all .3s;\n}\n\n.code-closed pre::before {\n    height: 0px;\n}\n\npre code {\n    padding: 0;\n    color: #e8eaf6;\n    background-color: #272822;\n}\n\npre[class*=&quot;language-&quot;] {\n    padding: 1.2em;\n    margin: .5em 0;\n}\n\ncode[class*=&quot;language-&quot;],\npre[class*=&quot;language-&quot;] {\n    color: #e8eaf6;\n    white-space: pre-wrap !important;\n}\n</code></pre>\n<ul>\n<li><strong>3.最后在post.ejs中添加如下代码：</strong></li>\n</ul>\n<pre><code class=\"js\">&lt;script type=&quot;text/javascript&quot; src=&quot;/libs/codeBlock/codeBlockFuction.js&quot;&gt;&lt;/script&gt;\n&lt;!-- 代码语言 --&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/libs/codeBlock/codeLang.js&quot;&gt;&lt;/script&gt;\n&lt;!-- 代码块复制 --&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/libs/codeBlock/codeCopy.js&quot;&gt;&lt;/script&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/libs/codeBlock/clipboard.min.js&quot;&gt;&lt;/script&gt;\n&lt;!-- 代码块收缩 --&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/libs/codeBlock/codeShrink.js&quot;&gt;&lt;/script&gt; \n&lt;!-- 代码块折行 --&gt;\n&lt;style type=&quot;text/css&quot;&gt;code[class*=&quot;language-&quot;], pre[class*=&quot;language-&quot;] { white-space: pre !important; }&lt;/style&gt;</code></pre>\n<p>最后三连看看效果吧~</p>\n","path":"hexo-bo-ke-dai-ma-kuai-yang-shi-mei-hua.html","permalink":"https://www.yshawlon.cn/hexo-bo-ke-dai-ma-kuai-yang-shi-mei-hua.html","tags":[{"name":"Hexo","_id":"clq6dy489000dikw04lptx64o","slug":"Hexo","path":"tags/Hexo/","permalink":"https://www.yshawlon.cn/tags/Hexo/","length":12},{"name":"Code","_id":"clq6dy4ah0031ikw0acy389ar","slug":"Code","path":"tags/Code/","permalink":"https://www.yshawlon.cn/tags/Code/","length":1}],"categories":[{"name":"Blog","_id":"clq6dy47z0005ikw0td637o94","slug":"Blog","path":"categories/Blog/","permalink":"https://www.yshawlon.cn/categories/Blog/","length":12}],"prev":{"title":"使用GitHub备份Hexo博客源文件","date":"2020-04-07T07:52:42.000Z","summary":"Hexo 博客是静态托管的，仓库只有生成的静态网页文件，并没有Hexo的源文件。","slug":"使用GitHub备份Hexo博客源文件","published":true,"updated":"2021-05-18T10:37:59.643Z","_id":"clq6dy4a3002eikw07robru8o","layout":"post","photos":[],"link":"","excerpt":"","path":"shi-yong-github-bei-fen-hexo-bo-ke-yuan-wen-jian.html","permalink":"https://www.yshawlon.cn/shi-yong-github-bei-fen-hexo-bo-ke-yuan-wen-jian.html","__post":true},"next":{"title":"Linux网络设置-CentOS由NAT模式改为桥接模式","date":"2020-04-02T11:09:28.000Z","summary":"这篇文章主要记录将我们的Linux网络设置由NAT模式改为桥接模式。","slug":"Linux网络设置-CentOS由NAT模式改为桥接模式","published":true,"updated":"2021-05-18T10:22:34.191Z","_id":"clq6dy497001kikw09ltvpsib","layout":"post","photos":[],"link":"","excerpt":"","path":"linux-wang-luo-she-zhi-centos-you-nat-mo-shi-gai-wei-qiao-jie-mo-shi.html","permalink":"https://www.yshawlon.cn/linux-wang-luo-she-zhi-centos-you-nat-mo-shi-gai-wei-qiao-jie-mo-shi.html","__post":true},"__post":true}